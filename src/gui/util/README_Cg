Use of Cg for vertex and fragment programs in Qt
-------------------------------------------------

We don't distribute the *.cg files because we don't want the build process of
Qt to require cgc from nVidia to build.

The script src/gui/util/cgtoinclude.sh will compile a Cg program to a file
that can be included in a C(++) program. The file is the output from cgc
quoted as a string.

Note on radial.cg and conical.cg
---------------------------------

The Cg language/compiler does not expose the fragment.position as input
parameters to a fragment program even though this is valid in the
ARB_fragment_program extension.

Therefore these programs have to be hand-edited for now after being compiled.

This consists of changing from the use of fragment.texcoord[0] to
fragment.position. Like this:


Original cgc output:
// Generated by src/gui/util/./cgtoinclude.sh from conical.cg
"!!ARBfp1.0"
.
. ...etc
.
"MUL R0.zw, c[0].xyxy, fragment.texcoord[0].xyxy;"
"ADD R0.z, R0, R0.w;"
"MUL R0.xy, c[0].zwzw, fragment.texcoord[0];"
"ADD R0.w, R0.x, R0.y;"
.
.
. ..etc

Should be changed to:
// Generated by src/gui/util/./cgtoinclude.sh from conical.cg
"!!ARBfp1.0"
.
. ...etc
.
"MUL R0.zw, c[0].xyxy, fragment.position.xyxy;"
"ADD R0.z, R0, R0.w;"
"MUL R0.xy, c[0].zwzw, fragment.position;"
"ADD R0.w, R0.x, R0.y;"
.
.
. ..etc

The changes needed for radial.cg follow exactly the same pattern.
