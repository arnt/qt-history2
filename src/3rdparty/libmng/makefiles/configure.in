dnl Process this file with autoconf to produce a configure script.

AC_INIT(libmng.h)

dnl this call will define PACKAGE and VERSION
dnl please use this as the primary reference for the version number
AM_INIT_AUTOMAKE(libmng, 0.9.2)

dnl pass the version string on the the makefiles
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AM_C_PROTOTYPES
if test "x$U" != "x"; then
  AC_MSG_ERROR(Compiler not ANSI compliant)
fi
AM_PROG_LIBTOOL
AC_PROG_INSTALL

dnl support for files >2GB
AC_SYS_LARGEFILE

dnl Check for required header files
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl need pow and fabs
AC_CHECK_FUNC(pow, , AC_CHECK_LIB(m, pow, LIBS="$LIBS -lm"))

dnl what functionality we want to add (read, write, display). all
dnl on by default
AC_ARG_ENABLE(read,
[  --disable-read          remove support in library to read images],[],[
  AC_DEFINE(MNG_SUPPORT_READ)])
AC_ARG_ENABLE(write,
[  --disable-write         remove support in library to write images],[],[
  AC_DEFINE(MNG_SUPPORT_WRITE)])
AC_ARG_ENABLE(display,
[  --disable-display       remove support in library to display images],[],[
  AC_DEFINE(MNG_SUPPORT_DISPLAY)])

dnl The libraries libz and libpng are required.
AC_ARG_WITH(zlib,
[  --with-zlib[=DIR]       use zlib include/library files in DIR],[
  if test -d "$withval"; then
    CPPFLAGS="$CPPFLAGS -I$withval/include"
    LDFLAGS="$LDFLAGS -L$withval/lib"
  fi
])

AC_CHECK_HEADER(zlib.h,
    AC_CHECK_LIB(z, gzread, , AC_MSG_ERROR(zlib library not found)),
    AC_MSG_ERROR(zlib header not found))

dnl check for lcms library
AC_ARG_WITH(lcms,
[  --with-lcms[=DIR]       use lcms include/library files in DIR], [
  if test "$withval" != "no" -a "$withval" != "yes"; then
    # Save in case test with directory specified fails
    _cppflags=${CPPFLAGS}
    _ldflags=${LDFLAGS}
    _restore=1

    CPPFLAGS="${CPPFLAGS} -I$withval/include/lcms"
    LDFLAGS="${LDFLAGS} -L$withval/lib"
  fi

  AC_CHECK_HEADER(lcms.h,
    AC_CHECK_LIB(lcms, cmsCreateRGBProfile, [
      LIBS="$LIBS -llcms"
      AC_DEFINE(MNG_INCLUDE_LCMS)], [
      test $_restore -eq 1 && CPPFLAGS=$_cppflags LDFLAGS=$_ldflags
      AC_MSG_WARN(lcms library not found)]),
    test $_restore -eq 1 && CPPFLAGS=$_cppflags LDFLAGS=$_ldflags
    AC_MSG_WARN(lcms header not found))])

dnl check for jpeg library
AC_ARG_WITH(jpeg,
[  --with-jpeg[=DIR]       use jpeg include/library files in DIR], [
  if test "$withval" != "no" -a "$withval" != "yes"; then
    # Save in case test with directory specified fails
    _cppflags=${CPPFLAGS}
    _ldflags=${LDFLAGS}
    _restore=1

    CPPFLAGS="${CPPFLAGS} -I$withval/include"
    LDFLAGS="${LDFLAGS} -L$withval/lib"
  fi

  AC_CHECK_HEADER(jpeglib.h,
    AC_CHECK_LIB(jpeg, jpeg_read_header, [
      LIBS="$LIBS -ljpeg"], [
      test $_restore -eq 1 && CPPFLAGS=$_cppflags LDFLAGS=$_ldflags
      AC_MSG_WARN(jpeg library not found)]),
    test $_restore -eq 1 && CPPFLAGS=$_cppflags LDFLAGS=$_ldflags
    AC_MSG_WARN(jpeg header not found))])

AC_OUTPUT(Makefile)
