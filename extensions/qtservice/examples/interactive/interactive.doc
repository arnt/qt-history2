/*! \page qtservice-example-interactive.html
    \title An Interactive Service

    The service in this example displays a simple GUI, and
    can run both as a standalone application and as a NT
    service.

    It demonstrates how to subclass the QtService class,
    the use of run(), stop(), pause(), resume() and isRunning(), 
    and implements a standard commandline parameter parsing.

    \quotefile interactive/main.cpp
    The InteractiveService class implements the pure virtual methods 
    run() and stop() as well as the virtual methods pause() and resume().
    A private member of type \c QLabel* holds a reference to the GUI.
    \printuntil };

    The constructor propagates the service name to the \c QtService
    constructor, and passes TRUE for both parameters \c canPause and
    \c interactive to indicate that the service implements pause and 
    resume, and that the service requires to open a user interface.
    \printuntil }

    The implementation of run() creates a QApplication object and
    passes the commandline parameter to the constructor.
    \printuntil QApplication

    Depending on whether the run() is called in the context of a
    standalone execution or a service the GUI is created with
    different contents.
    \printto move
    The user interface is moved to the topleft corner of the primary
    screen and displayed.
    \printuntil show

    Finally, the event loop is entered
    \printuntil }

    The implementation of stop() calls the \link QApplication::quit()
    quit() \endlink slot of the QApplication object to have the event
    loop exit, and the implementation of run() return.
    \printuntil }

    The implementation of pause() and resume() simple hide and show
    the user interface.
    \printto int main

    The main entry point function creates the service object, and parses
    the commandline argument. If the argument could not be parsed a help
    screen is printed.
    \printuntil -v(ersion)
    \printto } else {
    If no argument has been provided (ie. the program has been started by 
    the service control manager) the service is started.
    \printuntil return 0;
    \printuntil }


    To build the example you must first build the \link qtservice.html
    QtService \endlink library. Then run qmake and your make tool in 
    \c examples/interactive.
*/
