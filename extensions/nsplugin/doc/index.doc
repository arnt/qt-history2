/****************************************************************************
** $Id: index.doc,v 1.1 1997/09/24 16:00:51 warwick Exp $
**
** Index page
**
** Copyright (C) 1995-1997 by Troll Tech AS.  All rights reserved.
**
*****************************************************************************/

#if defined(DEBUG)
static char ident[] = "$Id: index.doc,v 1.1 1997/09/24 16:00:51 warwick Exp $";
#endif

/*! \page index.html

<title>Qt-based LiveConnect Plugins</title>
</head>

<body bgcolor=#ffffff>
<h1 align=center>Qt-based LiveConnect Plugins for Netscape and Explorer</h1>

<hr>

<p>
The Qt-based Netscape Plugin software makes it easy to write
plugins
such that they can be used on both Unix/Linux and Windows/95/NT,
in the Netscape and MS-Explorer, and any other
WWW browser supporting the same protocol.

<h2>How-to</h2>

<ol>
 <li>Build the Netscape Plugin extension library, found in the
	<tt>extensions/nsplugin/src</tt> directory of your Qt distribution.
	This produces a static library to be linked with your plugin code.
 <li>Read the <a href=annotated.html>plugin class documentation</a>, and
	examine the example plugins listed below.
 <li>Do most of your development as a stand-alone Qt application - debugging
	Netscape Plugins is cumbersome.
 <li>Note the platform-specific build steps below.
 <li>Read about the raw plugin interface
	<a href=http://developer.netscape.com/library/documentation/communicator/plugin/index.htm>
	in Netscape's handbook.</a>
 <li>If files viewed by a plugin are provided by an HTTP server
	(using a <tt>http://...</tt> URL) then
	the server must be configured to send the correct MIME type
	for the file, such as by editing the <tt>mime.types</tt> file
	of Apache.  If the files are viewed via a <tt>file://...</tt>
	URL, then the browser will use the filename extension to decide
	the file type (and hence the plugin to load).
</ol>

We are working on streamlining the build process for Qt-based Netscape Plugins.

<h3>Building under X11</h3>

<ul>
 <li>The Makefiles in the examples are appropriate for UNIX/X11.
 <li>The user must install the resulting Shared Object in the Plugins
	directory of the browser.
</ul>

<h3>Building under Windows</h3>

<ul>
 <li>Plugins must be named <tt>np</tt><i>name</i><tt>.dll</tt>,
     or the browser will ignore them.
 <li>The link step must include:
    <ul>
	<li><tt>/def:</tt><i>name</i><tt>.def</tt>
	<li><tt>/dll</tt>
	<li>a compiled resource file defining the
		file/MIME types accepted by the plugin.
    </ul>
 <li>The user must install the resulting DLL in the Plugins directory
	of the browser.
</ul>

<h2>Examples</h2>

The following example programs are available to demonstrate the use of the
Qt GUI toolkit for making Netscape Plugins.
<ul>
 <li><b><a href=examples/grapher/index.html>Grapher</a></b>
	- graph your data <em>without resorting to GIFs</em>
 <li><b><a href=examples/qtimage/index.html>QtImage</a></b>
	- plugin for Qt-supported image formats, <em>including PNG</em>
 <li><b><a href=examples/trivial/index.html>Trivial</a></b>
	- plugin that does almost nothing
</ul>

<h2>Known Bugs</h2>

The Qt-based LiveConnect Plugin binding code has a number of
minor bugs, but is sufficiently stable for most production applications.
All of these have known solutions which we are working to implement.

<ul>
 <li> Crashes on X11 if window is closed via window manager.
 <li> Keyboard problems on Windows.
 <li> Enter/Leave event problems on Windows.
</ul>

*/
