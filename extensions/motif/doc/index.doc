/* Index page for Qt Motif Extension */

/*! \page motif-extension.html

\title Qt Motif Extension
\keyword Motif

\section1 Introduction

The Qt Motif Extension assists the migration of old Xt and Motif based
applications to the more comfortable Qt toolkit.  This extension
replaces the older Xt/Motif Support Extension included with earlier
versions of Qt.

The Qt Motif Extension consists of the following classes:

\list
\i \l QMotif - Provides the basis of the Qt Motif Extension.
\i \l QMotifWidget - Provides the QWidget API for Motif widgets.
\i \l QMotifDialog - Provides the QDialog API for Motif dialogs.
\i \l QXtWidget - The Xt/Motif integration widget from the previous
Xt/Motif extension.  This class is unsupported, and only provided for
projects moving to the new Motif extension.
\endlist

\section2 Additional Documentation

\list

\i \link motif-examples.html Examples\endlink
\i \link motif-walkthrough.html Migration Walkthrough\endlink - A
complete migration of a Motif based program to the Qt toolkit.

\endlist

\section1 Common Problems

\list

\i QMotifWidget and QMotifDialog will use the same Visual, Colormap
and color depth that QApplication uses.  When using CDE, the color
scheme may be incorrect when using a Visual, Colormap and color depth
that is not the default.  To work around this problem, add the
following resource string to your startup files (for example,
\c $HOME/.dt/sessions/current/dt.resources):

\code
    *userColorObj: false
\endcode

\i The X11 headers define some constants that conflict with the Qt
headers.  The solution is to include all Qt headers first, followed by
headers from this extension, and all Xt/Motif and X11 headers last.
For example:

\code
    // Qt headers first
    #include <qapplication.h>
    #include <qpushbutton.h>
    #include <qsocket.h>
    ...

    // QMotif* headers next
    #include <qmotif.h>
    #include <qmotifdialog.h>
    #include <qmotifwidget.h>

    // Xt/Motif and X11 headers last
    #include <X11/Xlib.h>
    #include <Xt/Intrinsic.h>
    #include <Xm/Xm.h>
    ...
\endcode

\endlist

\section1 Known Problems and Limitations

\list

\i In some situations, clipboard transfers between Motif and Qt
widgets will fail, and neither Motif nor Qt seem to recover.  This
will occur when Motif and Qt are using the same X11 display
connection.  This typically happens in 2 situations: 1) QApplication
was created with a foreign display, or 2) QMotifWidget is used in the
widget heirarchy.

The only way to work around this problem is to ensure that Motif and
Qt use a different X11 connection.  However, this solution will not
work when using QMotifWidget in the widget heirarchy (since
QMotifWidget uses the same X11 display connection that Qt does).

This problem will be fixed in a future release.

\endlist

*/
