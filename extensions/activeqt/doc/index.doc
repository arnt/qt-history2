/*! \page activeqt.html

    \title The ActiveQt framework
    \keyword ActiveQt

\if defined(commercial)
    These modules are part of the \link commercialeditions.html Qt
    Enterprise Edition \endlink.
\endif

    Qt's ActiveX support allows Qt/Windows developers to:
    \list 1
    \i Access and use ActiveX controls provided by any ActiveX server
    in their Qt applications.
    \i Make their Qt applications available as ActiveX servers, with
    any number of Qt widgets as ActiveX controls.
    \endlist

    \section1 ActiveQt Modules

    The framework consists of two modules.

    \section2 QAxContainer

    The \link qaxcontainer.html QAxContainer module \endlink is a static
    library implementing QObject and QWidget subclasses, \l QAxObject and
    \l QAxWidget, that act as a containers for COM objects and ActiveX 
    controls. If built against a shared Qt library QAxWidget integrates 
    as a widget plugin into \link designer-manual.book Qt Designer\endlink.

    \link qaxcontainer-examples.html Examples \endlink include a
    web browser application embedding Microsoft Internet Explorer, and an
    address book example synchronizing the contents with Microsoft
    Outlook.

    \section2 QAxServer

    The \link qaxserver.html QAxServer module \endlink is a 
    static library that implements functionality for in-process and 
    executable COM servers. This module provides the QAxAggregated, 
    QAxBindable and QAxFactory classes.

    \link qaxserver-examples.html Examples \endlink include in- and
    out-of-process servers providing different QWidget subclasses as
    ActiveX controls, as well as a \link activeqt-dotnet.html walkthrough
    \endlink how to use those objects in a .NET environment.

    \section1 Additional Information

    \list
    \i \link activeqt-tools.html ActiveQt Tools\endlink.
    \i \link activeqt-examples.html ActiveQt Examples\endlink.
    \endlist
*/

