/*! \page qaxserver-demo-tetrax.html

  \title Play Tetrix!

\raw html
<object ID="QTetrax" width=550 height=370
    CLASSID="CLSID:852558AD-CBD6-4f07-844C-D1E8983CD6FC"
    CODEBASE=http://www.trolltech.com/demos/tetrax.cab>
    <PARAM NAME="score" VALUE="0">
[Object not available! Did you forget to build and register the server?] 
</object>

<form>
    <input type="button" value="Start Game..."
	onClick="QTetrax.startGame()">
</form>

<SCRIPT LANGUAGE=JavaScript>
function QTetrax::gameOver()
{
    alert( "GameOver!" );
}
</SCRIPT>
\endraw
*/

/*! \page qaxserver-example-tetrax.html
    \ingroup qaxserver-examples
  \title A Qt example as a scriptable ActiveX control (executable)


  This example shows how to turn an existing Qt application
  into an ActiveX control server. The ActiveX control is based
  on the Qt tetrix example.

  It demonstrates the use of the default factory provied by the 
  QAXFACTORY_DEFAULT macro, and of QAxFactory::isServer().

  The code changes for the tetrix GUI are minimal (a property \c score, 
  a signal \c gameOver and a slot \c startGame) and provide a better scripting 
  interface for the use of the control in a web environment.

  The implementation of the ActiveX server functionality is only in the
  tetrax.cpp file.
  \quotefile tetrax/tetrax.cpp
  \skipto #include
  The default implementation of the QAxFactory is used through the 
  QAXFACTORY_DEFAULT macro, and exports the QTetrax object specifying
  the five unique IDs required by COM to instantiate and communicate with
  the server.
  \printto int main
  The \c main entry point method instantiates a QApplication object, and
  creates the GUI only if the program is not running as an ActiveX server (ie.
  the program has been started by the user, not by COM). 
  \printto a.exec
  The server enters the application event loop, and destroys the GUI before exiting.
  \printuntil }

  To build the example you must first build the \link qaxserver.html
  QAxServer \endlink library. Then run qmake and your make tool in 
  \c examples/tetrix.

  <hr>

  The \link qaxserver-demo-tetrax.html demonstration \endlink requires your
  Web browser to support ActiveX controls, and scripting to be enabled.

  \quotefile tetrax/tetrax.doc
  \skipuntil raw html
  The "Tetrix" control is embedded using the \c <object> tag. Note that the
  dimensions of the control are provided explicitely, as the control itself
  does not use Qt's layout engine.
  \printuntil </object>
  An HTML button is added to start the game.
  \printuntil </form>
  And an event handler for the \c gameOver() event is implemented in JavaScript
  to display a simple message box.
  \printto endraw
*/
