/*! \page qaxserver-demo-wrapper.html

  \title Standard Qt widgets in an HTML page

\raw html
<SCRIPT LANGUAGE=VBScript>
Sub QPushButton_clicked()
    MsgBox( "Thank you!" )
End Sub

Sub QCheckBox_toggled( state )
    if State = 0 then
        QCheckBox.text = "Check me!"
    else
        QCheckBox.text = "Uncheck me!"
    end if
End Sub
</SCRIPT>

<p>
A QPushButton:<br>
<object ID="QPushButton" CLASSID="CLSID:2B262458-A4B6-468B-B7D4-CF5FEE0A7092">
    <PARAM NAME="text" VALUE="Click me!">
[Object not available! Did you forget to build and register the server?]
</object><br>

<p>
A QCheckBox:<br>
<object ID="QCheckBox" CLASSID="CLSID:6E795de9-872d-43cf-a831-496ef9d86c68">
    <PARAM NAME="text" VALUE="Check me!">
[Object not available! Did you forget to build and register the server?]
</object><br>

<p>
A QRadioButton:<br>
<object ID="QRadioButton" CLASSID="CLSID:afcf78c8-446c-409a-93b3-ba2959039189">
    <PARAM NAME="text" VALUE="Tune me!">
[Object not available! Did you forget to build and register the server?]
</object><br>
\endraw
*/

/*! \page qaxserver-example-wrapper.html

  \title Standard Qt widgets as ActiveX controls (in-process)


  The ActiveX controls in this example are the standard button
  classes QPushButton, QCheckBox and QRadioButton as provided by 
  Qt.

  It demonstrates how to export existing QWidget classes as ActiveX
  controls, and the use of QAxFactory together with the QAXFACTORY_EXPORT
  macro.

  To build the example you must first build the \link qaxserver.html
  QAxServer \endlink library. Then run qmake and your make tool in 
  \c examples/wrapper.

  The \link qaxserver-demo-wrapper.html demonstration \endlink requires your
  WebBrowser to support ActiveX controls, and scripting to be enabled.

  <hr>

  \quotefile wrapper/wrapper.doc
  \skipuntil raw html
  \printto endraw
*/
