<preface>
<title>Preface</title>

<sect1>
    <title>Introduction</title>
    <para id="anxk">
    This manual presents <emphasis>Qt Designer</>, a tool for designing and implementing user
    interfaces built with the Qt cross-platform application development
    framework. <emphasis>Qt Designer</> makes it easy to
    experiment with user interface design. At any time you can generate the
    code required to reproduce the user interface from the files <emphasis>Qt Designer</> produces,
    changing your design as often as you like. If you used the previous
    version you will find yourself immediately productive in the new version
    since the interface is fundamentally unchanged. But you will find new
    widgets and new and improved functionality which have been developed as a
    result of your feedback.
    </para>
    
    <para id="anxx">
    <emphasis>Qt Designer</> helps you build user interfaces with layout tools that move and
    scale your widgets (<emphasis>controls</> in Windows terminology) automatically at
    runtime. The resulting interfaces are both functional and attractive,
    comfortably suiting your users operating environments and preferences. <emphasis>Qt Designer</>
    supports Qt's signals and slots mechanism for type-safe communication
    between widgets. <emphasis>Qt Designer</> includes a code editor which you can use to embed
    your own custom slots inside the generated code. Those who prefer to
    separate generated code from hand crafted code can continue to use the
    subclassing approach pioneered in the first version of <emphasis>Qt Designer</>.
    <indexterm><primary>Controls</primary><seealso>Widgets</seealso></indexterm>

    </para>

    <para id="anyj">
    The tutorial introduces you to <emphasis>Qt Designer</> by
    leading you through the development of example applications. The
    tutorial chapters are written to be as self-contained as possible,
    but all of them assume that you are familiar with the material in
    chapter one which covers the basics of building a Qt application
    with <emphasis>Qt Designer</>. Here's a brief overview of the chapters:
    <itemizedlist> 
    <listitem> 
    <para id="anys">
    Chapter one introduces <emphasis>Qt Designer</> and takes you step by step through the
    creation of a small but fully functional application. Along the way
    you will learn how to create a form and add widgets to it. In the
    course of this chapter you will use the form and property editors to
    customize the application, and learn how to lay out a form using the
    layout tools. You'll also learn how to use Qt's signals and slots
    mechanism and <emphasis>Qt Designer</>'s built-in code editor to make the application
    functional. We will also explain how to use <indexterm><primary>qmake</primary></indexterm>
<command>qmake</> to generate
    a Makefile so that you can compile and run the application. 
    </para>
    </listitem>

    <listitem> 
    <para id="anzg">
    In chapter two we will create a simple text editor. Through writing
    this application you will learn how to create a main window with menus
    and toolbars. We will see how to use Qt's built-in functionality to
    handle common tasks (e.g. copy and paste handling), and how to
    create our own functionality for our own menu items and toolbar
    buttons.
    </para>
    </listitem>

    <listitem>
    <para id="aoae">
    Chapter three introduces some of Qt's value editors.
    </para>
    </listitem>

    <listitem> 
    <para id="anzr">
    Chapter four will show you how to subclass a form; this allows you
    to clearly separate the user interface from the underlying code that
    implements its functionality. Additional information on <indexterm><primary>qmake</primary></indexterm>
<command>qmake</>
    and <indexterm><primary>uic</primary></indexterm>
<command>uic</> is included in this chapter. This chapter will also
    explain how you can dynamically load dialogs from 
    <indexterm><primary>Files and file types</primary><secondary>.ui</secondary></indexterm>
<filename>.ui</> files into your application
    using <indexterm><primary>QWidgetFactory</primary></indexterm>
<classname>QWidgetFactory</> and how to access the
    widgets and sub-widgets of these dialogs. 
    </para>
    </listitem>

    <listitem> 
    <para id="aoak">
    Chapter five explains how you can create your own custom widgets.
    Both the simple method, that was introduced with the first version of
    <emphasis>Qt Designer</>, and the new more powerful method using plugins, are explained.
    </para>
    </listitem>

    <listitem>
    <para id="aoas">
    Chapter six introduces Qt's SQL classes and takes you through an
    example that demonstrates how to execute SQL queries and how to set
    up master-detail relationships, perform drilldown and handle foreign
    keys.
    </para>
    </listitem>

    <listitem>
    <para id="aobb">
    Chapter seven focuses on <emphasis>Qt Designer</> itself, showing you how to customize
    Designer, how to integrate Designer with Visual Studio and how to create
    Makefiles. 
    </para>
    </listitem>

    </itemizedlist>
</para>
</sect1>

<sect1>
<title>What You Should Know</title>

    <para id="aobp">
    This manual assumes that you have some basic knowledge of C++ and the Qt
    application development framework. If you need to learn more about
    C++ or Qt there are a vast number of C++ books available, and a
    small but increasing number of Qt books. Qt comes with extensive
    online documentation and many example applications that you can try.
    </para>
    <para id="aobw">
    The Enterprise Edition of Qt includes the Qt SQL module. In <xref
    linkend="creating-database-applications"> "Creating Database
    Applications" we demonstrate how to build SQL applications with <emphasis>Qt Designer</>;
    this chapter requires some knowledge of SQL and relational
    databases.
    </para>

</sect1>


<sect1 id="whatsnewindesigner">
<title>What's New in <emphasis>Qt Designer</>?</title>
<para id="aocj"> 
This version of <emphasis>Qt Designer</> has a great deal more functionality than its
predecessor. The code for custom slots can be edited directly in
<emphasis>Qt Designer</>; main windows with actions, toolbars and menus can be created;
layouts that incorporate splitters can be used; plugins allow you to
package any number of custom widgets and make them available to
<emphasis>Qt Designer</>; dialogs can be created dynamically from
<indexterm><primary>Files and file types</primary><secondary>.ui</secondary></indexterm>
<filename>.ui</> files. <emphasis>Qt Designer</> incorporates many other enhancements
from small improvements in the user interface to improved efficiency,
for example the ability to share pixmaps across all the forms in an
application.
<figure><title>Qt Designer</title>
<graphic fileref="images\designer.png"></graphic>
</figure>
</para>
</sect1>

<sect1>
<title>Feedback</title>

    <para id="aodd">
    If you have any comments, suggestions, criticisms or even praise
    regarding this manual, please let us know at <literal>doc@trolltech.com</>.
    Bug reports on Qt or <emphasis>Qt Designer</> should be sent to
    <literal>qt-bugs@trolltech.com</>. You might also like to join the
    <emphasis>qt-interest</> mailing list, which <emphasis>Qt Designer</>'s developers read and
    contribute to; see <ulink
    url="http://www.trolltech.com">http://www.trolltech.com</>for
    further details.
    </para>
    
</sect1>

</preface>
