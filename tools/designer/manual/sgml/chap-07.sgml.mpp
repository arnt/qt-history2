<chapter>
<title>The Dialogs</title>

    <para>
    This chapter lists all the dialogs in Qt Designer. Whenever you
    open a dialog during your work and are not exactly sure how to
    operate it, you can either use the What's This help or the online
    help or read about it here. The dialog explanations in this
    chapter are sorted alphabetically by dialog title so that you can
    find the description of the dialog you are looking for quickly and
    easily.
    </para>

    <para>
    Since the meaning of the <guilabel>Help</>, <guibutton>OK</>, and
    <guibutton>Cancel</> buttons should be self-explanatory, they are
    not included in the individual dialogs unless there is something
    particular about them.
    </para>

    <sect1>
    <title>The About Dialog</title>

	<figure>
	    <title>The About dialog</title>
	    <graphic format="gif" fileref="images/about-dlg.gif"></graphic>
	</figure>

	<para>
	This dialog shows Qt Designer's introductory screen and
	version number. Use this dialog if you want to report a bug
	but are not sure which version of Qt Designer you are using.
	</para>
    </sect1>

    <sect1>
    <title>The Connection Editor Dialog (Edit Connections)</title>

	<figure>
	    <title>The connection editor dialog</title>
	    <graphic format="gif" fileref="images/connection-editor.gif"></graphic>
	</figure>

	<para>
	This dialog is shown when you use the connection tool to
	connect two GUI elements together and have &ldquo;drawn&rdquo;
	a connection with the mouse. You can also open this dialog by
	clicking <guilabel>Edit</> in the connection viewer (see
	Section 7.3). See Section 3.2 for an introduction to how to
	use this dialog.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Signals</term>
		<listitem>
		<para>
		This list box shows all the signals of the outgoing
		GUI element, i.e., the element where you started to
		drag the mouse. Click on one of the signals to select
		it; this is the signal part of the connection.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Slots</term>
		<listitem>
		<para>
		This list box shows all the slots of the incoming GUI
		element, i.e., the element you released the mouse
		button over. Click on one of the slots to make a
		connection between the outgoing and the incoming GUI
		elements. Be careful: you <emphasis>make</>the
		connection by just clicking on a slot &mdash; clicking
		does not just select the slot. You can, however,
		always remove a connection later.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Connections</term>
		<listitem>
		<para>
		This list box shows all connections that already exist
		between the outgoing and the incoming GUI element. The
		outgoing GUI elements, the signal name, the incoming
		GUI element, and the slot name are listed for each
		connection.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Connect</term>
		<listitem>
		<para>
		Click on this button to make a connection between the
		selected signal and the selected slot. Since clicking
		on a slot makes a connection, you only need this
		button if you operate the dialog from the keyboard.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Edit Slots</term>
		<listitem>
		<para>
		This button lets you edit an existing connection.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Disconnect</term>
		<listitem>
		<para>
		Removes the connection that is currently selected in
		the <guilabel>Connections</>list box.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Connection Viewer Dialog (View Connections)</title>

	<figure>
	    <title>The connection viewer dialog</title>
	    <graphic format="gif" fileref="images/connection-viewer.gif"></graphic>
	</figure>

	<para>
	This dialog is invoked by selecting
	<guimenuitem>Edit|Connections</> from the menu bar. It shows
	the connections between signals and slots that are in place
	for the currently active form. The central, unlabeled list box
	shows the outgoing GUI element, the signal name, the incoming
	GUI element, and the slot name for each connection.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Edit</term>
		<listitem>
		<para>
		Brings up the Connection Editor dialog (see Section
		7.2), which lets you edit all connections between the
		outgoing and incoming GUI elements in the currently
		selected connection.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Disconnect</term>
		<listitem>
		<para>
		Removes the currently selected connection.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Edit Custom Widgets Dialog</title>

	<figure>
	    <title>The custom widgets dialog</title>
	    <graphic format="gif" fileref="images/customwidget-dlg.gif"></graphic>
	</figure>

	<para>
	This dialog lets you create descriptions for custom widgets,
	i.e., widgets that are not included in Qt but that you have
	written yourself or purchased from a third-party manufacturer.
	You can invoke it by selecting <guimenuitem>Tools|Custom|Edit
	Custom Widgets</>. The unlabeled list box to the left always
	shows the list of custom widgets known to Qt Designer.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Widget</term>
		<listitem>
		<para>
		Click on this button to start the description of a new
		custom widget. Qt Designer will create a new
		description with some default values for a widget
		class called <literal>MyCustomWidget</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Widget</term>
		<listitem>
		<para>
		Deletes the description for the currently selected
		custom widget.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Load Descriptions</term>
		<listitem>
		<para>
		Loads a file with descriptions for custom widgets.
		Chapters 9 and 10 explain the format of these files.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Save Descriptions</term>
		<listitem>
		<para>
		Saves the descriptions for the custom widgets to a
		file.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Definitions Tab Page</title>

	<para>
	On this tab page you specify some general properties of the
	custom widget, such as what the class is called and how it
	should be represented in Qt Designer.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Class</term>
		<listitem>
		<para>
		Fill in the class name of the custom widget in this
		field.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Header file</term>
		<listitem>
		<para>
		Fill in the name of the header file for the custom
		widget class in this field. By clicking on the button
		labeled <guilabel>...</> next to the entry
		field, you can bring up a file selection dialog to
		make selection of the header filename easier. Finally,
		in the combo box next to the button you can select
		whether the header file should be included globally
		(by surrounding the filename with
		<literal>&lt;&gt;</>in the include statement) or
		locally (by surrounding the filename with
		<literal>&ldquo;&rdquo;</>).
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Pixmap</term>
		<listitem>
		<para>
		The row labeled <guilabel>pixmap</> shows the pixmap
		that Qt Designer uses to represent your custom widget
		(in the menu and in the toolbar). The Qt logo is used
		by default, but you can select another pixmap by
		clicking on the button labeled
		<guilabel>...</> .
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Size Hint</term>
		<listitem>
		<para>
		In this row you can specify the size hint for the
		custom widget, i.e., the size at which the widget
		displays best. If there is no such size for your
		widget, or the size hint can only be computed
		dynamically because it is dependent on runtime
		characteristics, leave the default <literal>-1, -1</>
		here.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Size Policy</term>
		<listitem>
		<para>
		In this row you can specify the horizontal and
		vertical size policies for the custom widget. For an
		explanation of the possible values, please see the Qt
		Reference Documentation.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Signals Tab Page</title>

	<para>
	On this tab page you specify the signals of your custom
	widget. The central, unlabeled list box lists all the signals
	together with their parameters.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Signal</term>
		<listitem>
		<para>
		Click on this button to insert a new signal entry. By
		default the signal will be called <literal>signal</>
		and will have no parameters.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Signal</term>
		<listitem>
		<para>
		Clicking on this button removes the currently selected
		signal from the list.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Signal</term>
		<listitem>
		<para>
		In this edit field you can edit the name and the
		parameter types of the currently selected signal. Just
		fill in the name of the signal and write the parameter
		types in parentheses.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Slots Tab Page</title>

	<para>
	On this tab page you specify the slots of your custom widget.
	The central, unlabeled list box lists all the slots together
	with their parameters and their access specifiers.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Slot</term>
		<listitem>
		<para>
		Click on this button to insert a new slot entry. By
		default the slot will be called <literal>slot</>. It
		will have no parameters, and the access specifier is
		<literal>public</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Slot</term>
		<listitem>
		<para>
		Clicking on this button removes the currently selected
		slot from the list.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Slot</term>
		<listitem>
		<para>
		In this edit field you can edit the name and the
		parameter types of the currently selected slot. Just
		fill in the name of the slot and write the parameter
		types in parentheses.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Access</term>
		<listitem>
		<para>
		Here you can specify the access specifier of the slot,
		either <literal>public</> or <literal>protected</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Properties Tab Page</title>

	<para>
	On this tab page you specify the properties of your custom
	widget. The central, unlabeled list box lists all the
	properties together with their types.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Property</term>
		<listitem>
		<para>
		Click on this button to insert a new property entry.
		By default, the property will be called
		<literal>property</> and will have the type
		<literal>String</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Property</term>
		<listitem>
		<para>
		Clicking on this button removes the currently selected
		property from the list.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Property</term>
		<listitem>
		<para>
		In this edit field you can edit the name of the
		currently selected property. Just fill in the name of
		the property.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Type</term>
		<listitem>
		<para>
		Here you can specify the type of the property. The
		following types are available: <literal>String</> (a
		Unicode string), <literal>CString</> (an 8-bit
		string), <literal>StringList</> (a list of Unicode
		strings), <literal>bool</> <literal>Int</>,
		<literal>UInt</>, <literal>Font</>, <literal>Color</>,
		<literal>Rect</>, <literal>Point</>, <literal>Size</>,
		<literal>Pixmap</>, <literal>Palette</>,
		<literal>SizePolicy</>, and <literal>Cursor</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Edit Icon View Dialog</title>

	<figure>
	    <title>The icon view editor</title>
	    <graphic format="gif" fileref="images/iconview-editor.gif"></graphic>
	</figure>

	<para>
	This dialog lets you edit the icons that are displayed in a
	<classname>QIconView</> that you have inserted in a form. You
	reach it by selecting <guilabel>Edit</> from the context menu
	of an icon view.
	</para>

	<para>
	The unlabeled list box on the left-hand side shows all
	currently inserted icons together with their labels. By
	default there will be one folder-like icon with the label
	<guilabel>New Item</>.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Item</term>
		<listitem>
		<para>
		Click this button to insert a new icon into the icon
		view.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Item</term>
		<listitem>
		<para>
		Click this button to delete the currently selected
		icon from the icon view.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Item Properties</term>
		<listitem>
		<para>
		In this area you can specify the pixmap and the label
		to be displayed for the currently selected icon. To
		change the label, enter the new text in the
		<guilabel>Text</> field. To change the pixmap which is
		displayed next to the word <guilabel>Pixmap</>, click
		on the button labeled <guilabel>...</> .
		Clicking on the scissors icon removes the pixmap so
		that the current entry is represented only by its
		label.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Edit List Box Dialog</title>

	<figure>
	    <title>The list box editor</title>
	    <graphic format="gif" fileref="images/listbox-editor.gif"></graphic>
	</figure>

	<para>
	This dialog lets you edit entries that are displayed in a list
	box. Access it by selecting <guilabel>Edit</> in the context
	menu of a list box. In the unlabeled list box on the left-hand
	side of the dialog, you will see the entries that are
	currently inserted.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Item</term>
		<listitem>
		<para>
		Click on this button to insert a new entry. By default
		it will have the text <literal>New Item</> and no
		icon.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Item</term>
		<listitem>
		<para>
		Click on this button to delete the currently selected
		entry.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Arrow Buttons</term>
		<listitem>
		<para>
		With the arrow buttons you can change the order of the
		entries in the list box. Clicking on the up-arrow
		button moves the currently selected entry one position
		up; clicking on the down-arrow button moves the entry
		one position down.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Item Properties</term>
		<listitem>
		<para>
		In this area you can specify the pixmap and the label
		to be displayed for the currently selected entry. To
		change the label, enter the new text in the
		<guilabel>Text</> field. To assign or change a pixmap
		which is displayed next to the word
		<guilabel>Pixmap</>, click on the button labeled
		<guilabel>...</> . Clicking on the scissors
		icon removes the pixmap so that the current entry is
		represented only by its label.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Edit List View Dialog</title>

	<figure>
	    <title>The list view editor</title>
	    <graphic format="gif" fileref="images/listview-editor.gif"></graphic>
	</figure>

	<para>
	This dialog lets you edit both the entries that are displayed
	in a list view and the columns of the list view. You reach it
	by selecting <guilabel>Edit</> from the context menu of a list
	view.
	</para>

	<para>
	The dialog is made up of two tab pages: <guilabel>Items</>,
	where you can add, delete, and modify items; and
	<guilabel>Columns</>, where you can do the same with columns.
	</para>
    </sect1>

    <sect1>
    <title>The Items Tab Page</title>

	<para>
	The unlabeled list view on the left-hand side of the dialog
	shows the items similarly to how they will be shown in the
	actual list view in your application. The columns you see here
	are the columns you have specified in the <guilabel>Columns</>
	tab page (see next section). By default there is only one
	column called <literal>Column 1</>.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Item</term>
		<listitem>
		<para>
		Click on this button to insert a new top-level item
		into the list view. By default it will have the name
		<literal>New Item</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>New Subitem</term>
		<listitem>
		<para>
		Click on this button to insert a new item that is a
		child of the currently selected item. By default it
		will have the name <literal>Subitem</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<para>
	<guilabel>Delete Item</>
	</para>

	<para>
	Click on this button to delete the currently selected item. Be
	careful: if this item has child items, they are deleted as
	well. This is the default behavior of QListView, which is why
	Qt Designer does the same.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Arrow Buttons</term>
		<listitem>
		<para>
		With the up and down buttons you can move an entry up
		and down but not out of its hierarchical level.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<para>
	With the left and right buttons you can move an entry one
	level up or down in the hierarchy.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Item Properties</term>
		<listitem>
		<para>
		In this area you can specify the pixmap and the label
		to be displayed for any of the columns of the
		currently selected item. To change anything, you first
		select the column to be modified in the
		<guilabel>Column</> box. To change the label, enter
		the new text in the <guilabel>Text</> field. To assign
		or change a pixmap which is displayed next to the word
		<guilabel>Pixmap</>, click on the button labeled
		<guilabel>...</> . Clicking on the scissors
		icon removes the pixmap so that the current column of
		the current item displays only a label.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Columns Tab Page</title>

	<para>
	The unlabeled list box on the left-hand side of this tab page
	shows all the currently defined columns in the order in which
	they will appear in the list box.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Column</term>
		<listitem>
		<para>
		Click on this button to insert a new column into the
		list view.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Column</term>
		<listitem>
		<para>
		Click on this button to delete the currently selected
		column from the list view.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Arrow Buttons</term>
		<listitem>
		<para>
		With the arrow buttons you can change the order of the
		columns in the list view. Clicking on the up-arrow
		button moves the currently selected entry one position
		to the left; clicking on the down-arrow button moves
		the entry one position to the right.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Column Properties</term>
		<listitem>
		<para>
		In this area you can specify the pixmap and the label
		to be displayed in the header of the currently
		selected column. To change the label, enter the new
		text in the <guilabel>Text</> field. To assign or
		change a pixmap which is displayed next to the word
		<guilabel>Pixmap</>, click on the button labeled
		<guilabel>...</> . Clicking on the scissors
		icon removes the pixmap so that the current column of
		the current item displays a label only. Finally, you
		can check the <guilabel>Clickable</> check box to let
		a click on the column header select all the items by
		the values in this column, and the
		<guilabel>Resizable</> check box to allow the user to
		resize the column by dragging the space between this
		and the next column in the column header bar.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Edit Multiline Edit Dialog</title>

	<figure>
	    <title>The multiline editor</title>
	    <graphic format="gif" fileref="images/multiline-editor.gif"></graphic>
	</figure>

	<para>
	This dialog lets you edit the text to appear in a multiline
	edit. You reach it by selecting <guilabel>Edit</> from the
	context menu of a multiline edit.
	</para>

	<para>
	This dialog is pretty simple: just enter the text you want
	displayed in the multiline edit in the <guilabel>Text</>
	field.
	</para>
    </sect1>

    <sect1>
    <title>The Edit Slots Dialog</title>

	<figure>
	    <title>The edit slots dialog</title>
	    <graphic format="gif" fileref="images/editslots-dlg.gif"></graphic>
	</figure>

	<para>
	In this dialog, which is available from the menu entry
	<guimenuitem>Edit|Slots</> or via the toolbar, you can edit
	the slots of the currently active form. The unlabeled central
	list box lists all the slots of this form, together with their
	access specifiers and whether they are in use, i.e., whether
	there is any signal connected to them.
	</para>

	<variablelist>
	    <varlistentry>
		<term>New Slot</term>
		<listitem>
		<para>
		Click this button to insert a new slot into the list.
		By default it will be called
		<function>new&lowbar;slot()</>, will have no
		parameters, will have the access specifier
		<literal>public</>, and of course will not be in use.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Slot</term>
		<listitem>
		<para>
		Click this button to delete the currently selected
		slot.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Slot</term>
		<listitem>
		<para>
		In this edit field you can change the name and the
		parameters of the currently selected slot. Simply edit
		the name and enter the parameter types between the
		parentheses.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Access</term>
		<listitem>
		<para>
		Here you can provide the access specifier for the
		slot, which may be either <literal>public</> or
		<literal>protected</>. The access specifier
		<literal>private</> is not possible since you need to
		reimplement the slot in a subclass.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Form Settings Dialog</title>

	<figure>
	    <title>The form settings dialog</title>
	    <graphic format="gif" fileref="images/formsettings-dlg.gif"></graphic>
	</figure>

	<para>
	The form settings dialog lets you specify some things that
	apply to the form as a whole. Most of these settings are used
	when generating the code with <command>uic</>.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Class Name</term>
		<listitem>
		<para>
		Enter here the name that the generated class should
		have. Choose a name that describes the purpose of the
		form well, i.e., follow the same rules you follow for
		other class names.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Comment</term>
		<listitem>
		<para>
		Here you can enter a comment about the form. The
		comment will be saved in the XML <filename>.ui</> file
		but will not show up in the generated code.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Author</term>
		<listitem>
		<para>
		This field is similar to the <guilabel>Comment</>
		field. You can enter your name or your employer's name
		here.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Save Inline</term>
		<listitem>
		<para>
		If you check this option, any pixmaps that are used in
		the dialog (e.g., in pixmap labels) will be stored
		inline in the generated code. The advantage is that
		there cannot be any problems with loading the pixmaps
		at runtime because they will be compiled into the
		executable. But the disadvantage is that it increases
		the size of your executable and thus the startup time
		of the application.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Use Function</term>
		<listitem>
		<para>
		This option is the opposite of the <guilabel>Save
		Inline</> option. If you check it, no pixmaps will be
		saved with the source code&mdash;but <command>uic</>
		will insert calls to a function that you specify in
		the edit field of this option whenever it needs to
		access a pixmap. This function should return a
		<classname>QPixmap</> object.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Includes</term>
		<listitem>
		<para>
		The <guilabel>Includes</> list box shows all the
		header files that will be included in the generated
		source code in addition to the header files needed
		anyway, such as to provide widget class definitions.
		Thus, it is not necessary to add any header files here
		unless you have specific needs.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>New Include</term>
		<listitem>
		<para>
		Click on this button to insert a new entry in the
		include list. By default the header file will be
		called <filename>include.h</> and will be included
		globally. You can change the filename and the
		inclusion locality in the fields below. Globally means
		that the header file name will be surrounded with
		<literal>&lt;&gt;</>; locally means that it will be
		surrounded with <literal>&ldquo;&rdquo;</>.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Delete Include</term>
		<listitem>
		<para>
		Click on this button to delete the currently selected
		header file from the list.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Help Dialog</title>

	<figure>
	    <title>The help dialog</title>
	    <graphic format="gif" fileref="images/help-dlg.gif"></graphic>
	</figure>

	<para>
	You reach the help dialog by selecting
	<guimenuitem>Go|Topics|Index</>from the menu of the help
	browser that you might access via e.g. <guilabel>F1</>. This
	lets you access various parts of the Qt Designer and Qt
	Reference documentation quickly and easily.
	</para>
    </sect1>

    <sect1>
    <title>Contents tab page</title>

	<para>
	This tab page gives you a hierarchical view of all chapters of
	the Qt Designer and Qt Reference documentation. Double-click
	on a topic to display it in the help browser.
	</para>
    </sect1>

    <sect1>
    <title>Index tab page</title>

	<para>
	The Index tab page shows a list of topics that are described
	in the Qt documentation. You can scroll through the list to
	find a topic you are looking for or enter a search word in the
	<guilabel>Look For</>field.
	</para>
    </sect1>

    <sect1>
    <title>Bookmarks tab page</title>

	<para>
	On this tab page you can set and delete bookmarks as well as
	jump to a previously created bookmark. The list on the
	left-hand side shows all bookmarks that you have defined;
	double-click a bookmark to show that page in the browser
	window. By clicking <guilabel>New Bookmark</> you can add a
	bookmark to the currently displayed page; clicking
	<guilabel>Delete Bookmark</> deletes the currently selected
	bookmark.
	</para>
    </sect1>

    <sect1>
    <title>The New Form Dialog</title>

	<figure>
	    <title>The new form dialog</title>
	    <graphic format="gif" fileref="images/newform-dlg.gif"></graphic>
	</figure>

	<para>
	This dialog appears when you create a new form, e.g., by
	selecting <guimenuitem>File|New</> from the menu bar. It lets
	you select one of several base classes and styles for the new
	form. To create the form, just click on one of the items
	provided and click <guibutton>OK</>. Classes and styles
	currently available are shown below. Future editions of Qt
	Designer may provide additional templates; but you can easily
	make your own by designing a form, saving it as a
	<filename>.ui</> file, and copying this file into the
	<guimenuitem>&dollar;QTDIR|tools|designer|templates</>directory.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Dialog</term>
		<listitem>
		<para>
		Use this style for an ordinary dialog, modal or
		modeless. If the dialog has a row of push buttons, it
		is easier to choose one of the other dialog styles
		described here.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Wizard</term>
		<listitem>
		<para>
		Use this style to create a wizard, i.e., a series of
		dialog pages that guide the user through a certain
		task.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Widget</term>
		<listitem>
		<para>
		This is the most common style, without any presets.
		Use it if none of the other styles fit your needs.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Configuration Dialog</term>
		<listitem>
		<para>
		This is a style that can be used for configuration
		dialogs with lots of options. It consists of a list
		box on the left-hand side and a number of tab pages.
		By selecting one of the entries in the list box you
		switch to one of the tab pages. Each tab page should
		contain configuration options that belong together.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Dialog with Buttons (Bottom)</term>
		<listitem>
		<para>
		This style is a dialog with four buttons
		(<guilabel>Apply</>, <guibutton>OK</>,
		<guibutton>Cancel</>, and <guilabel>Help</>) nicely
		arranged at the bottom. Using this style instead of
		the standard dialog style gives you a head start.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Dialog with Buttons (Right)</term>
		<listitem>
		<para>
		This style is similar to the previous one but arranges
		the buttons at the far right of the dialog.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Tab Dialog</term>
		<listitem>
		<para>
		This style creates a tab dialog, i.e., a dialog with a
		number of different tab pages (by default, two) on
		which you can distribute the GUI elements.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Palette Editor Dialog</title>

	<figure>
	    <title>The palette editor</title>
	    <graphic format="gif" fileref="images/paletteeditor-dlg.gif"></graphic>
	</figure>

	<para>
	This dialog appears when you want to edit the palette of a GUI
	element in the property editor and click on the button labeled
	<guilabel>...</>. To understand its use, you should
	be familiar with how Qt handles palettes and widget colors.
	When in doubt, refer to the Qt Reference Documentation for
	<classname>QPalette</>.
	</para>

	<para>
	A palette consists of three color sets: one for the
	<emphasis>active</> state (when the widget is in use, e.g., it
	might have the focus), one for the <emphasis>inactive</> state
	(when the widget is not being used ), and one for the
	<emphasis>disabled</> state (when the widget cannot be used at
	all in the current situation). There is a tab page for each of
	these three states, but since the tab pages are exactly the
	same we will describe them only once here.
	</para>

	<variablelist>
	    <varlistentry>
		<term>Build Palette From Colors</term>
		<listitem>
		<para>
		Checking this box is the easiest way to get to a
		good-looking palette. You select two colors, a color
		for the 3-D effects and a color for the background; Qt
		Designer will compute all other colors so they look
		nice together and have good contrast. In most cases,
		this option is your best bet.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>3-D Effects</term>
		<listitem>
		<para>
		Click on this button to bring up a color selector that
		lets you select a 3-D effect color for the
		automatically computed palette.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Background</term>
		<listitem>
		<para>
		Click on this button to bring up a color selector that
		lets you select a background color for the
		automatically computed palette.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Central Color Roles</term>
		<listitem>
		<para>
		In this area you can select pixmaps and colors for the
		color role currently selected in the color role combo
		box. Refer to the documentation for <classname>QPalette</>
		or <emphasis>Programming with Qt</> for a description
		of the color roles. Make sure to choose colors with
		good contrast!
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>3-D Shadow Effects</term>
		<listitem>
		<para>
		In this area you can select a color for the 3-D shadow
		effects. You have two options: either have the shadow
		effects based on the button color in <guilabel>Central
		Color Roles</> (which you do by checking the box
		labeled <guilabel>Build From Buttoncolor</> and
		selecting the role in the adjacent combo box), or pick
		a color role and select a color for it yourself by
		clicking on the button labeled <guilabel>Select
		Color.</>
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Preview</term>
		<listitem>
		<para>
		The preview area gives a good example of how your
		palette selections will look in reality. By using the
		arrow buttons you can cycle through several previews
		that contain all Qt widgets.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Pixmap Function Dialog</title>

	<para>
	This dialog appears if you specify a pixmap-loading function
	in the <guilabel>Form Settings</>dialog and then select a
	pixmap (i.e., by inserting a pixmap label and choosing
	<guilabel>Choose Pixmap</> from the label's context menu). You
	can specify in the respective fields the arguments that should
	be passed to your pixmap-loading function.
	</para>
    </sect1>

    <sect1>
    <title>The Preferences Dialog</title>

	<figure>
	    <title>The preferences dialog</title>
	    <graphic format="gif" fileref="images/preferences-dlg.gif"></graphic>
	</figure>

	<para>
	You configure Qt Designer's general behavior in this dialog,
	which you reach via the menu item
	<guimenuitem>Edit|Preferences</>,
	</para>

	<variablelist>
	    <varlistentry>
		<term>Background/Color</term>
		<listitem>
		<para>
		Check this option to have a monochrome background. The
		color button next to the option lets you select a
		color.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Background/Pixmap</term>
		<listitem>
		<para>
		Check this option to have a textured background. The
		button next to the option lets you select a pixmap.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Restore last workspace on startup</term>
		<listitem>
		<para>
		If this option is checked, the next time Qt Designer
		starts up it will restore all the windows that were
		open when you last closed it. This is useful if you
		work on a large project and need to exit Qt Designer
		for some reason before you are finished.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Show Splash Screen on startup</term>
		<listitem>
		<para>
		If this option is checked, Qt Designer's splash screen
		will be shown at startup. Uncheck it to reduce Qt
		Designer's startup time.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Documentation Path</term>
		<listitem>
		<para>
		This field should contain the location of your Qt
		documentation. It should be filled in correctly unless
		you have moved your Qt installation somehow and
		separated Qt and Qt Designer. Note that you can use
		the environment variable <literal>&dollar;QTDIR</> in
		this field. You can also use other environment
		variables here. This works in both Windows and Unix,
		but you have to use the Unix syntax
		<literal>&dollar;varname</> instead of the Windows
		syntax <literal>&percnt;varname&percnt;</>, even in
		Windows.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Show Grid</term>
		<listitem>
		<para>
		If this box is checked Qt Designer shows a grid in the
		form of evenly spaced dots on the background of each
		form. This is useful if you use absolute positions
		because it helps you to align your GUI elements
		better. It is not as useful with layout management but
		does not hurt, either.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Snap To Grid</term>
		<listitem>
		<para>
		If this box is checked Qt Designer will let you
		position windows only at grid points, not in between
		them.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Grid-X</term>
		<listitem>
		<para>
		Here you can specify the horizontal distance between
		two grid points.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Grid-Y</term>
		<listitem>
		<para>
		Here you can specify the vertical distance between two
		grid points.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>

	<variablelist>
	    <varlistentry>
		<term>Show Text Labels</term>
		<listitem>
		<para>
		If this option is checked, each toolbar icon has a
		small text label beneath it explaining its purpose.
		</para>
		</listitem>
	    </varlistentry>
	</variablelist>
    </sect1>

    <sect1>
    <title>The Topic Chooser Dialog</title>

	<figure>
	    <title>The topic chooser dialog</title>
	    <graphic format="gif" fileref="images/topicchooser-dlg.gif"></graphic>
	</figure>

	<para>
	You will rarely see this dialog. It is used when you select a
	topic from the index list in the help browser and there is
	more than one entry for the topic. The dialog then lets you
	select the entry you want.
	</para>
    </sect1>
</chapter>
