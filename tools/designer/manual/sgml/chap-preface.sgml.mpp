<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V3.1//EN">
<chapter>
<title>Preface</title>

<sect1>
    <title>Introduction</title>
    \p
    This manual presents \qd, a tool for designing and implementing user
    interfaces built with the Qt cross-platform toolkit. \qd makes it easy to
    experiment with user interface design. At any time you can generate the
    code required to reproduce the user interface from the files \qd produces,
    changing your design as often as you like. If you used the previous
    version you will find yourself immediately productive in the new version
    since the interface is fundamentally unchanged. But you will find new
    widgets and new and improved functionality which have been developed as a
    result of your feedback.
    \P
    
    \p
    \qd helps you build user interfaces with layout tools that move and
    scale your widgets (\i[controls] in Windows terminology) automatically at
    runtime. The resulting interfaces are both functional and attractive,
    comfortably suiting your users operating environments and preferences. \qd
    supports Qt's signals and slots mechanism for type-safe communication
    between widgets. \qd includes a code editor which you can use to embed
    your own custom slots inside the generated code. Those who prefer to
    separate generated code from hand crafted code can continue to use the
    subclassing approach pioneered in the first version of \qd.
    \P

    \p
    This manual has been almost completely rewritten to provide more and
    better examples and to explain the new features and functionality that \qd
    now provides. The manual is divided into two parts. The chapters in the
    first part introduce you to \qd by leading you through the development of
    example applications that demonstrate \qd's facilities. The second part is
    a comprehensive reference.
    \P

    \p
    CHAPTER SUMMARY (DETAILED CONTENTS) GOES HERE
    \P
</sect1>

<sect1>
<title>What You Should Know</title>

    \p
    The manual assumes that you have some basic knowledge of C++ and the Qt
    toolkit. If you need to learn more about C++ or Qt there are a vast number
    of C++ books on the market, and a small but increasing number of Qt books.
    Qt comes with extensive online documentation and many example applications
    that you can try. For the <xref endlink=""> "Creating Database
    Applications" chapter some knowledge of SQL and relational databases is
    required as specified at the beginning of that chapter.
    \P

</sect1>

<sect1>
<title>Feedback</title>

    \p
    Documentation, like the tools it documents, is improved by feedback. If
    you have comments, suggestions, criticisms or even praise, please let us
    know at \c[doc@trolltech.com]. Note that bug reports on Qt or \qd should
    be sent to \c[qt-bugs@trolltech.com]. You might also like to join the
    \i[qt-interest] mailing list, see the website for further details.
    \P
    
    \p
    WHERE DO THEY SEND IDEAS FOR DESIGNER?
    \P

    \p
    Commercial Qt licensees can report bugs or request support through the
    channels assigned to you when you bought your licence. 
    \P

</sect1>

</chapter>
