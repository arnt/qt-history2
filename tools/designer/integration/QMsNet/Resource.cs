namespace QMsNet
{
    using System;
    using System.IO;
    using System.Drawing;
    using System.Windows.Forms;
    using Microsoft.Win32;

    public class Resource
    {
	// The command bar constants.
	public static String CommandBarName = "QMsNet" ;
    
	// All the constants for the NewQtProject command.
	public static int NewQtProjectBitmapID = 1 ;
	public static String 
	    NewQtProject		= "NewQtProject",
	    NewQtProjectButtonText	= "New a Qt Project ",
	    NewQtProjectToolTip		= "This create a new Qt project",
	    NewQtProjectFullCommand	= "QMsNet.NewQtProject";

	// All the constants for the MakeQtProject command.
	public static int MakeQtProjectBitmapID = 2 ;
	public static String 
	    MakeQtProject		= "MakeQtProject",
	    MakeQtProjectButtonText	= "Make a Qt Project ",
	    MakeQtProjectToolTip	= "This will convert the current project to use the Qt library",
	    MakeQtProjectFullCommand	= "QMsNet.MakeQtProject";

	// All the constants for the LoadQtProject command.
	public static int LoadDesignerBitmapID = 3 ;
	public static String 
	    LoadDesigner		= "LoadDesigner",
	    LoadDesignerButtonText	= "Load Designer",
	    LoadDesignerToolTip		= "This will start Qt Designer and load the current project",
	    LoadDesignerFullCommand	= "QMsNet.LoadDesigner";

	// All the constants for the LoadQtProject command.
	public static int LoadQtProjectBitmapID = 4 ;
	public static String 
	    LoadQtProject		= "LoadQtProject",
	    LoadQtProjectButtonText	= "Load a Qt Project ",
	    LoadQtProjectToolTip	= "This will load a project generated by the Qt Designer",
	    LoadQtProjectFullCommand	= "QMsNet.LoadQtProject";

	// All the constants for the SaveQtProject command.
	public static int SaveQtProjectBitmapID = 5 ;
	public static String 
	    SaveQtProject		= "SaveQtProject",
	    SaveQtProjectButtonText	= "Save a Qt Project ",
	    SaveQtProjectToolTip	= "This will Save a project which can be edited in Qt Designer",
	    SaveQtProjectFullCommand	= "QMsNet.SaveQtProject";

	// All the constants for the LoadQtProject command.
	public static int DLLQtProjectBitmapID = 6 ;
	public static String 
	    DLLQtProject		= "DLLProject",
	    DLLQtProjectButtonText	= "DLLify project",
	    DLLQtProjectToolTip		= "This will turn the current Qt App project into a DLL project",
	    DLLQtProjectFullCommand	= "QMsNet.DLLProject";

	// All the constants for the MocQtProject command.
	public static int AddMocStepBitmapID = 7 ;
	public static String 
	    AddMocStep			= "MocFile",
	    AddMocStepButtonText	= "Moc a Qt Project",
	    AddMocStepToolTip		= "This will add a Moc step for the current file",
	    AddMocStepFullCommand	= "QMsNet.MocFile";

	// All the constants for the Monitor Events command.
	public static String 
	    mntEvents			= "MonitorEvents",
	    mntEventsButtonText		= "Monitor Events",
	    mntEventsToolTip		= "This will start event monitoring",
	    mntEventsFullCommand	= "QMsNet.MonitorEvents";

	// All the constants for the Monitor Events command.
	public static String 
	    unmntEvents			= "StopMonitoringEvents",
	    unmntEventsButtonText	= "Stop Monitor Events",
	    unmntEventsToolTip		= "This will stop event monitoring",
	    unmntEventsFullCommand	= "QMsNet.StopMonitoringEvents";
	
	// --------------------------------------------------------------------------------------
	// Temporary
	// --------------------------------------------------------------------------------------
	private static Bitmap icnLoad = null;
	private static Bitmap icnSave = null;
	private static Bitmap readImage( String str ) {
	    RegistryKey rk = Registry.LocalMachine.OpenSubKey( "Software\\Trolltech\\Integration\\QMsNet" );
	    byte[] buffer = (byte[])rk.GetValue( str );
	    MemoryStream mstr = new MemoryStream( buffer, 0, buffer.Length, false, false );
	    Bitmap bmp = new Bitmap( mstr, false );
	    if ( bmp == null )
		MessageBox.Show( "Ops! Couldn't load image from registry! - " + str );
	    return bmp;
	}
	public static Bitmap loadIcon() {
	    if ( icnLoad == null )
		icnLoad = readImage( "loadIcon" );
	    return icnLoad;
	}
	public static Bitmap saveIcon() {
	    if ( icnSave == null )
		icnSave = readImage( "loadSave" );
	    return icnSave;
	}
    }
}
