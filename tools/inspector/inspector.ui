<!DOCTYPE UI><UI version="3.0" stdsetdef="1">
<class>InspectorBase</class>
<comment>*********************************************************************
** Copyright (C) 2003 Trolltech AS.  All rights reserved.
**
** This file is part of Qt Designer.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
** licenses may use this file in accordance with the Qt Commercial License
** Agreement provided with the Software.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.trolltech.com/gpl/ for GPL licensing information.
** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
**   information about Qt Commercial License Agreements.
**
** Contact info@trolltech.com if any conditions of this licensing are
** not clear to you.
**
*********************************************************************</comment>
<include location="local" impldecl="in implementation">qsettings.h</include>
<include location="local" impldecl="in implementation">cppparser.h</include>
<include location="local" impldecl="in implementation">qfiledialog.h</include>
<include location="local" impldecl="in implementation">qlibrary.h</include>
<include location="local" impldecl="in implementation">private/qcom_p.h</include>
<include location="local" impldecl="in implementation">qregexp.h</include>
<variable>QStringList headerFiles</variable>
<widget class="QMainWindow">
    <property name="name">
        <cstring>InspectorBase</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>704</width>
            <height>608</height>
        </rect>
    </property>
    <property name="caption">
        <string>Component Inspector</string>
    </property>
    <grid>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <property name="margin">
            <number>11</number>
        </property>
        <property name="spacing">
            <number>6</number>
        </property>
        <widget class="QListView" row="0" column="0">
            <column>
                <property name="text">
                    <string>Filename</string>
                </property>
                <property name="clickable">
                    <bool>true</bool>
                </property>
                <property name="resizeable">
                    <bool>true</bool>
                </property>
            </column>
            <property name="name">
                <cstring>libraryList</cstring>
            </property>
            <property name="selectionMode">
                <enum>Extended</enum>
            </property>
            <property name="rootIsDecorated">
                <bool>true</bool>
            </property>
        </widget>
        <widget class="QGroupBox" row="0" column="1">
            <property name="name">
                <cstring>GroupBox1</cstring>
            </property>
            <property name="title">
                <string>&amp;Interfaces</string>
            </property>
            <grid>
                <property name="margin">
                    <number>11</number>
                </property>
                <property name="spacing">
                    <number>6</number>
                </property>
                <widget class="QListView" row="0" column="0" rowspan="1" colspan="3">
                    <column>
                        <property name="text">
                            <string>Name</string>
                        </property>
                        <property name="clickable">
                            <bool>true</bool>
                        </property>
                        <property name="resizeable">
                            <bool>true</bool>
                        </property>
                    </column>
                    <column>
                        <property name="text">
                            <string>UUID</string>
                        </property>
                        <property name="clickable">
                            <bool>true</bool>
                        </property>
                        <property name="resizeable">
                            <bool>true</bool>
                        </property>
                    </column>
                    <property name="name">
                        <cstring>interfaceList</cstring>
                    </property>
                    <property name="sizePolicy">
                        <sizepolicy>
                            <hsizetype>5</hsizetype>
                            <vsizetype>7</vsizetype>
                        </sizepolicy>
                    </property>
                    <property name="allColumnsShowFocus">
                        <bool>true</bool>
                    </property>
                    <property name="showSortIndicator">
                        <bool>true</bool>
                    </property>
                    <property name="rootIsDecorated">
                        <bool>true</bool>
                    </property>
                </widget>
                <widget class="QPushButton" row="1" column="1">
                    <property name="name">
                        <cstring>newButton</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;New</string>
                    </property>
                </widget>
                <widget class="QPushButton" row="1" column="2">
                    <property name="name">
                        <cstring>removeButton</cstring>
                    </property>
                    <property name="text">
                        <string>&amp;Remove</string>
                    </property>
                </widget>
                <spacer row="1" column="0">
                    <property name="name" stdset="0">
                        <cstring>Spacer1</cstring>
                    </property>
                    <property name="orientation">
                        <enum>Horizontal</enum>
                    </property>
                    <property name="sizeType">
                        <enum>Expanding</enum>
                    </property>
                    <property name="sizeHint">
                        <size>
                            <width>20</width>
                            <height>20</height>
                        </size>
                    </property>
                </spacer>
                <widget class="QLayoutWidget" row="2" column="0" rowspan="1" colspan="3">
                    <property name="name">
                        <cstring>Layout2</cstring>
                    </property>
                    <hbox>
                        <property name="name">
                            <cstring>unnamed</cstring>
                        </property>
                        <property name="margin">
                            <number>0</number>
                        </property>
                        <property name="spacing">
                            <number>6</number>
                        </property>
                        <widget class="QLabel">
                            <property name="name">
                                <cstring>TextLabel1</cstring>
                            </property>
                            <property name="text">
                                <string>Na&amp;me:</string>
                            </property>
                            <property name="buddy" stdset="0">
                                <cstring>nameEdit</cstring>
                            </property>
                        </widget>
                        <widget class="QLineEdit">
                            <property name="name">
                                <cstring>nameEdit</cstring>
                            </property>
                        </widget>
                        <widget class="QLabel">
                            <property name="name">
                                <cstring>TextLabel2</cstring>
                            </property>
                            <property name="text">
                                <string>&amp;Uuid:</string>
                            </property>
                            <property name="buddy" stdset="0">
                                <cstring>uuidEdit</cstring>
                            </property>
                        </widget>
                        <widget class="QLineEdit">
                            <property name="name">
                                <cstring>uuidEdit</cstring>
                            </property>
                        </widget>
                    </hbox>
                </widget>
            </grid>
        </widget>
    </grid>
</widget>
<menubar>
    <property name="name">
        <cstring>menubar</cstring>
    </property>
    <item text="&amp;File" name="PopupMenu_2">
        <action name="actionFileOpen"/>
        <action name="actionRefresh"/>
        <separator/>
        <action name="fileLoadHeader"/>
        <separator/>
        <action name="actionFileExit"/>
    </item>
</menubar>
<toolbars>
    <toolbar dock="2" label="Toolbar" name="Toolbar">
        <property name="name">
            <cstring>toolbar</cstring>
        </property>
        <action name="actionFileOpen"/>
        <action name="actionRefresh"/>
        <action name="fileLoadHeader"/>
    </toolbar>
</toolbars>
<actions>
    <action>
        <property name="name">
            <cstring>actionFileOpen</cstring>
        </property>
        <property name="text">
            <string>Open Library</string>
        </property>
        <property name="menuText">
            <string>&amp;Open Library...</string>
        </property>
        <property name="statusTip">
            <string>Opens a library and shows implemented interfaces</string>
        </property>
        <property name="accel">
            <number>272629839</number>
        </property>
    </action>
    <action>
        <property name="name">
            <cstring>actionFileExit</cstring>
        </property>
        <property name="text">
            <string>Exit</string>
        </property>
        <property name="menuText">
            <string>E&amp;xit</string>
        </property>
        <property name="statusTip">
            <string>Quits the application</string>
        </property>
    </action>
    <action>
        <property name="name">
            <cstring>actionRefresh</cstring>
        </property>
        <property name="text">
            <string>Refresh</string>
        </property>
        <property name="menuText">
            <string>&amp;Refresh</string>
        </property>
        <property name="statusTip">
            <string>Re-queries the selected libraries</string>
        </property>
        <property name="accel">
            <number>272629842</number>
        </property>
    </action>
    <action>
        <property name="name">
            <cstring>fileLoadHeader</cstring>
        </property>
        <property name="text">
            <string>Load Header</string>
        </property>
        <property name="menuText">
            <string>Load &amp;Header</string>
        </property>
        <property name="accel">
            <number>272629832</number>
        </property>
    </action>
</actions>
<connections>
    <connection>
        <sender>actionFileExit</sender>
        <signal>activated()</signal>
        <receiver>InspectorBase</receiver>
        <slot>fileExit()</slot>
    </connection>
    <connection>
        <sender>actionFileOpen</sender>
        <signal>activated()</signal>
        <receiver>InspectorBase</receiver>
        <slot>fileOpen()</slot>
    </connection>
    <connection>
        <sender>nameEdit</sender>
        <signal>textChanged(const QString&amp;)</signal>
        <receiver>InspectorBase</receiver>
        <slot>inameChanged(const QString&amp;)</slot>
    </connection>
    <connection>
        <sender>uuidEdit</sender>
        <signal>textChanged(const QString&amp;)</signal>
        <receiver>InspectorBase</receiver>
        <slot>iuuidChanged(const QString&amp;)</slot>
    </connection>
    <connection>
        <sender>newButton</sender>
        <signal>clicked()</signal>
        <receiver>InspectorBase</receiver>
        <slot>newInterface()</slot>
    </connection>
    <connection>
        <sender>removeButton</sender>
        <signal>clicked()</signal>
        <receiver>InspectorBase</receiver>
        <slot>removeInterface()</slot>
    </connection>
    <connection>
        <sender>interfaceList</sender>
        <signal>selectionChanged(QListViewItem*)</signal>
        <receiver>InspectorBase</receiver>
        <slot>interfaceSelected(QListViewItem*)</slot>
    </connection>
    <connection>
        <sender>actionRefresh</sender>
        <signal>activated()</signal>
        <receiver>InspectorBase</receiver>
        <slot>refresh()</slot>
    </connection>
    <connection>
        <sender>libraryList</sender>
        <signal>selectionChanged()</signal>
        <receiver>InspectorBase</receiver>
        <slot>fileSelectionChanged()</slot>
    </connection>
    <connection>
        <sender>fileLoadHeader</sender>
        <signal>activated()</signal>
        <receiver>InspectorBase</receiver>
        <slot>loadHeader()</slot>
    </connection>
    <slot access="protected" language="C++">init()</slot>
    <slot access="protected" language="C++">destroy()</slot>
    <slot access="protected" language="C++">fileExit()</slot>
    <slot access="protected" language="C++">fileOpen()</slot>
    <slot access="protected" language="C++">fileSelectionChanged()</slot>
    <slot access="protected" language="C++">newInterface()</slot>
    <slot access="protected" language="C++">loadHeader()</slot>
    <slot access="protected" language="C++">refresh()</slot>
    <slot access="protected" language="C++">removeInterface()</slot>
    <slot access="protected" language="C++">inameChanged( const QString &amp;name )</slot>
    <slot access="protected" language="C++">interfaceSelected( QListViewItem *item )</slot>
    <slot access="protected" language="C++">iuuidChanged( const QString &amp;uuid )</slot>
    <slot access="public" language="C++">parseHeader( const QString &amp;file )</slot>
    <slot access="public" language="C++">testInterfaces( QListViewItem *fileItem )</slot>
</connections>
<functions>
    <function name="init()" >{
    QSettings config;
    bool ok;
    QStringList files = config.readListEntry( "/Trolltech/Inspector/Headers", ';', &amp;ok );
    if ( ok ) {
	for ( QStringList::Iterator file = files.begin(); file != files.end(); ++file )
	    parseHeader( *file );
    }
    interfaceList-&gt;setCurrentItem( 0 );    
}</function>
    <function name="destroy()" >{
    QSettings config;
    config.writeEntry( "/Trolltech/Inspector/Headers", headerFiles, ';' );    
}</function>
    <function name="fileExit()" >{
    close();
}</function>
    <function name="fileOpen()" >{
    QStringList files = QFileDialog::getOpenFileNames( "Windows DLL (*.dll);;Shared Object (*.so);;Bundle (*.dylib)" );
    if ( !files.count() )
	return;
    
    QStringList::Iterator file = files.begin();
    while ( file != files.end() ) {
	QListViewItem *fileItem = new QListViewItem( libraryList, *file ); 
	testInterfaces( fileItem );
	++file;
    }
}</function>
    <function name="fileSelectionChanged()" >{
    QListViewItemIterator it( libraryList );
    while ( it.current() ) {
	QListViewItem *item = it.current();
	++it;
	if ( item-&gt;isSelected() ) {
	    actionRefresh-&gt;setEnabled( TRUE );
	    return;
	}
    }
    actionRefresh-&gt;setEnabled( FALSE );
}</function>
    <function name="newInterface()" >{
    QListViewItem *item = new QListViewItem( interfaceList, "IID_NewInterface", "{00000000-0000-0000-0000-000000000000}" );
    interfaceList-&gt;setCurrentItem( item );
    interfaceSelected( item );
    nameEdit-&gt;setFocus();
}</function>
    <function name="loadHeader()" >{
    QStringList files = QFileDialog::getOpenFileNames( "C++ Header File (*.h;*.hxx;*.hpp)" );
    if ( !files.count() )
	return;
    
    QStringList::Iterator file = files.begin();
    while ( file != files.end() ) {
	parseHeader( *file );
	++file;
    }
}</function>
    <function name="refresh()" >{     
    QListViewItem *item = libraryList-&gt;firstChild();
    while ( item ) {
	if ( item-&gt;isSelected() &amp;&amp; !item-&gt;parent() ) {
	    QListViewItem *child = item-&gt;firstChild();  
	    while ( child ) {  
		QListViewItem *temp = child-&gt;nextSibling();  
		delete child;  
		child = temp;  
	    }
	    testInterfaces( item );
	}
	
	item = item-&gt;nextSibling();
    }
}</function>
    <function name="removeInterface()" >{
    delete interfaceList-&gt;currentItem();
}</function>
    <function name="inameChanged(const QString&amp;)" >{
    QListViewItem *item = interfaceList-&gt;currentItem(); 
    if ( item )
    	item-&gt;setText( 0, name );    
}</function>
    <function name="interfaceSelected(QListViewItem*)" >{    
    nameEdit-&gt;setEnabled( item );
    uuidEdit-&gt;setEnabled( item );
    removeButton-&gt;setEnabled( item );
    
    if ( !item )
	return;
    
    nameEdit-&gt;setText( item-&gt;text( 0 ) );
    uuidEdit-&gt;setText( item-&gt;text( 1 ) );
}</function>
    <function name="iuuidChanged(const QString&amp;)" >{
    QListViewItem *item = interfaceList-&gt;currentItem();
    if ( item )
	item-&gt;setText( 1, uuid );
}</function>
    <function name="parseHeader(const QString&amp;)" >{
    if ( !QFile::exists( file ) )
	return;
    
    headerFiles &lt;&lt; file; 
    QMap&lt;QString, Interface&gt; map; 
    parseHeaderFile( file, &amp;map ); 
    QMap&lt;QString, Interface&gt;::Iterator it = map.begin(); 
    while ( it != map.end() ) { 
	Interface iface = *it; 
	++it; 
	
	QListViewItem *item = new QListViewItem( interfaceList, iface.name(), iface.uuid() ); 
	QStringList functions = iface.functionList(); 
	QStringList::Iterator function = functions.begin(); 
	while ( function != functions.end() ) { 
	    QString f = *function; 
	    f.replace( QRegExp( "\\\t" ), " " ); 
	    QListViewItem *fitem = new QListViewItem( item, f ); 
	    fitem-&gt;setSelectable( FALSE ); 
	    ++function; 
	} 
	interfaceList-&gt;setCurrentItem( item ); 
	interfaceSelected( item ); 
    }    
}</function>
    <function name="testInterfaces(QListViewItem*)" >{
    if ( !fileItem )
	return;
   
    QString file = fileItem-&gt;text( 0 );
    QLibrary *library = new QLibrary( file, QLibrary::Immediately ); 
    if ( library-&gt;isLoaded() ) { 
	QListViewItemIterator iidIt( interfaceList ); 
	bool hasInterface = FALSE; 
	while ( iidIt.current() ) { 
	    QListViewItem *iidItem = iidIt.current(); 
	    ++iidIt; 
	    QUnknownInterface *iface;
	    library-&gt;queryInterface( QUuid( iidItem-&gt;text( 1 ) ), &amp;iface ); 
	    if ( iface ) { 
		hasInterface = TRUE; 
		iface-&gt;release(); 
		QListViewItem *iitem = new QListViewItem( fileItem, iidItem-&gt;text( 0 ) ); 
		iitem-&gt;setSelectable( FALSE );
	    } 
	} 
	if ( !hasInterface ) 
	    (void)new QListViewItem( fileItem, "No known interfaces!" ); 
    } else { 
	(void)new QListViewItem( fileItem, "Couldn't load library!" ); 
    } 
    delete library;    
}</function>
</functions>
</UI>
