\chapter Introduction

This document introduces \QA, a tool for presenting on-line
documentation. It also introduces the Qt Reference Documentation which
is accessible using \QA, or with a web browser. The document is
divided into the following sections:

\list
\i Introduction to the Qt Reference Documentation
\i The 1 Minute Guide to using Qt Assistant
\i Qt Assistant in More Detail
\i Adding none Qt Documentation
\endlist

\chapter Introduction to the Qt Reference Documentation

The documentation for the Qt library is written in-line in the \File
.cpp files by the developers themselves. The documentation team
revises the documentation to ensure that it is accurate and usable,
and to provide quality control. The documentation team also writes the
larger texts, such as the class descriptions that introduce a class
along with the concepts the class uses, as well as introducing the
functions and properties that the class provides. 

The documentation focuses on the API rather than the internals, since
we make great efforts to keep our API consistent and compatible with
each new version, but we may change the internals considerably to improve
performance and enhance functionality.

The Qt Reference Documentation consists of almost 1,500 HTML pages
(over 2,500 US letter-sized pages). The overwhelming majority of pages
document Qt classes. Since developers differ in the way they
think and work we provide a variety of approaches to navigating the
documentation set: 

\list

\i The \link classes.html All Classes\endlink page lists every class
in Qt's public API, and consists of several hundred classes.

\i The \link mainclasses.html Main Classes\endlink page lists the
classes you're most likely to use most often, and provides a much
shorter and more managable list than the All Classes list.

\i The \link groups.html Grouped Classes\endlink page presents a list
of groups, each of which leads to a list of related classes, for
example, the \link advanced.html Advanced Widgets\endlink list.

\i The \link hierarchy.html Inheritance Hierarchy\endlink page
presents a list of classes in terms of the hierarchy of Qt classes.

\i The \link functions.html All Functions\endlink page lists all the
functions provided by Qt classes, each one with links to the class(es)
in which it appears.

\endlist

No matter where you find yourself in the Qt documentation, you will
find extensive cross-referencing. Even snippets of example code
contain clickable links, so that for example, if you come across a
class declaration in a code example, the class name will be a
clickable link to the class's documentation.

In addition to the class documentation some of Qt's modules have
extensive descriptions, and there are several overview documents which
describe various aspects of the Qt library; all these are linked from
the reference documentation home page. There are also numerous example
programs in $QTDIR/examples.

\chapter The 1 Minute Guide to using Qt Assistant

Under Windows, \QA is available as a menu option on the Qt menu. On
Unix, run \c{$QTDIR/bin/assistant} from an xterm.

When you start up \QA, you will be presented with a standard
main-window style application, with a menu bar and toolbar. Below
these, on the left hand side is a navigation window called the \e
Sidebar, and on the right, taking up most of the space, is the
documentation window. By default, the Qt Reference Documentation's home
page is shown in the documentation window.

\QA works in a similar way to a web browser. If you click underlined
text (which signifies a cross-reference), the documentation window will
present the relevant page. You can bookmark pages of particular
interest and you can click the \Toolbutton Previous and \Toolbutton
Next toolbar buttons to navigate within the pages you've visited. 

Although \QA can be used just like a web browser to navigate through the
Qt documentation set, \QA offers a powerful means of navigation that
web browsers don't provide. \QA uses an intelligent algorithm to index
all the pages in the documentation sets that it presents so that you
can search for particular words and phrases.

To perform a search, click the \Toolbutton Index tab on the Sidebar
(or click \Key Ctrl+I). In the 'Look For' line edit enter a word, e.g.
'homedirpath'. As you type, words are found and highlighted in a list
beneath the line edit. If the highlighted text matches what you're
looking for, double click it, (or press \Key Enter) and the
documentation window will display the relevant page. You rarely have
to type in the whole word before \QA finds a match.

For some words there may be more than one possible page that is
relevant. For example, enter 'setenabled' in the 'Look For' line edit.
As you type, words are found and highlighted in the list beneath the
line edit, as before. Once the highlighted text matches what you're
looking for, double click it, (or press \Key Enter). In the case of
setEnabled, it is a function name which occurs in several classes, so
a dialog pops up listing the possible choices. Click the choice you're
interested in (or move to it using the \Key Up and \Key Down arrow
keys and press \Key Enter). The relevant page will display in the
documentation window. 

\chapter Qt Assistant in More Detail

\section1 The Sidebar

The sidebar provides three ways of navigating documentation:
\list 1
\i The \Toolbutton Contents tab presents a tree view of the
documentation sets that are available. If you click an item, its
documentation will appear in the documentation window. If you double
click an item or click a '+' sign to the left of an item, the item's
sub-items will appear. Click a sub-item to make its page appear in the
documentation window. Click a '-' sign to the left of an item to hide
its sub-items.
\i The \Toolbutton Index tab is used to look up key words or phrases.
See \l{The 1 Minute Guide to using Qt Assistant} for how to use this
tab.
\i The \Toolbutton Bookmarks tab lists any bookmarks you've made.
Double click a bookmark to make its page appear in the documentation
window. The \Toolbutton Bookmarks tab has a \Button{New Bookmark}
button and a \Button{Delete Bookmark} button at the bottom. Click
\Button{New Bookmark} to bookmark the page that is showing in the
documentation window. Click a bookmark in the list, then click 
\Button{Delete Bookmark} to delete the highlighted bookmark.
\endlist

If you want the documentation window to use as much space as possible,
you can easily hide or show the Sidebar. If the Sidebar is showing,
press \Key Ctrl+T, \Key Ctrl+I or \Key Ctrl+B to hide it. If the
Sidebar is hidden, press \Key Ctrl+T to show it on the Contents tab,
or press \Key Ctrl+I to show it on the Index tab (with the focus in
the 'Look For' line edit box), or press \Key Ctrl+B to show it on the
Bookmarks tab.

The Sidebar is a dock window, so you can drag it to the top, left,
right or bottom of \QA's window, or you can drag it outside \QA to
float it.

\section1 The Toolbar

The toolbar provides fast access to the most common actions.
\list
\i \Toolbutton Previous takes you to the previous page. The menu
option is \Menu Go|Previous and the keyboard shortcut is \Key{Alt+Left
Arrow}.
\i \Toolbutton Next takes you to the next page. The menu
option is \Menu Go|Next and the keyboard shortcut is \Key{Alt+Right
Arrow}.
\i \Toolbutton Home takes you to the home page (normally the home page
of the Qt Reference Documentation). The menu
option is \Menu Go|Home and the keyboard shortcut is \Key{Ctrl+Home}.
\i \Toolbutton Copy copies any selected text to the clipboard. The menu
option is \Menu Edit|Copy and the keyboard shortcut is \Key{Ctrl+C}.
\i \Toolbutton{Find in Text} invokes the \Dialog{Find Text} dialog. The menu
option is \Menu{Edit|Find in Text} and the keyboard shortcut is \Key{Ctrl+F}.
\i \Toolbutton{Print} invokes the \Dialog{Print} dialog. The menu
option is \Menu{File|Print} and the keyboard shortcut is \Key{Ctrl+P}.
\i \Toolbutton{Zoom in} increases the font size. The menu
option is \Menu{View|Zoom in} and the keyboard shortcut is \Key{Ctrl++}.
\i \Toolbutton{Zoom out} decreases the font size. The menu
option is \Menu{View|Zoom out} and the keyboard shortcut is \Key{Ctrl+-}.
\endlist

The remaining toolbar buttons are bookmarks and will vary depending on
your configuration.

\section1 The Menus

\section2 The File Menu

\list
\i \Menu{File|Print} invokes the \Dialog{Print} dialog.
\i \Menu{File|Exit} terminates \QA.
\endlist

\section2 The Edit Menu

\list
\i \Menu{Edit|Copy} copies any selected text to the clipboard.
\i \Menu{Edit|Find in Text} invokes the \Dialog{Find Text} dialog.
\i \Menu{Edit|Settings} invokes the \Dialog{Settings} dialog.
\endlist

\section2 The View Menu

\list
\i \Menu{View|Zoom in} increases the font size.
\i \Menu{View|Zoom out} decreases the font size.
\i \Menu{View|Views|Sidebar} toggles the display of the Sidebar.
\i \Menu{View|Views|Toolbar} toggles the display of the Toolbar.
\i \Menu{View|Views|Line up} lines up the toolbar buttons in the
Toolbar.
\endlist

\section2 The Go Menu

\list
\i \Menu{Go|Previous} display the previous page.
\i \Menu{Go|Next} display the next page.
\i \Menu{Go|home} go to the home page.
\endlist
This menu also has additional items; these are pre-defined bookmarks
that vary depending on your configuration.

\section2 The Bookmarks Menu

\list
\i \Menu{Bookmarks|Add} add the current page to the list of bookmarks.
\endlist
This menu may have additional items, i.e. any bookmarks that you have
already made. If you want to delete a bookmark go to the Bookmarks tab
on the Sidebar.

\section1 The Dialogs

\section2 The Print Dialog

This dialog is platform-specific. It gives access to various printer
options and can be used to print the current page.

\section2 The Find Text Dialog

This dialog is used to find text in the current page. Enter the text
you want to find in the Find line edit. If you check the 'Whole words
only' checkbox, the search will only consider whole words, i.e. if you
search for 'spin' with this checkbox checked it will not match
'spinbox', but will match 'spin'. If you check the 'Case sensitive'
check box then, for example, 'spin' will match 'spin' but not 'Spin'.
You can search Forward or Backward from your current position in the
page by clicking one of the Direction radio buttons. Click the \Button
Find button to search (or search again), and click the \Button Close
button to finish.

\section2 The Settings Dialog

This dialog is used to set your preferences for \QA. In order to 
confirm your changes click \Button OK, respectively \Button Cancel
if you want to keep the previous settings. \QA will remember your 
settings between sessions, including window sizes and positions, 
and which page(s) you have open. The dialog contains the following 
tabs:

\list
\i General Settings

Here you can change the base font used throughout by choosing a 
new font from the Font combobox. You can choose a new fixed-width 
font, e.g. used to show code snippets, by choosing a new font from 
the 'Fixed font' combobox. You can change the color of hypertext 
links by clicking the 'Link color' color button. Uncheck the 
'Underline links' checkbox if you don't want underlined links. 

\i Web Settings 

Some pages contain links to the World Wide Web. In order to get them
displayed you have to specify a webbrowser. You can use either the 
\Button Browse or the line edit to set your favourite browser.

\i Documentation Path

If you want to add your own documentation in the \QA, use the
\Button Add and choose the directory in which the concerning files
are. Read more about adding your own documentation in the next
chapter. If a documentation is obsolete you can remove it by clicking
the \Button Delete.

\i Categories

Every documentation belong to a certain category. Such categories could
be e.g. development, office or multimedia. Since you can add your own
documentation you can also add new categories. Enter in the line edit
the category name and click the \Button Add. Now, the new category
appears in the list on the left site. There is a checkbox in front of
each category. If it is checked all available documentation of this
category will be displayed. You can remove a category by selecting
it and clicking the \Button Delete. For further information about
categories read the next chapter.
\endlist

\chapter Adding none Qt Documentation

If you want to add your own documentation you have to tell \QA where
the new documentation is located and if it belongs to new category.
Furthermore, \QA needs two special xml files. One for the contents 
(contents.xml) and one for the indexwords (index.xml) of the new 
documentation. The names of these files are fixed. Have a look at
section Fileformats to learn more about these files.

\section1 Set documentation path

In order to set the documentation path use the settingsdialog. There 
you can add or remove search paths for additional documentation. Be 
sure that this path contains the files content.xml and index.xml.  

\section1 Adding categories

If the new documentation belongs to a category which is currently 
unknown add this category in the settingsdialog. The spelling have
to be the same as it have been specified in the xml files.

\section1 Fileformats

As mentioned before \QA needs one file for the contents and one for
the index keywords. The only thing which have to be equal in these 
two files is the category.

\section2 Content file

The content file contains the table of contents of the documentation.
The sections can be nested as deep as neccessary. All references should
be relatively. An example of a content file with all avialable tags is
displayed below. 

content.xml:
\code
<docu>
<title ref="index.html" category="development">Development Demo Handbook</title>
<section>
    <title ref="./chap1/chap1.html">Chapter 1</title>
    <section>
        <title ref="./chap1/chap1.html#section1">Section 1</title>
        <section>
            <title ref="./chap1/chap1.html#subsection1">Subsecton 1</title>
        </section>
        <section>
            <title ref="./chap1/chap1.html#subsection2">Subsection 2</title>
        </section>
    </section>
</section>
<section>
    <title ref="./chap2.html">Chapter 2</title>
    <section>
        <title ref="./chap2.html#section1">Section 1</title>
    </section>
</section>
</docu>
\endcode


\section2 Index file

The index file contains all important keywords. Since one keyword
may have more than one reference, add to each reference a description.
This description appears later in the topicchooser. For the structure
of the index file have a look at the following example.

index.xml
\code
<docindex category="development">
<item keyword="demofunction">
    <link descr="Example for Democlass">./examples/democlass.html</link>
    <link descr="Class">./democlass.html</link>
    <link descr="Header">./headers/democlass.html</link>
</item>
<item keyword="another demo">
    <link descr="Class">./anotherclass.html</link>
    <link descr="Header">./headers/anotherclass.html</link>
</item>
</docindex>
\endcode

