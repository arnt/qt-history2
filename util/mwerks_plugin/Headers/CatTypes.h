#ifndef __CATTYPES_H__#define __CATTYPES_H__typedef int CatNodeID;#define NODE_NULL -1#define NODE_ROOT 0#define kCatalogClass   "CodeWarrior.CatalogModelObject"#define kFolderClass    "CodeWarrior.FolderModelObject"#define kTrashNodeClass "CodeWarrior.TrashNode"// internal properties used in the catalog#define kContentsFolder "ContentsFolder"#define kClass          "Class"#define kComments       "Comments"#define kFile           "File"#define kNodeLocked     "Locked"#define kModDate        "Modified"#define kName           "Name"#define kID             "ID"#define kFolderSuffix   "_Contents"#define kDefCatalogExt       "ctlg"#define kDefCatalogFolderExt "ctlgf"// Command group ID for commands in the catalog menu...const long cmdGroup_CatalogMenu			= 10000;// catalog-specific menu commands to go with those defined by the IDE;// such as cmd_Cut, cmd_Copy, etc.const long cmd_CatalogRename			= 10000;	// plugin commands in the range 10000-10999const long cmd_CatalogProperties		= 10001;const long cmd_ShowCatalogBrowser		= 10002;const long cmd_ShowCatalogPalette		= 10003;const long cmd_NewCatalog               = 10004;const long cmd_NewFolder                = 10005;const long cmd_OpenCatalog              = 10006;const long cmd_CloseCatalog             = 10007;const long cmd_ImportControls           = 10008;const long cmd_ShowPrevious             = 10009;const long cmd_ShowNext                 = 10010;const long cmd_ExpandIndexView          = 10011;const long cmd_CollapseIndexView        = 10012;const long cmd_ToggleIndexView          = 10013;const long cmd_CloseCatalogPalette      = 10014;enum UPDATE_TYPE{	UPDATE_NONE = 0,	UPDATE_CHILDREN,	UPDATE_DESCENDANTS};enum CatTransType{	CATTRANS_TYPE_UNKNOWN,	CATTRANS_TYPE_ALIAS,	CATTRANS_TYPE_COPY,	CATTRANS_TYPE_DELETE,	CATTRANS_TYPE_DROP,	CATTRANS_TYPE_EDITPROPERTIES,	CATTRANS_TYPE_LOCK,	CATTRANS_TYPE_MOVE,	CATTRANS_TYPE_PASTE,	CATTRANS_TYPE_RENAME,	CATTRANS_TYPE_UNLOCK};struct CatWindowData{	bool fUseDefSize;	bool fUseDefPos;	SIZE size;	POINT pos;	CatWindowData() : fUseDefSize(true), fUseDefPos(true)	{		pos.x = pos.y = 0;		size.cx = size.cy = 0;	}};#endif // __CATTYPES_H__