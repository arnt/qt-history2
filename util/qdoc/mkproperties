#!/usr/bin/perl
#
# Creates a property index, for example:
#
#                "QSlider/orientation" qslider.html#a8339f
#
# This reads: class QSlider, property "orientation", documentation is
# in file qslider.html, link #a8339f
#
#
# qdoc should generate this table itself, including mkindex and
# mktitleindex. Unfortunately, qdoc is an unmaintainable perl hack, so
# we had to add more unmaintainable perl hacks.
#
# Bug: depends on qdoc's HTML output.  Fixme by rewriting qdoc in C++.
#

%functions;

@lines;
$output = shift;

$inproperties = 0;
$classname;

while ( <ARGV> ) {
  if ( /^<title>Qt Toolkit - (.*) Class<\/title>.*/ ) {
    $classname = $1;
  }

  if (/^<li><span class=\"fn\">.*<a href=\"(.*)\".*<b>(.*)<\/b>/g ) {
    $key = $classname."/".$2;
    $functions{$key} = $1;
  }

  if ( /^<h2>Properties<\/h2>$/ ) {
    $inproperties = 1;
  }

  if ( $inproperties ) {
    if ( /^<\/table>$/ ) {
      $inproperties = 0;
    } else {
      if ( /^<tr><td>.*<td>(.*)<td>(.*)<td>(.*)<td>.*/ ) {
	$func = $2; # get function
	if ( $3 ) {
	  $func = $3; # set function, if available
	}
	$key = $classname."/".$func;
	push( @lines, "\"$classname/$1\" $ARGV$functions{$key}\n" );
      }
    }
  }
}

@lines = sort( @lines );
open( INDEX, "> $output" );
print INDEX @lines;
close( INDEX );
