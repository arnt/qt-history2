; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Qt"
!define PRODUCT_VERSION "%VERSION%"
!define PRODUCT_PUBLISHER "Trolltech"
!define PRODUCT_WEB_SITE "http://www.trolltech.com"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

var KEY1
var KEY2
var KEY3
var DISPLAY_US_LICENSE

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME

; License check
Page custom CheckQtLicense ValidateKey

!define MUI_LICENSEPAGE_RADIOBUTTONS

; US License page
!define MUI_PAGE_CUSTOMFUNCTION_PRE ShowUSLicense
!insertmacro MUI_PAGE_LICENSE "%PACKAGEDIR%\.LICENSE-US"

; NON-US License page
!define MUI_PAGE_CUSTOMFUNCTION_PRE ShowNonUSLicense
!insertmacro MUI_PAGE_LICENSE "%PACKAGEDIR%\.LICENSE"

; Directory page
!insertmacro MUI_PAGE_DIRECTORY

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES

; Finish page
!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\README"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

ReserveFile "checkqtlicense.ini"
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "%DISTNAME%.exe"
InstallDir "$PROGRAMFILES\Qt"
ShowInstDetails show
ShowUnInstDetails show

Section "MainSection" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File /r "%PACKAGEDIR%\*.*"
SectionEnd

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateDirectory "$SMPROGRAMS\Qt"
  CreateShortCut "$SMPROGRAMS\Qt\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\Qt\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  call PatchQt
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

Function .onInit
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "checkqtlicense.ini"
  strcpy $DISPLAY_US_LICENSE "1"
FunctionEnd

Function CheckQtLicense
  !insertmacro MUI_HEADER_TEXT "$(TEXT_IO_TITLE)" "$(TEXT_IO_SUBTITLE)"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "checkqtlicense.ini"
FunctionEnd

Function PatchQt
  qtnsisext::PatchBinary "$INSTDIR\bin\qmake.exe" $INSTDIR
FunctionEnd

Function ValidateKey
  !insertmacro MUI_INSTALLOPTIONS_READ $KEY1 "checkqtlicense.ini" "Field 2" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $KEY2 "checkqtlicense.ini" "Field 4" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $KEY3 "checkqtlicense.ini" "Field 6" "State"
  push $1
  qtnsisext::IsValidLicense $KEY1 $KEY2 $KEY3
  pop $1
  strcmp $1 "0" 0 checkForUS
    goto wrongKey

  checkForUS:
    push $1
    qtnsisext::UsesUsLicense $KEY1 $KEY2 $KEY3
    pop $1
    strcmp $1 "1" 0 nonUS
      strcpy $DISPLAY_US_LICENSE "1"
      goto end
  nonUS:
    strcpy $DISPLAY_US_LICENSE "0"
  goto end
  wrongKey:
    MessageBox MB_ICONEXCLAMATION|MB_RETRYCANCEL "The license key you entered is not valid! Do you want to try it again?" IDRETRY tryAgain 0
    Quit
  tryAgain:
    Abort
  end:
FunctionEnd

Function ShowUSLicense
  strcmp $DISPLAY_US_LICENSE "1" +2
  Abort
FunctionEnd

Function ShowNonUSLicense
  strcmp $DISPLAY_US_LICENSE "0" +2
  Abort
FunctionEnd

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$SMPROGRAMS\Qt\Uninstall.lnk"
  Delete "$SMPROGRAMS\Qt\Website.lnk"

  RMDir "$SMPROGRAMS\Qt"
  RMDir /r "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  SetAutoClose true
SectionEnd

!include WriteEnvStr.nsh
!include WritePathStr.nsh

#
# to set the qt env. varibles
# push "c:\qt"  #QTDIR
# call setQtEnvVariables
#
Function SetQtEnvVariables
  exch $2 ; the installation path = QTDIR
  push $0 ; I think WriteEnvStr mixes up $0 and $1
  push $1
  
  MessageBox MB_ICONINFORMATION|MB_OK "Setting QTDIR to $2"
  DetailPrint "Setting QTDIR to $2"
  push "QTDIR"
  push $2
  Call WriteEnvStr ; set the QTDIR

  MessageBox MB_ICONINFORMATION|MB_OK "Adding $2\bin to PATH"
  DetailPrint "Adding $2\bin to PATH"
  push "$2\bin"
  Call AddToPath ; set the PATH
  
  push "QMAKESPEC"
  Call GetMkSpec
  Call WriteEnvStr ; set the QMAKESPEC

# we don't need this, right?
;  push "INCLUDE"
;  push $2\include;%INCLUDE%
;  Call WriteEnvStr ; set the PATH

  pop $1
  pop $0
  pop $2
FunctionEnd

#
# removes the qt env. varibles
# push "c:\qt"  #QTDIR
# call un.RemoveQtEnvVariables
#
Function un.RemoveQtEnvVariables
  exch $0 ; QTDIR
  
  DetailPrint "Removing QTDIR"
  push "QTDIR"
  Call un.DeleteEnvStr ; removes QTDIR
  
  DetailPrint "Removing $0\bin from the PATH"
  push "$0\bin"
  Call un.RemoveFromPath ; removes qt from the path
  
  DetailPrint "Removing QMAKESPEC"
  push "QMAKESPEC"
  Call un.DeleteEnvStr ; removes QMAKESPEC

  pop $0
FunctionEnd

#
# the result is placed on top of the stack
#
Function GetMkSpec
  push $0

  ReadRegStr $0 HKLM "Software\Microsoft\VisualStudio\8.0" "InstallDir"
  StrCmp $0 "" +1 win32-msvc.net ; found msvc.net 2005

  ReadRegStr $0 HKLM "Software\Microsoft\VisualStudio\7.1" "InstallDir"
  StrCmp $0 "" +1 win32-msvc.net ; found msvc.net 2003

  ReadRegStr $0 HKLM "Software\Microsoft\VisualStudio\7.0" "InstallDir"
  StrCmp $0 "" +1 win32-msvc.net ; found msvc.net 2002

  ReadRegStr $0 HKLM "Software\Microsoft\VisualStudio\6.0\Setup" "VsCommonDir"
  StrCmp $0 "" +1 win32-msvc ; found msvc 6.0

  ReadRegStr $0 HKLM "Software\Intel\Compilers\C++\80" "Major Version"
  StrCmp $0 "" +1 win32-icc ; found icc 8.x

  ; we don't support this compiler, but it doesn't hurt :)
  ReadRegStr $0 HKLM "Software\Intel\Compilers\C++\70" "Major Version"
  StrCmp $0 "" +1 win32-icc ; found icc 7.x

  Goto win32-unknown

  win32-msvc.net:
    pop $0
    push "win32-msvc.net"
    DetailPrint "Setting QMAKESPEC to win32-msvc.net"
    Goto getmkspec_done
  
  win32-msvc:
    pop $0
    push "win32-msvc"
    DetailPrint "Setting QMAKESPEC to win32-msvc"
    Goto getmkspec_done
    
  win32-icc:
    pop $0
    push "win32-icc"
    DetailPrint "Setting QMAKESPEC to win32-icc"
    Goto getmkspec_done

  ; unknown compiler
  win32-unknown:
    pop $0
    push "win32-msvc.net" ; fall back on .net
    DetailPrint "Did not find any compiler, setting QMAKESPEC to win32-msvc.net"

  getmkspec_done:
FunctionEnd

