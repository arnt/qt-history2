#!/usr/bin/perl

$BOGUS="/extensions/|qmutex\.h|qt\.h";
$HEADMARK='Q[A-Z][A-Z][A-Z]*_H';
$STARTMARK='#ifndef QT_H';
$ENDMARK='#endif // QT_H';
$TAIL="#endif // QT_H";
$DIR="$ENV{QTDIR}/include";

if ( $ARGV[0] eq "--fix" ) {
    $fix++;
    shift;
}

opendir(INC, $DIR)
    || die "can't opendir $DIR: $!";
@HEADERS =
    grep {
	m/\.h$/ &&
	!m/^$BOGUS$/ &&
	! -f "$ENV{QTDIR}/src/compat/$_"
    } readdir INC;

open QT_H, ">$DIR/qt.h";

print QT_H
'/****************************************************************************
**
** Qt GUI Toolkit
**
** This header file efficiently includes all Qt GUI Toolkit functionality.
**
** Generated : '.`date`.'
**
** Copyright (C) 1995-2000 Troll Tech AS.  All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
**
** This file may be distributed under the terms of the Q Public License
** as defined by Troll Tech AS of Norway and appearing in the file
** LICENSE.QPL included in the packaging of this file.
**
** Licensees holding valid Qt Professional Edition licenses may use this
** file in accordance with the Qt Professional Edition License Agreement
** provided with the Qt Professional Edition.
**
** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
** information about the Professional Edition licensing, or see
** http://www.trolltech.com/qpl/ for QPL licensing information.
**
*****************************************************************************/

#ifndef QT_H
#define QT_H
';



$include = '#include\s*(["<])([^\n]*)[">]';

H: for $h ( @HEADERS ) {
    open HEADER, "$DIR/$h";
    $content = "" if $fix;
    while (<HEADER>) {
	$content .= $_ if $fix;
	if ( /$STARTMARK/ ) {
	    $incscan=1;
	} elsif ( /$ENDMARK/ ) {
	    $incscan=0;
	    next H;
	} elsif ( /$include/ ) {
	    if ($incscan) {
		$inc=$2;
		$DEP{"$h $inc"}=1;
		$LOCAL{$inc}=($1=='"');
		$FILE{$h}++;
		$FILE{$inc}++;
	    }
	}
    }
    if ( $fix ) {
	#$include = '#include\s*["<][^\n]*[">]';
	$content =~ s/(($include\s)+)/$STARTMARK\n$1$ENDMARK\n/gs;
	open OUT, ">$DIR/$h";
	print OUT $content;
    } else {
	die "No QT_H segment in $h - rerun with --fix to fix ALL headers\n";
    }
}

@FILE=sort keys %FILE;
$N=$#FILE;
$done=0;
# Bubble sort by dependency...
while (!$done) {
    $done=1;
    for $i (1..$N) {
	for $j (0..$i) {
	    if ($DEP{"$FILE[$j] $FILE[$i]"}) {
		# j depends on i, swap
		$t=$FILE[$i];
		$FILE[$i]=$FILE[$j];
		$FILE[$j]=$t;
		$done=0;
	    }
	}
    }
}

for $h ( @FILE ) {
    if ($LOCAL{$h}) {
	print QT_H qq{#include "$h"\n};
    } else {
	print QT_H qq{#include <$h>\n};
    }
}

print QT_H "$TAIL";
