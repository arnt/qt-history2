#!/bin/sh
#
# Creates a new Qt source distribution
#
# Copyright 1996 Troll Tech AS.  All rights reserved.
#
# ----------------------------------------------------------------
#
# Usage:
#	mkdist.generic [options] {commercial|free|trial} {distdir}
#
# Options:
#	-nodoc	Don't generate documentation
#	-local	Copy local distribution from $QTDIR, don't use cvs
#

while true ; do
  case "$1" in
    "-nodoc") nodoc="yes"; shift;;
    "-local") local="yes"; shift;;
    *) break;;
  esac
done

disttype=$1
platform=$2
DISTDIR=$3

unset LANG

x11onlysrc="qpsprn.cpp qprndlg.cpp mprndlg.cpp"
x11onlyhdr="qpsprn.h   qprndlg.h"

unset goodparam1
unset goodparam2

curdir=`/bin/pwd`

echo >&2
echo "Creating a new Qt distribution:" >&2

if [ "${disttype}" = "free" -o "${disttype}" = "commercial" -o "${disttype}" = "trial" ]; then
  goodparam1=yes
  echo "  Distribution type... " ${disttype} >&2
fi

if [ "${platform}" = "x11" -o "${platform}" = "win" ]; then
  goodparam2=yes
  echo "  Platform ............" ${platform} >&2
  echo >&2
fi

if [ "${goodparam1}" = "" -o "${goodparam2}" = "" -o "${DISTDIR}" = "" ]; then
  echo 'Usage: mkdist.generic commercial|free|trial x11|win dist-dir' >&2
  exit
fi

if [ "${disttype}" = "free" -a "${platform}" != "x11" ]; then
  echo 'Impossible. Only X11 versions have a free license!' >&2
  exit
fi

echo "Removing and creating new ${DISTDIR}..." >&2
rm -rf ${DISTDIR} || ( echo unable to remove ${DISTDIR} ; exit 1 )
mkdir ${DISTDIR}
cd ${DISTDIR}

if [ "$local" = "yes" ]; then
  echo "Copying the local Qt archive (doesn't use CVS)..." >&2
  cd ${QTDIR}
  cd ..
  find qt \( -type f -o -type l \) -print | \
    egrep -v 'CVS|.cvsignore|.depend|core$|\.o$|\.a$|\.so|~|#' | \
    tar cfT - - | (cd ${DISTDIR} ; tar xf - )
else
  echo "Exporting the entire Qt archive..." >&2
  cvs -Q export -Dnow qt
fi


VERSION=`grep "#define.*QT_VERSION" qt/src/tools/qglobal.cpp | fmt -1 | grep '"' | sed -e 's/"//g'`
VERSIONMAJOR=`echo $VERSION | sed -e 's/\..*$//'`
echo "Auto-detected the Qt version number -- " $VERSION >&2

echo "Removing beta code..." >&2
cd ${DISTDIR}/qt/src
for d in `make showdirs`; do cd $d ; rm -f `make showbeta`; cd .. ; done

if [ "$nodoc" = "yes" ]; then
  echo "Documentation won't be generated" >& 2
else
  echo "Generating documentation" >&2
  export QTDIR=${DISTDIR}/qt
  make -s -C ${QTDIR}/src include
  mkdir -p ${DISTDIR}/qt/doc/html
  ${DISTDIR}/qt/util/qdoc/qdoc
  if [ "${platform}" = "x11" ]; then
    mkdir -p ${DISTDIR}/qt/doc/man/man1  ${DISTDIR}/qt/doc/man/man3
    ${DISTDIR}/qt/util/qdoc/man
    mv ${DISTDIR}/qt/doc/html ${DISTDIR}/qt/doc/man ${DISTDIR}/qt
    mv ${DISTDIR}/qt/src/moc/moc.1 ${DISTDIR}/qt/man/man1
  fi
  cd ${DISTDIR}
  mv ${DISTDIR}/qt/gif/*.gif ${DISTDIR}/qt/html
fi

echo "Removing local files..." >&2
cd ${DISTDIR}
find qt -name .cvsignore | xargs rm -f
rm -rf qt/doc qt/etc qt/gif
rm -f qt/TODO
rm -rf qt/examples/sheet

echo "Removing kernel .cpp files for other platforms..." >&2
cd ${DISTDIR}/qt/src/kernel
find . -name '*_x11.cpp' -o -name '*_win.cpp' -o -name '*_os2.cpp' \
	| grep -v "_${platform}" | xargs rm -f

if [ "${disttype}" = "free" ]; then
  echo "Adding non-commercial banner in .h and .cpp files.." >&2
  cd ${DISTDIR}/qt/src
  ${curdir}/fixcopyright ${VERSION} tools/*.h tools/*.cpp kernel/*.h kernel/*.cpp widgets/*.h widgets/*.cpp dialogs/*.h dialogs/*.cpp
fi

echo "Generate lex and yacc files for moc..." >&2
cd ${DISTDIR}/qt/src/moc
make moc_gen.cpp

if [ "${platform}" = "win" ]; then
  cd ${DISTDIR}/qt/src/moc
  perl -pi -e 's/^#include \<unistd\.h\>$/\/\* #include <unistd.h> \*\//' lex.yy.c
  mv -f makefile.win Makefile
  echo "Moving include files..." >&2
  cd ${DISTDIR}/qt/src
  echo "Generating moc output..." >&2
  cd kernel
  make moc
  cd ../widgets
  make moc
  cd ../dialogs
  make moc
  cd ..
  echo "Moving source and include files..." >&2
  rm -f ../include/*
  mv tools/q*.h kernel/q*.h widgets/q*.h dialogs/q*.h ../include
  mkdir win
  mv tools/*.cpp kernel/*.cpp widgets/*.cpp dialogs/*.cpp win
  echo "Removing X11-only files..." >&2
  rm -rf tools kernel widgets dialogs Makefile*
  cd win
  rm ${x11onlysrc}
  cd ${DISTDIR}/qt/include
  rm ${x11onlyhdr}
  cd ${DISTDIR}/qt
  rm -rf makefiles
  echo "Converting Unix text files to DOS..." >&2
  cd ${DISTDIR}
  find qt -type f -a ! -name '*.exe' | xargs ${curdir}/unix_to_dos
fi

if [ "${platform}" = "x11" ]; then
  cd ${DISTDIR}/qt/src/moc
  rm makefile.win
  echo "Creating arch directory" >&2
  cd ${DISTDIR}/qt/src
  ${curdir}/makearch.sh
  cd ${DISTDIR}/qt/src
  rm -f Makefile* tools/Makefile kernel/Makefile widgets/Makefile dialogs/Makefile
  cd ${DISTDIR}/qt/lib
fi

echo "Copying the README, LICENSE etc. files..." >&2
cd ${DISTDIR}/qt/dist
cp [A-Z]* changes-${VERSION} .. 2> /dev/null
cd ${DISTDIR}/qt/dist/${disttype}
tar cf - * | (cd ${DISTDIR}/qt ; tar xf -)
cd ${DISTDIR}/qt/dist/${platform}
tar cf - * | (cd ${DISTDIR}/qt ; tar xf -)
cd ${DISTDIR}
rm -rf qt/dist qt/util


echo "Finally packing the distribution, see ${DISTDIR}..." >&2

if [ "${platform}" = "win" ]; then
  cd ${DISTDIR}
  zip -r qtwin.zip qt
fi

if [ "${platform}" = "x11" ]; then
  cd ${DISTDIR}
  mv qt qt-${VERSION}
  tar cf qt-${VERSION}.tar qt-${VERSION}
  gzip -9 qt-${VERSION}.tar
fi

echo "Done" >&2
