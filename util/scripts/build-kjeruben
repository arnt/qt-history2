#!/bin/bash

BUILDROOT=/space/mike/build
SOURCEQTDIR=/space/mike/qt-source
P4CLIENT=mike-moderne-build-kjeruben
P4PORT=p4.troll.no:866
P4=/usr/bin/p4
P4SYNC=yes
MKSPEC=""

for arg in $*; do
    if [ "$arg" = "noresync" ]; then
	P4SYNC="no"
    elif [ "$arg" = "resync" ]; then
	P4SYNC="yes"
    else
	configs="$configs $arg"
    fi
done

if [ -z "$configs" ]; then
    configs=`echo -{static,shared}_-{no-thread,thread}_-{enable-opengl,disable-opengl}`
fi
echo "Configurations: $configs"

if [ ! -d "$BUILDROOT" ]; then
    echo "$BUILDROOT does not exist."
    exit 1;
fi

if [ -z "$MKSPEC" ]; then
    echo "MKSPEC not set."
    exit 1;
fi

if [ "$P4SYNC" = "yes" ]; then
    echo "Syncing p4 client $P4CLIENT"
    export P4CLIENT P4PORT
    $P4 sync > /dev/null
    echo "Done."
fi

PLATFORMSJEF="$SOURCEQTDIR/mkspecs/$MKSPEC/platformsjef"
if [ ! -f "$PLATFORMSJEF" ]; then
    echo "No $PLATFORMSJEF file."
    exit 1;
else
    PLATFORMSJEF=`cat $PLATFORMSJEF`
    echo "Platformsjef for $MKSPEC: $PLATFORMSJEF"
fi

# This brace expansion is kinda magic, but not too bad.
for config in $configs; do
    echo 
    if [ -d "$BUILDROOT/$config" ]; then
	echo "Removing old $BUILDROOT/$config"
	rm -rf $BUILDROOT/$config
    fi
    mkdir $BUILDROOT/$config
    QTDIR=$SOURCEQTDIR
    export QTDIR
    cd $BUILDROOT/$config
    LD_LIBRARY_PATH=$QTDIR/lib
    export LD_LIBRARY_PATH
    args=`echo $config | sed 's/_/ /g'`
    echo "Configuring as $MKSPEC $args"
    if echo yes yes | $QTDIR/configure $args > configure-output 2>&1; then
	echo "Configure succeeded, making"
	if make > make-output 2>&1; then
	    date=`date`
	    echo "Successful build: $date"
	    rm -rf $BUILDROOT/$config
	else
	    date=`date`
	    echo "Build failed: $date"
	    mailx -s "$MKSPEC $config failed to make: $date" $PLATFORMSJEF < make-output
	fi
    else
	date=`date`
	echo "Configure failed: $date"
	mailx -s "$MKSPEC $config failed to configure: $date" $PLATFORMSJEF < configure-output
    fi
done
