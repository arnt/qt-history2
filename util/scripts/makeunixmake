#!/bin/sh

VERBOSE=
LIST=
SUBARGS=
while [ -n "$1" ]
do
    case "$1" in
       -v) VERBOSE=1
    ;; -p) LIST=1
	    SUBARGS="$SUBARGS $1"
    esac
    shift
done

if [ -n "$VERBOSE" ] ; then echo 'Building top-level make files...' >&2; fi

export UNIX_MKDIST_QT=1
export TMAKEPATH=$QTDIR/tmake:$TMAKEPATH
( cd $QTDIR/src/moc; tmake moc.pro >Makefile.in)
if [ -n "$LIST" ] ; then echo 'src/moc/Makefile.in' ; fi

$QTDIR/util/scripts/mkconfigs $SUBARGS
$QTDIR/util/scripts/makemake $SUBARGS

(cd $QTDIR/src; tmake -t ../tmake/propagate.t qt.pro |
    perl -p -e "s{$QTDIR}{\\\$(QTDIR)}" >Makefile.in )
if [ -n "$LIST" ] ; then echo 'src/Makefile.in' ; fi

cp $QTDIR/util/scripts/propagate $QTDIR
if [ -n "$LIST" ] ; then echo 'propagate' ; fi

if [ -n "$VERBOSE" ] ; then echo "Build tutorial, example, and extensions Makefiles" >&2 ; fi

cd $QTDIR
find tutorial \
 examples \
 extensions -name '*.pro' |
    while read pro_file
    do
	(
	DIR=$(dirname $pro_file)
	cd $DIR # we are in a subshell
	TEMPLATE=$(echo $(basename $DIR).t)
	if [ ! -f $TEMPLATE ]
	then
	    if [ "${platform}" = "x11" ]; then
		TEMPLATE=$QTDIR/tmake/propagate.t
	    else
		TEMPLATE=app
	    fi
	fi
	tmake -t ${TEMPLATE} $tmakearg $(basename $pro_file) > Makefile.in
        if [ -n "$LIST" ] ; then echo "$DIR/Makefile.in" ; fi
	)
    done


