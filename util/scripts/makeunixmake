#!/bin/sh

VERBOSE=
LIST=1
SUBARGS=
while [ -n "$2" ]
do
    case "$1" in
       -v) VERBOSE=1
    ;; -p) LIST=1
	    SUBARGS="$SUBARGS $1"
    ;; -s)  SUBARGS="$SUBARGS $1"
    esac
    shift
done

PLATFORM=$1

if [ "$PLATFORM" = "qws" ]
then
    #TMAKEARG="CONFIG+=embedded OBJECTS_DIR=tmp CONFIG+=png CONFIG+=zlib"
    TMAKEARG="CONFIG+=embedded CONFIG+=png CONFIG+=zlib"
else
    TMAKEARG=""
fi
TMAKEARG="$TMAKEARG CONFIG+=enterprise"  # We want all modules.  Disable in configure

if [ -n "$VERBOSE" ] ; then echo 'Building top-level make files...' >&2; fi

export UNIX_MKDIST_QT=1
export TMAKEPATH=$QTDIR/tmake:$TMAKEPATH
( cd $QTDIR/src/moc; tmake moc.pro >Makefile.in)
if [ -n "$LIST" ] ; then echo 'src/moc/Makefile.in' ; fi

$QTDIR/util/scripts/mkconfigs $SUBARGS $PLATFORM
$QTDIR/util/scripts/makemake $SUBARGS $PLATFORM

(cd $QTDIR/src; tmake $TMAKEARG -t ../tmake/propagate.t qt.pro | perl -p -e "s{$QTDIR}{\\\$(QTDIR)}" >Makefile.in )

if [ -n "$LIST" ] ; then echo 'src/Makefile.in' ; fi

cp -f $QTDIR/util/scripts/configure $QTDIR
if [ -n "$LIST" ] ; then echo 'configure' ; fi

if [ -n "$VERBOSE" ] ; then echo "Build tutorial, example, and extensions Makefiles" >&2 ; fi

cd $QTDIR
find tutorial \
 tools \
 examples \
 extensions -name '*.pro' |
    while read pro_file
    do
	(
	DIR=$(dirname $pro_file)
	cd $DIR # we are in a subshell
	TEMPLATE=$(basename $DIR).t
	if [ -f $TEMPLATE ]
	then
	    TEMPLATE="-t $TEMPLATE"
	else
	    if egrep -q -s 'TEMPLATE.*(app|lib)' $QTDIR/$pro_file
	    then
		TEMPLATE="-t $QTDIR/tmake/propagate.t"
	    else
		TEMPLATE=""
	    fi
	fi
	mkfiledotin=Makefile.in
	case $pro_file in
	    */examples.pro) TEMPLATE=;;
	    */tutorial.pro) TEMPLATE=;;
	    *-pro.pro) mkfiledotin=Makefile-pro.in;;
	    *-kde.pro) mkfiledotin=Makefile-kde.in;;
	esac;

	tmake $TMAKEARG ${TEMPLATE} $(basename $pro_file) > $mkfiledotin
        if [ -n "$LIST" ] ; then echo "$DIR/$mkfiledotin" ; fi;
	)
    done

if [ "$PLATFORM" = "qws" ]
then
    rm $QTDIR/tools/Makefile.in
    echo "all:" > $QTDIR/tools/Makefile.in
fi
