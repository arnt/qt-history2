#this makefile will allow you to create shadow builds of the qt tree, do this like:
#mkdir -p ~/builds
#cd ~/builds
#ln -s $QTDIR/utils/scripts/Makefile.shadow ./Makefile
#make MAKE_CONF="-make src" qt-shared-debug
#Doing this will create a shadow tree in ~/builds, the commandline
#MAKE_CONF will cause only src/ to be processed by configure. If you want
#the whole tree just omit the variable setting. You can then walk into ~/builds/$platform-type/$build-type/src
#and do a make.

#***YOU CAN SET THESE IN THIS FILE, HOWEVER IT IS DUMB FOR EVERYBODY
#***TO P4 EDIT THIS, SO INSTEAD JUST SET THEM IN YOUR ENVIRONMENT!!
#use this to change how configure runs
MAKE_CONF+=-j5

#now use defitions..
CONFG=$(QTDIR)/configure $(MAKE_CONF)
MAKE_D=
ifdef CONFG_DIR
	CONFG+=-make $(CONFG_DIR)
	MAKE_D=/$(CONFG_DIR)
endif
#this will set shadow build for platform/processor
SHADOW_DIR=$(shell uname -s)-$(shell uname -m)

all: 
	@echo "Please specify the build you want to make of:"
	@echo
	@echo "qt-shared-debug qt-shared-debug-mt qt-shared-release"
	@echo "qt-shared-release-mt qt-static-debug qt-static-debug-mt"
	@echo "qt-static-release qt-static-release-mt"

qt-shared-debug: $(SHADOW_DIR)/qt-shared-debug/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/qt-shared-debug$(MAKE_D)
$(SHADOW_DIR)/qt-shared-debug/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-shared-debug ] || mkdir -p $(SHADOW_DIR)/qt-shared-debug
	@(cd $(SHADOW_DIR)/qt-shared-debug/; $(CONFG) -shared -debug)

qt-shared-debug-mt: $(SHADOW_DIR)/qt-shared-debug-mt/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-shared-debug-mt$(MAKE_D)
$(SHADOW_DIR)/qt-shared-debug-mt/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-shared-debug-mt ] || mkdir -p $(SHADOW_DIR)/qt-shared-debug-mt
	@(cd $(SHADOW_DIR)/qt-shared-debug-mt/; $(CONFG) -shared -debug -thread)

qt-shared-release: $(SHADOW_DIR)/qt-shared-release/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-shared-release$(MAKE_D)
$(SHADOW_DIR)/qt-shared-release/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-shared-release ] || mkdir -p $(SHADOW_DIR)/qt-shared-release
	@(cd $(SHADOW_DIR)/qt-shared-release/; $(CONFG) -shared -release)

qt-shared-release-mt: $(SHADOW_DIR)/qt-shared-release-mt/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-shared-release-mt$(MAKE_D)
$(SHADOW_DIR)/qt-shared-release-mt/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-shared-release-mt ] || mkdir -p $(SHADOW_DIR)/qt-shared-release-mt
	@(cd $(SHADOW_DIR)/qt-shared-release-mt/; $(CONFG) -shared -release -thread)

qt-static-debug: $(SHADOW_DIR)/qt-static-debug/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-static-debug$(MAKE_D)
$(SHADOW_DIR)/qt-static-debug/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-static-debug ] || mkdir -p $(SHADOW_DIR)/qt-static-debug
	@(cd $(SHADOW_DIR)/qt-static-debug/; $(CONFG) -static -debug)

qt-static-debug-mt: $(SHADOW_DIR)/qt-static-debug-mt/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-static-debug-mt$(MAKE_D)
$(SHADOW_DIR)/qt-static-debug-mt/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-static-debug-mt ] || mkdir -p $(SHADOW_DIR)/qt-static-debug-mt
	@(cd $(SHADOW_DIR)/qt-static-debug-mt/; $(CONFG) -static -debug -thread)

qt-static-release: $(SHADOW_DIR)/qt-static-release/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-static-release$(MAKE_D)
$(SHADOW_DIR)/qt-static-release/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-static-release ] || mkdir -p $(SHADOW_DIR)/qt-static-release
	@(cd $(SHADOW_DIR)/qt-static-release/; $(CONFG) -static -release)

qt-static-release-mt: $(SHADOW_DIR)/qt-static-release-mt/.qmake.cache FORCE
	$(MAKE) -C $(SHADOW_DIR)/ qt-static-release-mt$(MAKE_D)
$(SHADOW_DIR)/qt-static-release-mt/.qmake.cache:
	@[ -d $(SHADOW_DIR)/qt-static-release-mt ] || mkdir -p $(SHADOW_DIR)/qt-static-release-mt
	@(cd $(SHADOW_DIR)/qt-static-release-mt/; $(CONFG) -static -release -thread)

.DEFAULT: 
	@echo "No such build has been defined yet"

FORCE:
