#!/usr/bin/perl -w

$maxChanges = 30;

$abort = 0;
$P4 = "p4";
$P4I = "p4i";

# Simplify program name, if it is a path.
$0 =~ s/.*\///;

$userName = `whoami`;
chomp $userName;

if ( $#ARGV == 0 ) {
  if ( $ARGV[0] eq "--help" ) {
    printf "$0 [p4client username]\n";
    printf "     default username is login name ($userName)\n";
    exit( 0 );
  } else {
    $userName = $ARGV[0];
  }
}

# Verify that we can execute P4 and P4
open( P4, "$P4 -V |") || die "$0: Couldn't exec $P4: $!\n";
$line = <P4>;
close( P4 );
chomp( $line );
if ( $line !~ /^Perforce/ ) {
  die "$0: $P4 -V isn't p4? Returned: \"$line\"\n";
}


# Get your latest change list
# ----------------------------------------------
open( P4, "$P4 changes -m $maxChanges | grep $userName | cut -f 2 -d\" \" |" ) || die "$0: Couldn't exec $P4: $!\n";
@myChanges = <P4>;
close( P4 );
chomp @myChanges;

if ( $#myChanges == -1 ) {
  printf "$0: Couldn't find any submitts by $userName in the $maxChanges last changes\n";
  exit 1;
}


# Check if change contains the word intergration in some form
# ----------------------------------------------
open ( P4, "$P4 describe -s $myChanges[0] |") || die "$0: Couldn't get description of change #$myChanges[0]";
@description = <P4>;
close( P4 );
grep {
  if ( /[iI]ntegrat(e|ed|ion)/ ) {
    $abort = 1;
  }
} @description;

if ( $abort ) {
  print @description;
  printf "$0: Change $myChanges[0] seems to be an intergration, aborting...\n";
  exit 1;
}

# Check if change is on main branch
# ----------------------------------------------
grep {
  if ( /\/\/depot\/qt\/main\// ) {
    $abort = 1;
  }
} @description;

if ( $abort ) {
  print @description;
  printf "$0: Change $myChanges[0] seems to be on main branch already, aborting...\n";
  exit 1;
}


# Everthing seems to ready to go for intergration
exec "$P4I $myChanges[0]" || die "$0: Couldn't execute $P4I, please check your path!";
