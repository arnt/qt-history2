#!/usr/bin/perl -w

# $Id: //depot/qt/main/util/scripts/make-public-thing#14 $

$base = "/tmp/striptree-$$";
#$quiet=1;
$skipdoc=1;

use File::Find;

sub copy {
    # 
    #  Copy $dir/$_ (.../qt/...) to $base/cvs/qt/... while removing
    #  all branches and any revisions older than $date (unless that
    #  would leave no head).  Also creates directories.
    # 
    if ( $_ ne "." && $_ ne ".." && $_ ne "Attic" ) {
	my $dir = $File::Find::dir;
	$dir =~ s-/?$-/-;
	$dir =~ s-^.*/qt/-$base/cvs/qt/-;
	if ( -d $_ ) {
	    mkdir("$dir$_", 0755);
	} elsif ( /,v$/ && !/_win/ && -d $dir && open( I, "< $_" ) ) {
	    my $f;
	    my $v;
	    $f = join( "", <I> );
	    $v = $f;
	    $v =~ s/\nsymbols[^;]*/\nsymbols/s;

	    #
	    # Copy the file
	    #
	    close(I);
	    open( O, "> $dir$_" ) || die "could not open $dir$_, stopped";
	    print O $v;
	    close O;
	    chmod( (stat $_)[2], "$dir$_" );
	    $v = $f;

	    #
	    # Outdate all branches
	    #
	    $f =~ s/;\s*\nlocks.*$/\n/s;
	    $f =~ s/^.*\bsymbols\b\s*//s;
	    $f =~ s/\s+/  /gs;
	    while ( $f =~ / ([a-zA-Z][-a-zA-Z0-9]*):((?:\d+\.)*)0\.2 /g ) {
		if ( $quiet ) {
		    print SH "rcs -q -o${2}2.1: $dir$_\n";
		} else {
		    print SH "echo rcs -o${2}2.1: $dir$_\n";
		    print SH "rcs -o${2}2.1: $dir$_\n";
		}
	    }

	    #
	    # Outdate everything before $date (except the head (!))
	    #
	    $v =~ s/.*?head\s*(.*?);.*?\ncomment[^\n]*\n\s*//s;
	    $head = $1;
	    $v =~ s/\n\ndesc\n.*$//s;
	    $v =~ s/\ndate\s+(\d+)\.(\d+)\.(\d+)\..*?\n\n/ $1$2$3\n/gs;
	    foreach $f ( split( /\n/, $v ) ) {
		if ( $f =~ /^(\S+)\s+(\d+)$/ && $2 < $date
		     && $1 ne $head )
		{
		    if ( $quiet ) {
			print SH "rcs -q -o1.1:$1 $dir$_\n";
		    } else {
			print SH "echo rcs -o1.1:$1 $dir$_\n";
			print SH "rcs -o1.1:$1 $dir$_\n";
		    }
		    last;
		}
	    }
	}
    }
}

# Maybe we should check out tmake?
#
die '$TMAKEDIR not set - need $TMAKEDIR/lib/linux-g++/tmake.conf'
    if ! -f "$ENV{TMAKEDIR}/lib/linux-g++/tmake.conf";

($junk, $junk, $junk, $d, $m, $y, $junk, $junk, $junk) =
  localtime( time() - 90 * 86400 );
$date = sprintf( "%4d%02d%02d", $y, 1+$m, $d ); ##### Y2K - what does CVS do?

mkdir( $base, 0755 );
mkdir( "$base/cvs", 0755 );
mkdir( "$base/cvs/qt", 0755 );
mkdir( "$base/cvs/CVSROOT", 0755 );

open( SH, "| sh" );

find( \&copy, "/local/lib/cvs/qt" );

print SH "cd $base/cvs/qt

# Move-around CVS files to be like regular release
mv dist/free/LICENSE,v .

# WWA: LICENSE ME!!!
#co -u LICENSE
#rm -f LICENSE,v

# Remove GMAKE and NMAKE makefiles
find . -name GNUmakefile,v | xargs rm
find . -name Makefile,v | xargs rm
rm GNUmakefile.inc,v
rm Makefile.inc,v
rm make.help,v

# Check-out current public CVS
cd ..
mkdir $base/head
cd $base/head
cvs -Q -d $base/cvs co qt
mkdir qt/doc/html
cd qt
cp gif/*.gif doc/html

export QTDIR=$base/head/qt
export PATH=\$QTDIR/bin:\$QTDIR/util/scripts:\$PATH:/home/agulbra/bin
";

# Generate and check-in [changes to] the documentation
if ( !$skipdoc ) {
    print SH "
    perl util/qdoc/qdoc
    cd doc/html
    mkdir $base/cvs/qt/html
    cp /local/lib/cvs/qtpub/html/* $base/cvs/qt/html
    for B in *.html
    do
      ci -mnone -t-'' -u \$B $base/cvs/qt/html/\${B},v
    done
    mv $base/cvs/qt/gif/*.gif,v $base/cvs/qt/html
    ";
}

# Generate and check-in [changes to] the X11 makefiles/build files
print SH "
cd $base/head/qt
for B in `util/scripts/makeunixmake -p`
do
  ci -mnone -t-'' -u \$B $base/cvs/qt/\$B,v
done

# Remove non-public files (mainly old CVS junk)
cd $base/cvs/qt
rm -rf bin/*.bat,v
rm -rf bugs dist doc.conf,v etc iconify listview mlined netscape nsplugin printpicture reqs tests util
rm -rf examples/dragdrop-tricky examples/layouts examples/network
rm -rf examples/tellme examples/xshape
";

close(SH) # We want to wait for the script to complete.
