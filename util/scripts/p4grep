#!/usr/bin/perl
#
# Find revision transitions where change occurs.
#

$all=0;
$maxsim=20;
$long_format=1;
$p4carg=1;

while ( @ARGV ) {
  if ( $ARGV[0] eq "-c" ) {
    shift;
    $keychange = $ARGV[0];
  } elsif ( $ARGV[0] eq "-a" || $ARGV[0] eq "-all" ) {
    $all = 1; # Headers and diffs
  } elsif ( $ARGV[0] eq "-l" || $ARGV[0] eq "-long" ) {
    $long_format = 1;
  } elsif ( $ARGV[0] eq "-s" || $ARGV[0] eq "-short" ) {
    $long_format = 0;
  } elsif ( $ARGV[0] eq "-u" ) {
    shift;
    $p4carg="$p4carg -u $ARGV[0]";
  } elsif ( !$pattern ) {
    $pattern = $ARGV[0];
  } else {
    $file = $ARGV[0];
  }
  shift;
}

$pattern && $file || die
    "Usage:  p4grep [-a|-all] [-l|-long] [-s|-short] [-u user] pattern p4files\n".
    "   p4files - eg. //.../qwidget.cpp\n";

open P4, "p4 files $file |";
map { m/(.*)#/ && $is_file{$1}++ } <P4>;

defined %is_file || die
    "No such files: $file\n";

open p4, "p4 changes $p4carg $file |";

sub flush {
    for $i ( 0..$n-1 ) {
        $who=""; $when=""; $log=""; $log_finished=0; $first_match=1;
	$on=0; $in="", $out="";
	my $fh = $fh{$i};
	while (<$fh>) {
	  if ( !$on && $long_format ) {
	    if ( /^Change \d+ by (.*) on (.*)$/ ) {
	      $who = $1;
	      $when = $2;
	    } elsif ( /^Affected files/ ) {
	      $log_finished = 1;
	    } elsif ( !$log_finished ) {
	      $log .= $_;
	    }
	  }

	  if ( /^==== (.*)#/ ) {
	    $on = $is_file{$1};
	  } elsif ( $on ) {
	    if ( ($all || /^[<>]/) && $_ =~ m{$pattern}sm ) {
	      if ( $long_format ) {
		if ( $first_match ) {
		  $first_match = 0;
		  print "$c{$i} -- $who -- $when\n";
		  print "$log";
		  print "--------------------------\n";
		}
		print "$_";
	      } else {
		print "$c{$i}:$_";
	      }
	    }
	  }
	}
	close $fh{$i};
    }
}

$n=0;
while (<p4>) {
    ($change) = ($_ =~ /Change (\d+)/);
    #print STDERR "$change\n";
    my $fh;
    open $fh, "p4 describe $change |";
    $c{$n} = $change;
    $fh{$n} = $fh;
    $n++;
    if ( $n == $maxsim ) {
      flush();
      $n=0;
    }
}

flush();
