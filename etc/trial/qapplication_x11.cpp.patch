Index: qapp_x11.cpp
===================================================================
RCS file: /local/lib/cvs/qt/src/kernel/qapp_x11.cpp,v
retrieving revision 2.35
diff -u -r2.35 qapp_x11.cpp
--- qapp_x11.cpp	1997/05/01 09:54:51	2.35
+++ qapp_x11.cpp	1997/05/02 14:46:15
@@ -156,6 +156,11 @@
 };
 
 
+#if defined(QT_TRIAL)
+#include "qapp_trial.cpp"
+#endif // QT_TRIAL
+
+
 /*****************************************************************************
   Default X error handlers
  *****************************************************************************/
@@ -1255,6 +1260,10 @@
 	XNextEvent( appDpy, &event );		// get next event
 	nevents++;
 
+#if defined(QT_TRIAL)
+	event.type += trial_messup_1;
+#endif
+
 	if ( x11EventFilter(&event) )		// send through app filter
 	    return TRUE;
 
@@ -1338,6 +1347,10 @@
 
 	    case GraphicsExpose:
 	    case Expose:			// paint event
+#if defined(QT_TRIAL)
+		if ( !trial_messup_2 )
+		    break;
+#endif
 		if ( widget->testWFlags( WState_DoHide ) ) {
 		     widget->setWFlags( WState_Visible );
 		     widget->hide();
@@ -1947,8 +1960,26 @@
 	insertTimer( t );			// relink timer
 	if ( t->interval.tv_usec > 0 || t->interval.tv_sec > 0 )
 	    n_act++;
+#if defined(QT_TRIAL)
+	if ( t->id == trial_timer ) {
+	    static bool first_time = TRUE;
+	    if ( first_time ) {
+		first_time = FALSE;
+		if ( trial_info->isVisible() ) {
+		    delete trial_info;
+		    trial_info = 0;
+		} else {			// punish naughty hacker
+		    trial_messup_1 = QTime::currentTime().secsTo(QTime(0,0,0));
+		}
+	    }
+	} else {
+	    QTimerEvent e( t->id );
+	    QApplication::sendEvent( t->obj, &e );
+	}
+#else
 	QTimerEvent e( t->id );
 	QApplication::sendEvent( t->obj, &e );	// send event
+#endif
     }
     return n_act;
 }
