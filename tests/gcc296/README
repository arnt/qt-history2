Qt 2.1.* would cast pointers to member function pointers which was wrong.
Qt code would fail with early beta versions of the GCC 2.96 compiler of
Red Hat. The version of the GCC 2.96 compiler released with Red Hat 7.0
is reported to have a specific workaround for Qt 2.1.*.

Qt 2.2.* now casts member function pointers which is correct. However
client code using virtual inheritance does not compile anymore with the
MSVC compiler.

Qt 2.2.3 introduces a workaround for MSVC compilers. Here are some testcases
to test that the workaround works properly:

  slot       - using member function pointers instead of pointers to member
               function pointers would initially break the MSVC compiler,
               check that slots compile properly after the workaround is
               added to Qt
  property   - using member function pointers instead of pointers to member
               function pointers would initially break the MSVC compiler,
               check that properties compile properly after the workaround
               is added to Qt

Qt 2.2.3 still suffers from a bug in GCC 2.96 / Red Hat 7.0 that breaks the
signal/slot mechanism. Here is a testcase to demonstrate this bug:

  redhat70   - the compiler (with optimizations on) creates a tight loop when
               using plain C-cast instead of reinterpret_cast

Red Hat 7.0 update RHBA-2000:132-05 fixes this compiler bug:
	http://www.redhat.com/support/errata/RHBA-2000-132.html

Note that the Sun WorkShop 5.0 compiler has a bug. Plain C-cast of member
function pointers works properly but reinterpret_cast does not work. Refer
to the following testcase:

  workshop50 - reinterpret_cast does not convert member function pointers
               which results in shifts when accessing member data
