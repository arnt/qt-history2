/*! \page examples-multiple.html

  \title Two simple Qt widgets (in-process)


  The ActiveX controls in this example are simple QWidget
  subclasses reimplementing the paintEvent() method.

  It demonstrates the implementation of a QAxFactory to provide multiple
  ActiveX controls in a single executable ActiveX server, and the use of
  the QAXFACTORY_EXPORT macro.

  To build the example you must first build the \link qaxserver.html
  QAxServer \endlink library. Then run qmake and your make tool in 
  \c examples/multiple.

  The \link demo-multiple.html demonstration \endlink requires your
  WebBrowser to support ActiveX controls, and scripting to be enabled.

  <hr>

  \code
  <p>
  This is one QWidget subclass:<br>
  <object ID="Ax1" CLASSID="CLSID:1D9928BD-4453-4bdd-903D-E525ED17FDE5">
      [Object not available! Did you forget to build and register the server?]
  </object><br>
  (<a href="multiple/ax1.h">here</a> is the code)

  <p>
  This is another QWidget subclass:<br>
  <object ID="Ax2" CLASSID="CLSID:58139D56-6BE9-4b17-937D-1B1EDEDD5B71">
      [Object not available! Did you forget to build and register the server?]
  </object><br>
  (<a href="multiple/ax2.h">here</a> is the code)
  \endcode
*/

/*! \page demo-multiple.html

  \title Two simple Qt widgets

\raw html
<p>
This is one QWidget subclass:<br>
<object ID="Ax1" CLASSID="CLSID:1D9928BD-4453-4bdd-903D-E525ED17FDE5">
[Object not available! Did you forget to build and register the server?]
</object><br>
(<a href="multiple/ax1.h">here</a> is the code)

<p>
This is another QWidget subclass:<br>
<object ID="Ax2" CLASSID="CLSID:58139D56-6BE9-4b17-937D-1B1EDEDD5B71">
[Object not available! Did you forget to build and register the server?]
</object><br>
(<a href="multiple/ax2.h">here</a> is the code)
\endraw
*/
