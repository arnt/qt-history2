%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (icon.eps)
%%CreationDate: (Tue Sep 25 20:24:56 2001)
%%BoundingBox: 0 0 104 30
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 105 31
userdict begin
DisplayImage
0 0
105 31
13.000000
105 31
1
0
0
83
606060
e4e4e4
000000
d3d3d3
575757
c3c3c3
131313
171717
1a1a1a
666867
b2b6b4
e3e7e5
e0e6e3
adb4b1
626665
656767
dfe3e2
f8fcfa
f7fbf9
f3faf8
f1f8f6
d6dfdb
606362
b0b5b2
f6faf9
f6fbfa
f2f9f7
f0f8f6
e6efec
9ca4a2
161616
dde5e2
f3f9f7
eef8f3
ebf7f3
e7f1ed
dce4e1
bac3bf
d9e3df
eff8f4
eef8f4
e8f4f0
e4efeb
dde6e3
d0d7d5
aeb6b4
191919
a6adac
e5eeeb
e4edea
dee7e4
d8e1de
d1d8d7
c5ccca
878d8b
5c615f
c0c8c5
d1dad7
ccd4d1
c6cdcb
abb2af
505351
0a0a0a
575a59
8c928f
a9b1ae
312923
937c6b
121212
634935
c1906b
c8b2a4
050505
030303
0a0605
57402e
c49471
c1ad9e
523d2b
c2916d
c2a895
614734
af805e
006800010165020000010100036304000200000101000300056204000200000101000300
056204000200000101000300056204000200000101000300056204000200000101000300
056204000200000101000300050306000700080107000600055804000200000101000300
0502080009000a000b000c000d000e000800055704000200000101000300050106000f00
100011001200130014001500160006000556040002000001010003000501070017001800
190013001a001b001c001d001e000509020505010200050c020005080200050802000505
0200051a04000200000101000300050108001f0020001a00210022002300240025000800
050902000514020005070200050002000507020005050200051a04000200000101000300
0501080026002700280029002a002b002c002d002e000509020005060200050102000500
020105030201050002000507020005000200050402010500020005020201050002000501
020005000200050102020503020105030201050404000200000101000300050107002f00
30003100320033003400350036001e000509020005060200050102010501020005010200
050102010506020005020200050202000501020105010200050102010501020105010200
050202000501020005010200050102000501020005030400020000010100030005010600
3700380039003a003b0035003c003d003e00050902040502020005010200050202000501
020005020200050602000502020005020200050202000501020005020200050102000502
0200050202000501020005040200050604000200000101000300050208003f0040004101
36003d004200430002000508020005060200050102000502020005010200050202000506
020405020200050202000501020005020200050102000502020405020201050302010504
04000200000101000300050344001e002e011e003e004500460047000200050702000506
020005010200050202000501020005020200050502000504020005010200050202000501
020005020200050102000502020005080200050402000503040002000001010003000506
480149004a004b004c004d00020005060200050602000501020005020200050102000501
020105050200050402000501020005010201050102000501020105010200050202000502
020005010200050102000501020005010200050304000200000101000300050902014e00
4f0050000200050502000506020005010200050202000502020105000200050502000504
020005020201050002000502020105000200050102000503020205030201050302010504
04000200000101000300050a0201510052000200055204000200000101000300050c0201
050502070545040002000001010003000562040002000001010003000562040002000001
010003000562040002000001010003000562040002000001010003000562040002000001
010003000562040002000001010004640200000102660068
end
%%PageTrailer
%%Trailer
%%EOF
