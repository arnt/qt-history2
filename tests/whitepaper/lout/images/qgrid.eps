%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (qgrid.eps)
%%CreationDate: (Fri Sep 28 11:41:35 2001)
%%BoundingBox: 0 0 167 93
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Helvetica findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 168 94
userdict begin
DisplayImage
0 0
168 94
13.000000
168 94
1
0
0
4
c0c0c0
575757
e4e4e4
0000ff
00a700a700a700a700a700a700a700a700a700a700a7000b014402000005014402000009
000b014302010005014302010009000b01010041020100050101004102010009000b0101
0041020100050101004102010009000b01010041020100050101004102010009000b0101
0041020100050101004102010009000b010100160303000a030300170201000501010016
0303000b0301001802010009000b01010015030100010301000803010001030100160201
00050101001503010001030100080303001802010009000b010100150301000103010008
03010001030100160201000501010015030100010301000a0301001802010009000b0101
0015030100010301000803010001030100160201000501010015030100010301000a0301
001802010009000b01010015030100010301000803010001030100160201000501010015
030100010301000a0301001802010009000b010100150301000103010008030100010301
00160201000501010015030100010301000a0301001802010009000b0101001503010001
0301000803010001030100160201000501010015030100010301000a0301001802010009
000b01010015030100010301000103010004030100010301001602010005010100150301
000103010001030100060301001802010009000b01010016030300020301000503030017
020100050101001603030002030100060301001802010009000b0101001e030000210201
00050101001e0300002102010009000b0101001d03000022020100050101001d03000022
02010009000b01010041020100050101004102010009000b010002440005010002440009
000b024500050245000900a700a700a700a700a700a7000b014402000005014402000009
000b014302010005014302010009000b01010041020100050101004102010009000b0101
0041020100050101004102010009000b01010041020100050101004102010009000b0101
0041020100050101004102010009000b010100170301000b030300170201000501010017
0301000c0301001802010009000b010100150303000a0301000103010016020100050101
00150303000a0303001802010009000b010100170301000a030100010301001602010005
010100170301000c0301001802010009000b010100170301000a03010001030100160201
0005010100170301000c0301001802010009000b010100170301000a0301000103010016
02010005010100170301000c0301001802010009000b010100170301000a030100010301
001602010005010100170301000c0301001802010009000b010100170301000a03010001
0301001602010005010100170301000c0301001802010009000b01010017030100030301
00040301000103010016020100050101001703010003030100060301001802010009000b
010100170301000303010005030300170201000501010017030100030301000603010018
02010009000b0101001e03000021020100050101001e0300002102010009000b0101001d
03000022020100050101001d0300002202010009000b0101004102010005010100410201
0009000b010002440005010002440009000b024500050245000900a700a700a700a700a7
00a7000b014402000055000b014302010055000b0101004102010055000b010100410201
0055000b0101004102010055000b0101004102010055000b010100160303000a03030017
02010055000b010100150301000103010008030100010301001602010055000b01010019
03010008030100010301001602010055000b010100180301000903010001030100160201
0055000b010100170301000a030100010301001602010055000b010100160301000b0301
00010301001602010055000b010100150301000c030100010301001602010055000b0101
00150301000503010004030100010301001602010055000b010100150305000103010005
0303001702010055000b0101001e0300002102010055000b0101001d0300002202010055
000b0101004102010055000b010002440055000b0245005500a700a700a700a700a700a7
00a700a700a700a700a7
end
%%PageTrailer
%%Trailer
%%EOF
