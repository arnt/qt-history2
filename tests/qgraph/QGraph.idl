// QGraph.idl : IDL source for QGraph.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (QGraph.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(13E2D1FB-B599-4C58-8C5B-FDC925008261),
		dual,
		helpstring("IHistogram Interface"),
		pointer_default(unique)
	]
	interface IHistogram : IDispatch
	{
		[propget, id(1), helpstring("property NumBars")] HRESULT NumBars([out, retval] long *pVal);
		[propput, id(1), helpstring("property NumBars")] HRESULT NumBars([in] long newVal);
		[propget, id(2), helpstring("property NumSegments")] HRESULT NumSegments([out, retval] long *pVal);
		[propput, id(2), helpstring("property NumSegments")] HRESULT NumSegments([in] long newVal);
		[propget, id(3), helpstring("property MaxValue")] HRESULT MaxValue([out, retval] double *pVal);
		[propput, id(3), helpstring("property MaxValue")] HRESULT MaxValue([in] double newVal);
		[propget, id(4), helpstring("property SegmentColor")] HRESULT SegmentColor(long SegmentNum, [out, retval] OLE_COLOR *pVal);
		[propput, id(4), helpstring("property SegmentColor")] HRESULT SegmentColor(long SegmentNum, [in] OLE_COLOR newVal);
		[propget, id(5), helpstring("property Value")] HRESULT Value(long BarNumber, long SegmentNumber, [out, retval] double *pVal);
		[propput, id(5), helpstring("property Value")] HRESULT Value(long BarNumber, long SegmentNumber, [in] double newVal);
		[propget, id(6), helpstring("property Width")] HRESULT Width([out, retval] long *pVal);
		[propput, id(6), helpstring("property Width")] HRESULT Width([in] long newVal);
		[propget, id(7), helpstring("property Height")] HRESULT Height([out, retval] long *pVal);
		[propget, id(8), helpstring("property BarWidth")] HRESULT BarWidth([out, retval] long *pVal);
		[propput, id(8), helpstring("property BarWidth")] HRESULT BarWidth([in] long newVal);
		[propget, id(9), helpstring("property Picture")] HRESULT Picture([out, retval] BSTR *pVal);
		[propget, id(10), helpstring("property showExplanation")] HRESULT showExplanation([out, retval] BOOL *pVal);
		[propput, id(10), helpstring("property showExplanation")] HRESULT showExplanation([in] BOOL newVal);
		[propget, id(11), helpstring("property SegmentName")] HRESULT SegmentName(long SegmentNumber, [out, retval] BSTR *pVal);
		[propput, id(11), helpstring("property SegmentName")] HRESULT SegmentName(long SegmentNumber, [in] BSTR newVal);
		[propget, id(12), helpstring("property BarName")] HRESULT BarName(long BarNumber, [out, retval] BSTR *pVal);
		[propput, id(12), helpstring("property BarName")] HRESULT BarName(long BarNumber, [in] BSTR newVal);
		[propget, id(13), helpstring("property showBarNames")] HRESULT showBarNames([out, retval] BOOL *pVal);
		[propput, id(13), helpstring("property showBarNames")] HRESULT showBarNames([in] BOOL newVal);
		[propget, id(14), helpstring("property BackgroundColor")] HRESULT BackgroundColor([out, retval] OLE_COLOR *pVal);
		[propput, id(14), helpstring("property BackgroundColor")] HRESULT BackgroundColor([in] OLE_COLOR newVal);
		[propget, id(15), helpstring("property showHorizontalGrid")] HRESULT showHorizontalGrid([out, retval] BOOL *pVal);
		[propput, id(15), helpstring("property showHorizontalGrid")] HRESULT showHorizontalGrid([in] BOOL newVal);
		[propget, id(16), helpstring("property GridColor")] HRESULT GridColor([out, retval] OLE_COLOR *pVal);
		[propput, id(16), helpstring("property GridColor")] HRESULT GridColor([in] OLE_COLOR newVal);
		[propget, id(17), helpstring("property showVerticalGrid")] HRESULT showVerticalGrid([out, retval] BOOL *pVal);
		[propput, id(17), helpstring("property showVerticalGrid")] HRESULT showVerticalGrid([in] BOOL newVal);
		[propget, id(18), helpstring("property ShowValues")] HRESULT ShowValues([out, retval] BOOL *pVal);
		[propput, id(18), helpstring("property ShowValues")] HRESULT ShowValues([in] BOOL newVal);
		[propget, id(19), helpstring("property TextColor")] HRESULT TextColor([out, retval] OLE_COLOR *pVal);
		[propput, id(19), helpstring("property TextColor")] HRESULT TextColor([in] OLE_COLOR newVal);
		[propget, id(20), helpstring("property MimeType")] HRESULT MimeType([out, retval] BSTR *pVal);
		[propget, id(21), helpstring("property GridSpacing")] HRESULT GridSpacing([out, retval] double *pVal);
		[propput, id(21), helpstring("property GridSpacing")] HRESULT GridSpacing([in] double newVal);
		[id(22), helpstring("method Reset")] HRESULT Reset();
		[propget, id(23), helpstring("property showScale")] HRESULT showScale([out, retval] BOOL *pVal);
		[propput, id(23), helpstring("property showScale")] HRESULT showScale([in] BOOL newVal);
		[propget, id(24), helpstring("property totalForBar")] HRESULT totalForBar([in] long BarNumber,[out, retval] double *pVal);
		[propget, id(25), helpstring("property ScaleFormat")] HRESULT ScaleFormat([out, retval] BSTR *pVal);
		[propput, id(25), helpstring("property ScaleFormat")] HRESULT ScaleFormat([in] BSTR newVal);
		[propget, id(26), helpstring("property GraphTitle")] HRESULT GraphTitle([out, retval] BSTR *pVal);
		[propput, id(26), helpstring("property GraphTitle")] HRESULT GraphTitle([in] BSTR newVal);
		[propget, id(27), helpstring("property showGraphTitle")] HRESULT showGraphTitle([out, retval] BOOL *pVal);
		[propput, id(27), helpstring("property showGraphTitle")] HRESULT showGraphTitle([in] BOOL newVal);
		[propget, id(28), helpstring("property showTotal")] HRESULT showTotal([out, retval] BOOL *pVal);
		[propput, id(28), helpstring("property showTotal")] HRESULT showTotal([in] BOOL newVal);
		[propget, id(29), helpstring("property WorksheetColor")] HRESULT WorksheetColor([out, retval] OLE_COLOR *pVal);
		[propput, id(29), helpstring("property WorksheetColor")] HRESULT WorksheetColor([in] OLE_COLOR newVal);
		[propget, id(30), helpstring("property DisplayMode")] HRESULT DisplayMode([out, retval] long *pVal);
		[propput, id(30), helpstring("property DisplayMode")] HRESULT DisplayMode([in] long newVal);
	};
	[
		object,
		uuid(2286FA16-F08B-4B77-B3E9-BFD3484A138D),
		dual,
		helpstring("IGraph Interface"),
		pointer_default(unique)
	]
	interface IGraph : IDispatch
	{
		[propget, id(1), helpstring("property Width")] HRESULT Width([out, retval] long *pVal);
		[propput, id(1), helpstring("property Width")] HRESULT Width([in] long newVal);
		[propget, id(2), helpstring("property Height")] HRESULT Height([out, retval] long *pVal);
		[propput, id(2), helpstring("property Height")] HRESULT Height([in] long newVal);
		[propget, id(3), helpstring("property GraphTitle")] HRESULT GraphTitle([out, retval] BSTR *pVal);
		[propput, id(3), helpstring("property GraphTitle")] HRESULT GraphTitle([in] BSTR newVal);
		[propget, id(4), helpstring("property showGraphTitle")] HRESULT showGraphTitle([out, retval] BOOL *pVal);
		[propput, id(4), helpstring("property showGraphTitle")] HRESULT showGraphTitle([in] BOOL newVal);
		[id(5), helpstring("method Reset")] HRESULT Reset();
		[propget, id(6), helpstring("property Picture")] HRESULT Picture([out, retval] BSTR *pVal);
		[propget, id(7), helpstring("property TextColor")] HRESULT TextColor([out, retval] OLE_COLOR *pVal);
		[propput, id(7), helpstring("property TextColor")] HRESULT TextColor([in] OLE_COLOR newVal);
		[propget, id(8), helpstring("property BackgroundColor")] HRESULT BackgroundColor([out, retval] OLE_COLOR *pVal);
		[propput, id(8), helpstring("property BackgroundColor")] HRESULT BackgroundColor([in] OLE_COLOR newVal);
		[propget, id(9), helpstring("property GridColor")] HRESULT GridColor([out, retval] OLE_COLOR *pVal);
		[propput, id(9), helpstring("property GridColor")] HRESULT GridColor([in] OLE_COLOR newVal);
		[propget, id(10), helpstring("property showHorizontalGrid")] HRESULT showHorizontalGrid([out, retval] BOOL *pVal);
		[propput, id(10), helpstring("property showHorizontalGrid")] HRESULT showHorizontalGrid([in] BOOL newVal);
		[propget, id(11), helpstring("property showVerticalGrid")] HRESULT showVerticalGrid([out, retval] BOOL *pVal);
		[propput, id(11), helpstring("property showVerticalGrid")] HRESULT showVerticalGrid([in] BOOL newVal);
		[propget, id(12), helpstring("property VerticalGridSpacing")] HRESULT VerticalGridSpacing([out, retval] double *pVal);
		[propput, id(12), helpstring("property VerticalGridSpacing")] HRESULT VerticalGridSpacing([in] double newVal);
		[propget, id(13), helpstring("property showHorizontalScale")] HRESULT showHorizontalScale([out, retval] BOOL *pVal);
		[propput, id(13), helpstring("property showHorizontalScale")] HRESULT showHorizontalScale([in] BOOL newVal);
		[propget, id(14), helpstring("property MimeType")] HRESULT MimeType([out, retval] BSTR *pVal);
		[propget, id(15), helpstring("property HorizontalGridSpacing")] HRESULT HorizontalGridSpacing([out, retval] double *pVal);
		[propput, id(15), helpstring("property HorizontalGridSpacing")] HRESULT HorizontalGridSpacing([in] double newVal);
		[propget, id(16), helpstring("property NumValues")] HRESULT NumValues([out, retval] long *pVal);
		[propput, id(16), helpstring("property NumValues")] HRESULT NumValues([in] long newVal);
		[propget, id(17), helpstring("property NumGraphs")] HRESULT NumGraphs([out, retval] long *pVal);
		[propput, id(17), helpstring("property NumGraphs")] HRESULT NumGraphs([in] long newVal);
		[propget, id(18), helpstring("property MaxValue")] HRESULT MaxValue([out, retval] double *pVal);
		[propput, id(18), helpstring("property MaxValue")] HRESULT MaxValue([in] double newVal);
		[propget, id(19), helpstring("property showExplanation")] HRESULT showExplanation([out, retval] BOOL *pVal);
		[propput, id(19), helpstring("property showExplanation")] HRESULT showExplanation([in] BOOL newVal);
		[propget, id(20), helpstring("property GraphColor")] HRESULT GraphColor([in] long GraphNumber, [out, retval] OLE_COLOR *pVal);
		[propput, id(20), helpstring("property GraphColor")] HRESULT GraphColor([in] long GraphNumber, [in] OLE_COLOR newVal);
		[propget, id(21), helpstring("property GraphName")] HRESULT GraphName(long GraphNumber, [out, retval] BSTR *pVal);
		[propput, id(21), helpstring("property GraphName")] HRESULT GraphName(long GraphNumber, [in] BSTR newVal);
		[propget, id(22), helpstring("property Value")] HRESULT Value(long GraphNum, long Index, [out, retval] double *pVal);
		[propput, id(22), helpstring("property Value")] HRESULT Value(long GraphNum, long Index, [in] double newVal);
		[propget, id(23), helpstring("property showVerticalScale")] HRESULT showVerticalScale([out, retval] BOOL *pVal);
		[propput, id(23), helpstring("property showVerticalScale")] HRESULT showVerticalScale([in] BOOL newVal);
		[propget, id(24), helpstring("property scaleFormat")] HRESULT scaleFormat([out, retval] BSTR *pVal);
		[propput, id(24), helpstring("property scaleFormat")] HRESULT scaleFormat([in] BSTR newVal);
		[propget, id(25), helpstring("property ValueName")] HRESULT ValueName(long Index, [out, retval] BSTR *pVal);
		[propput, id(25), helpstring("property ValueName")] HRESULT ValueName(long Index, [in] BSTR newVal);
		[propget, id(26), helpstring("property WorksheetColor")] HRESULT WorksheetColor([out, retval] OLE_COLOR *pVal);
		[propput, id(26), helpstring("property WorksheetColor")] HRESULT WorksheetColor([in] OLE_COLOR newVal);
	};

[
	uuid(8FEF80F9-2BF6-4B10-8DC6-4F24A02409E7),
	version(1.0),
	helpstring("QGraph 1.0 Type Library")
]
library QGRAPHLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(36E7035C-E313-4E93-BF4A-43C3E07F288D),
		helpstring("Histogram Class")
	]
	coclass Histogram
	{
		[default] interface IHistogram;
	};
	[
		uuid(3A4724BB-729D-45BA-9743-B058CF95D1A1),
		helpstring("Graph Class")
	]
	coclass Graph
	{
		[default] interface IGraph;
	};
};
