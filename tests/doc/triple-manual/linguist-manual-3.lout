@Chapter
    @Title { Translators }
    @Tag { translators }
@Begin
@Figure
    @Caption { 
@I{Linguist Main Window} }
 0.5 @Scale @IncludeGraphic { "images/linguist.eps.gz"
}
@BeginSections
@Section
    @Title { The One Minute Guide to Using Qt Linguist }
    @Tag { the.one.minute.guide.to.using.qt.linguist }
@Begin

linguist @Index{ Linguist }
qt.linguist @Index{ Qt Linguist }
contexts @RawIndex{ Contexts }
contexts.for.translation @SubIndex{ for Translation }
@LP
@I{Qt Linguist} is a tool for adding translations to Qt applications.
It introduces the concept of a translation "\""context"\"" which means
a group of phrases that appear together on the screen e.g. in
the same menu or dialog.

@PP
To start, run @I{Qt Linguist}, either from the taskbar menu,
or by double clicking the desktop icon, or type @F @Verbatim{linguist}
(followed by @B{Enter}) at the command line. Once @I{Qt Linguist}
has started choose @B{File"|"Open} from the menu bar and select
a @F @Verbatim{.ts} translation source file to work on.

@PP
@I{Qt Linguist}'s main window is divided into four main areas.
The left hand side contains the Context list, the top right is
the Source text area, the middle right is the translation area
and the bottom right is the phrases and guesses area. We'll describe
them in detail later.

@PP
Click on one of the contexts in the context list (left hand side)
and then click on one of the phrases that appears in the Source
text area (top right). The phrase will be copied into the translation
area (middle right). Click under the word 'Translation' and type
in the translation. Click @B{Ctrl+Enter} (Done "&" Next) to confirm
that you have completed the translation and to move on to the
next phrase that requires translation.

@PP
The cycle of entering a translation then pressing @B{Ctrl+Enter}
can be repeated until all the translations are done or until
you finish the session. Linguist will attempt to fill the "\""phrases
and guesses"\"" area with possible translations from any open phrase
books and any previous translations. Each has a keyboard shortcut,
e.g. @B{Ctrl+1}, @B{Ctrl+2}, etc., which you can use to copy
the guess into the Translation area. (Mouse users can double
click a phrase or guess to move it into the Translation area.)
At the end of the session choose @B{File"|"Save} from the menu
bar and then @B{File"|"Exit} to quit.

@End @Section
@Section
    @Title { Qt Linguist's Main Window }
    @Tag { qt.linguist.s.main.window }
@Begin
@LD @Heading { Context List{@PageMark{context.list}} }

contexts @RawIndex{ Contexts }
contexts.for.translation @SubIndex{ for Translation }
This appears at the left hand side of the main window by default.
The first column, 'Done', identifies whether or not the translations
for the context have been done. A tick indicates that all the
translations have been done and are valid. A question mark indicates
that one or more translations have not been done or have failed
validation. The second column, 'Context' is the name of the context
in which the translation phrases appear. The third column, 'Items'
shows two numbers, the first is the number of translations that
have been done, and the second is the number of phrases that
are in the context; if the numbers are equal then all the translations
have been done. Note that a greyed out tick indicates an obsolete
translation, i.e. a phrase that was translated in a previous
version of the application but which does not occur in the new
version.

@PP
The contexts are ordered alphabetically. The phrases within each
context are in the order in which they appear in the source program
and this may not be the order in which they are shown on screen.

@PP
The Context List is a dockable window so it can be dragged to
another position in the main window, or dragged out of the main
window to be a window in its own right. If you move the Context
List, @I{Qt Linguist} will remember its position and restore
it whenever you start the program.

@LD @Heading { Source Text Area{@PageMark{source.text.area}} }

This appears at the top right of the main window by default.
The first column, 'Done', signifies the status of the translation.
A tick indicates that the phrase has been translated and passed
validation. A question mark indicates that the translation has
not been done. An exclamation mark indicates that the translation
has failed validation. The second column 'Source text' shows
the text that must be translated. The third column shows the
translation.

@PP
@I{Qt Linguist} provides three kinds of validation: accelerator,
punctuation and phrase. If the source text contains an accelerator
i.e. an ampersand, '"&"' and the translated text does not contain
an ampersand the translation will fail the accelerator validation.
Similarly, if the source text ends with a particular punctuation
mark, e.g. '?', '!' or '.' and the translation ends with a different
punctuation mark the translation will fail the punctuation validation.
If the source text has a translation in one of the open phrase
books that differs from the translation used the translation
will fail phrase validation. (See @TitlePageRef{validation}.)

@PP
The Source Text Area is a dockable window.

@LD @Heading { Translation Area{@PageMark{translation.area}} }

This area appears at the middle right of the main window by default.
It is comprised of three vertical sections. The first section
is labelled 'Source text' below which the source text appears.
The second section contains contextual information on a light
blue background that the programmer has added to assist the translator.
If no contextual information has been given this section does
not appear. The third section is labelled 'Translation' and this
is where you enter the translation of the source text.

@LD @Heading { Phrases and Guesses Area{@PageMark{phrases.and.guesses.area}} }
This area appears at the bottom right of the main window by default.
When you move to a new phrase if the phrase is in one of the
phrase books that has been loaded the phrase will appear in this
area with its translation. If the phrase is the same or similar
to another phrase that has already been translated the phrase
and translation will be shown in this area. To copy a translation
from the phrases and guesses area press @B{F6} to move to the
phrases and guesses area, use the up and down arrow keys to move
to the phrase you want to use and press Enter to copy it. If
you decide that you don't want to copy a phrase after all, press
Esc. In both cases the focus will return to the Translation area.
Alternatively, double click the translation you want to use and
it will be copied into the translation area.
phrases @RawIndex{ Phrases }
phrases.in.qt.linguist @SubIndex{ in Qt Linguist }
guesses @RawIndex{ Guesses }
guesses.in.qt.linguist @SubIndex{ in Qt Linguist }

@PP
The Phrases and Guesses Area is a dockable window.

@End @Section
@Section
    @Title { Common Tasks }
    @Tag { common.tasks }
@Begin
@LD @Heading { Leaving a Translation for Later{@PageMark{leaving.a.translation.for.later}} }

If you wish to leave a translation press @B{Ctrl+L} (Next Unfinished)
to move to the next unfinished translation. An unfinished translation
is one that either has not been translated at all or one which
fails validation. To move to the next phrase press @B{Shift+Ctrl+L}.
You can also navigate using the Translation menu. If you want
to go to a different context entirely, click the context you
want to work on in the Context list, then click the source text
in the Source Text area.

@LD @Heading { Phrases That Require Multiple Translations Depending on Context{@PageMark{phrases.that.require.multiple.translations.depending.on.context}} }
The same phrase may occur in two or more contexts without conflict.
Once a phrase has been translated in one context, @I{Qt Linguist}
notes that the translation has been made and when the translator
reaches a later occurrence of the same phrase @I{Qt Linguist}
will provide the previous translation as a possible translation
candidate in the phrases and guesses area. If the previous translation
is acceptable just click the @I{Done "&" Next} button (press
@B{Alt+Enter}) to move on to the next unfinished phrase.
contexts @RawIndex{ Contexts }
contexts.for.translation @SubIndex{ for Translation }
comments @RawIndex{ Comments }
comments.for.translators @SubIndex{ for Translators }

@PP
If a phrase occurs more than once in a particular context it
will only be shown once in @I{Qt Linguist}'s context list and
the translation will be applied to every occurrence within the
context. If the same phrase needs to be translated differently
within the same context the programmer must provide a distinguishing
comment for each of the phrases concerned. If such comments are
used the duplicate phrases will appear in the context list. The
programmers comments will appear in the translation area on a
light blue background.

@LD @Heading { Changing Keyboard Accelerators{@PageMark{changing.keyboard.accelerators}} }
A keyboard accelerator is a key combination that when pressed
will cause an application to perform an action. Keyboard accelerators
normally come in two forms: Alt key and Ctrl key accelerators.
accelerators @Index{ Accelerators }
keyboard.accelerators @Index{ Keyboard Accelerators }
alt.key @Index{ Alt Key }
@PP
Alt key accelerators are used for menus and buttons. The underlining
signifies that pressing the Alt key with the underlined letter
is the same as clicking the menu item with the mouse. For example,
most applications have a @I{File} menu with the "\""F"\"" in the word
"\""file"\"" underlined. In these applications the file menu can be
invoked either by clicking the word "\""File"\"" on the menu bar or
by pressing Alt+F. The accelerator key which is underlined is
signified by preceeding it with an ampersand, e.g. @I{}"&"File.
If a source phrase appears with an ampersand in it then the translation
should also contain an ampersand, preferably in front of the
same letter. The meaning of Alt key accelerators can be determined
from the phrase in which the ampersand is embedded. The translator
may need to change the letter used with the Alt key, e.g. if
the translated phrase does not contain the original accelerator
letter. Conflicts with other keys, i.e. having two Alt key accelerators
using the same letter in the same context, must be avoided. Note
that some Alt key accelerators, usually those on the menu bar,
may apply in other contexts.


ctrl.key @Index{ Ctrl Key }@PP
Ctrl key accelerators can exist independently of any visual control.
They are often used to invoke actions in menus that would otherwise
take several keystrokes or mouse clicks. They may also be used
to perform actions that do not appear in any menu or on any button.
For example, most applications that have a @I{File} menu have
a submenu item called @I{New}. In many applications this will
appear as "\""<u>N<"/"u>ew... Ctrl+N"\"". This menu option could be
invoked by clicking @I{File} then clicking @I{New} with the mouse.
Or you could press Alt+F then press N since these letters are
underlined. But the same thing can be achieved simply by pressing
@B{Ctrl+Enter}. Accelerators that use the Ctrl key are shown
literally in the source text, e.g. @B{Ctrl+Enter}. Ctrl key accelerators
have no phrase so the translator

comments @RawIndex{ Comments }
comments.for.translators @SubIndex{ for Translators } must rely on the programmer to add a "\""comment"\"" which appears in the top right hand pane. This comment should explain what action the Ctrl key accelerator performs. Ideally Ctrl key accelerators are translated simply by copying them by clicking the @I{Begin from Source} button. However in some cases the letter will not make sense in the target language and must be changed. Whatever letter (or digit) is chosen, the translation should always be in the form "\""Ctrl+"\"" followed by the letter or digit in upper case. As with Alt key accelerators, if the translator changes the key it must not conflict with any other Ctrl key accelerator.
@PP
Later versions of @I{Qt Linguist} are expected to help the translator
avoid accelerator conflicts.

@LD @Heading { Dealing with Phrases that Contain Variables{@PageMark{dealing.with.phrases.that.contain.variables}} }
Some phrases contain variables. Variables are placeholders for
items of text that are filled in at runtime. They are signified
in the source text with a percent sign followed by a digit, e.g.
@I{After processing file %1, file %2 is next in line}. In this
example, @F @Verbatim{%1} will be replaced at runtime with the
name of the first file to be processed and @F @Verbatim{%2} with
the name of the next file to be processed. In the translated
version the variables must still appear. For example a German
translation might reverse the phrases, e.g. @I{Datei %2 wird
bearbeitet, wenn. Datei %1 fertig ist}. Note that both variables
are still used but their order has changed. The order in which
variables appear does not matter; @F @Verbatim{%1} will always
be replaced by the same text at runtime no matter where it appears
in the source text or translation and similarly @F @Verbatim{%2},
etc.

@LD @Heading { Reusing Translations{@PageMark{reusing.translations}} }
If the translated text is similar to the source text, click the
@I{Begin from Source} button (press @B{Alt+T}) which will copy
the source text into the translation area.

@PP
@I{Qt Linguist} automatically lists phrases from the open phrase
books and similar or identical phrases that have already been
translated in the Phrases and guesses area.

@End @Section
@Section
    @Title { Creating and Using Phrase Books }
    @Tag { creating.and.using.phrase.books }
@Begin

phrases @RawIndex{ Phrases }
phrases.in.qt.linguist @SubIndex{ in Qt Linguist }
phrase.books @Index{ Phrase Books }@PP
@Figure
    @Caption { 
@I{Phrase Book Dialog} }
 0.5 @Scale @IncludeGraphic { "images/phrasebookdialog.eps.gz" }
@LP
A @I{Qt Linguist} phrase book is a set of source phrases, target
(translated) phrases, and optional definitions. Phrase Books
are created independently of any application, although typically
one phrase book will be created per application or family of
applications.

@PP
If the translator reaches an untranslated phrase that is the
same as a source phrase in the phrase book, @I{Qt Linguist} will
show the phrase book entry in the @I{Relevant phrases} panel
at the bottom right of the main window. Phrases which have translations
that conflict with those given in the phrase book are marked
with a question mark in the source text pane. Phrase Books are
used to provide a common set of translations to help ensure consistency.
They can also be used to avoid duplication of effort since the
translations for a family of applications can be produced once
in the phrase book and the phrase book used for the majority
of translations in each application.

@PP
Before a phrase book can be edited it must be created or if it
already exists, opened. Create a new phrase book by selecting
@B{Phrase"|"New Phrase Book} from the menu bar. You must enter
a filename and may change the location of the file if you wish.
A newly created phrase book is automatically opened. Open an
existing phrase book by choosing @B{Phrase"|"Open Phrase Book}
from the menu bar.

@PP
To add a new phrase click the @B{New Phrase} button (or press
Alt+N) and type in a new source phrase. Press Tab and type in
the translation. Optionally press Tab and enter a definition
-- this is useful to distinguish different translations of the
same source phrase. This process may be repeated as often as
necessary.

@PP
You can delete a phrase by selecting it in the phrases list and
clicking Remove Phrase.

@PP
Click the @I{Save} button (press Alt+S) and then click the @I{Close}
button (press Esc) once you've finished adding (and removing)
phrases.

@PP
When a phrase or set of phrases appears in the phrase book double
clicking the required target phrase will copy it to the translation
pane at the text cursor position. If you want to @I{replace}
the text in the translation pane with the target phrase, click
the translation pane, choose @B{Edit"|"Select All} (press @B{Alt+A})
and then double click the target phrase.

@End @Section
@Section
    @Title { Validation }
    @Tag { validation }
@Begin

validation.of.translations @Index{ Validation of Translations }
accelerators @RawIndex{ Accelerators }
accelerators.validation @SubIndex{ Validation }
punctuation @RawIndex{ Punctuation }
punctuation.validation @SubIndex{ Validation }
phrases @RawIndex{ Phrases }
phrases.validation @SubIndex{ Validation }
@LP
@I{Qt Linguist} provides three kinds of validation on translated
phrases.

@BulletList
@LI{
@I{Accelerator validation} detects translated phrases that do
not have an ampersand when the source phrase does and vice versa.
}
@LI{
@I{Punctuation validation} detects differences in the terminating
punctuation between source and translated phrases when this may
be significant, e.g. warns if the source phrase ends with an
ellipsis, exclamation mark or question mark, and the translated
phrase doesn't and vice versa.
}
@LI{
@I{Phrases validation} detects source phrases that are also in
the phrase book but whose translation differs from that given
in the phrase book.
}
@EndList

Validation may be switched on or off from the menu bar's Validation
item or using the toolbar buttons. Phrases that fail validation
are marked with a question mark in the source text pane. If you
switch validation off and then switch it on later, @I{Qt Linguist}
will recheck all phrases and mark any that fail validation.

@PP
If any phrase in a context is invalid then the context itself
will be marked with a question mark; if all the phrases in a
context are done and are valid the context will be marked with
a tick.

@PP
Note that only phrases which are marked as done (with a tick)
will appear in the application. Invalid phrases and phrases which
are translated but not marked as done are kept in the translation
source file but are not used by the application.

@End @Section
@Section
    @Title { Qt Linguist Reference }
    @Tag { qt.linguist.reference }
@Begin
@LD @Heading { File Types{@PageMark{file.types}} }
@I{Qt Linguist} makes use of three kinds of file:


ts.files @Index{ .ts Files }
translation.source.files @Index{ Translation Source Files }
qm.files @Index{ .qm Files }
qt.message.files @Index{ Qt Message Files }
qph.files @Index{ .qph Files }
qt.phrase.book.files @Index{ Qt Phrase Book Files }
@WideTaggedList
@TagItem{ @F @Verbatim{.ts} } { @I{Translation source files}
are human-readable XML files containing source phrases and their
translations. These files are usually created and updated by lupdate
and are specific to an application.}
@TagItem{ @F @Verbatim{.qm} } {@I{Qt message files}
are binary files that contain translations used by an application at
runtime. These files are generated by lrelease, but can also be
generated by @I{Qt Linguist}.}
@TagItem{ @F @Verbatim{.qph} } {@I{Qt phrase book files}
are human-readable XML files containing standard phrases and their
translations. These files are created and updated by @I{Qt Linguist}
and may be used by any number of projects and applications.}
@EndList
@LD @Heading { The Menu Bar{@PageMark{the.menu.bar}} }
@Figure
    @Caption { 
@I{Menu Bar} }
 @IncludeGraphic { "images/menubar.eps.gz" }
@BulletList
@LI{
@B{File}

@VeryWideTaggedList
@TagItem{ Open.../0.25v @B{Ctrl+O} }{
Pops up an open file dialog from which a translation source @F
@Verbatim{.ts} file can be chosen.}
@TagItem{ Save/0.25v @B{Ctrl+S} }{
Saves the current translation source @F @Verbatim{.ts} file.}
@TagItem{ Save As... }{
Pops up a save as file dialog so that the current translation source
@F @Verbatim{.ts} file may be saved with a different name and"/"or put
in a different location.}
@TagItem{ Release... }{
Pops up a save as file dialog. The filename entered will be a Qt
message @F @Verbatim{.qm} file of the translation based on the current
translation source file. The release manager's command line tool
lrelease performs the same function on @I{all} of an application's
translation source files.}
@TagItem{ Print.../0.25v @B{Ctrl+P} }{
Pops up a print dialog. If you click OK the translation source and the
translations will be printed.}
@TagItem{ Recently opened/0.25v files }{
Shows the @F @Verbatim{.ts} files that have been opened recently,
click one to open it.}
@TagItem{ Exit/0.25v @B{Ctrl+Q} }{
Closes @I{Qt Linguist}.}
@EndList}
@LI{
@B{Edit}

@VeryWideTaggedList
@TagItem{ Undo/0.25v @B{Ctrl+Z} }{
Undoes the last editing action in the translation pane.}
@TagItem{ Redo/0.25v @B{Ctrl+Y} }{ 
Redoes the last editing action in the translation pane.}
@TagItem{ Cut/0.25v @B{Ctrl+X} }{
Deletes any highlighted text in the translation pane and saves a copy
to the clipboard.}
@TagItem{ Copy/0.25v @B{Ctrl+C} }{
Copies the highlighted text in the translation pane to the clipboard.}
@TagItem{ Paste/0.25v @B{Ctrl+V} }{
Pastes the clipboard text into the translation pane.}
@TagItem{ Select All/0.25v @B{Ctrl+A} }{
Selects all the text in the translation pane ready for copying or deleting.}
@TagItem{ Find.../0.25v @B{Ctrl+F} }{
Pops up the Find dialog. When the dialog pops up enter the text to be
found and click the @I{Find Next} button. Source phrases, translations
and comments may be searched.}
@TagItem{ Find Next/0.25v @B{F3} }{
Finds the next occurrence of the text that was last entered in the Find dialog.}
@EndList}
@LI{
@B{Translation}

@VeryWideTaggedList
@TagItem{ Prev Unfinished/0.25v @B{Ctrl+K} }{
Moves to the nearest previous unfinished source phrase (unfinished
means untranslated or translated but failed validation).}
@TagItem{ Next Unfinished/0.25v @B{Ctrl+L} }{
Moves to the next unfinished source phrase.}
@TagItem{ Prev/0.25v @B{Shift+Ctrl+K} }{
Moves to the previous source phrase.}
@TagItem{ Next/0.25v @B{Shift+Ctrl+L} }{
Moves to the next source phrase.}
@TagItem{ Done "&" Next/0.25v @B{Ctrl+Enter} }{
Mark this phrase as 'done' (translated) and move to the next
unfinished source phrase.}
@TagItem{ Begin from/0.25v Source/0.25v @B{Ctrl+B} }{
Copies the source text into the translation.}
@EndList}
@LI{
@B{Validation} (See @TitlePageRef{validation})

@VeryWideTaggedList
@TagItem{ Accelerators} {
Toggles validation on or off for Alt accelerators.}
@TagItem{ Ending/0.25v Punctuation} {
Switches validation on or off for phrase ending punctuation, e.g.
ellipsis, exclamation mark, question mark, etc.}
@TagItem{ Phrase Matches} {
Sets validation on or off for matching against translations that are
in the current phrase book.}
@EndList}
@LI{
@B{Phrase} (See the section Creating and Using Phrase Books [p.~@PageOf{creating.and.using.phrase.books}] for
details.)

@VeryWideTaggedList
@TagItem{ New Phrase/0.25v Book.../0.25v @B{Ctrl+N} }{
Pops up a save as file dialog. You must enter a filename to be used
for the phrase book and save the file. Once saved you should open the
phrase book to begin using it.}
@TagItem{ Open Phrase/0.25v Book.../0.25v @B{Ctrl+H} }{
Pops up an open file dialog. Find and choose a phrase book to open.}
@TagItem{ Close Phrase/0.25v Book} {
Closes the current phrase book. This will stop any further phrase
validation taking place. The same effect can be achieved by switching
off phrase validation using the Validation menu or the phrase toolbar
button.}
@TagItem{ Edit Phrase/0.25v Book...} {
Pops up the phrase book dialog where you can add, edit or delete phrases.}
@TagItem{ Print Phrase/0.25v Book...} {
Pops up a print dialog. If you click OK the phrase book will be printed.}
@EndList}
@LI{
@B{View}

@VeryWideTaggedList
@TagItem{ Revert Sorting} {
Puts the phrases in the source text pane into their original order.}
@TagItem{ Display Guesses} {
Turns the display of phrases and guesses on or off.}
@TagItem{ Views} {
Toggles the visibility of the Context, Source text and Phrase views.}
@TagItem{ Toolbars} {
Toggles the visibility of the different toolbars.}
@EndList}
@EndList
@NP
@LD @Heading { The Toolbar{@PageMark{the.toolbarx}} }
@Figure
    @Caption { 
@I{Toolbar} }
 0.70 @Scale @IncludeGraphic { "images/toolbar.eps.gz"
}
@LLP
@Tbl
    margin { 0c }
    rulegap { 0c }
    rulewidth { 0c }
    aformat { @Cell marginright { 0.3f } A | @Cell B }
{
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/fileopen.eps.gz" }}
B {Pops up the open file dialog to open a new translation source @F @Verbatim{.ts} file.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/filesave.eps.gz" }}
B {Saves the current translation source @F @Verbatim{.ts} file.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/fileprint.eps.gz" }}
B {Prints the current translation source @F @Verbatim{.ts} file.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/phrasebookopen.eps.gz" }}
B {Pops up the file open dialog to open a new phrase book @F @Verbatim{.qph} file.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/editundo.eps.gz" }}
B {Undoes the last editing action in the translation pane.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/editredo.eps.gz" }}
B {Redoes the last editing action in the translation pane.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/editcut.eps.gz" }}
B {Deletes any highlighted text in the translation pane and save a copy to the clipboard.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/editcopy.eps.gz" }}
B {Copies the highlighted text in the translation pane to the clipboard.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/editpaste.eps.gz" }}
B {Pastes the clipboard text into the translation pane.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/editfind.eps.gz" }}
B {Pops up the Find dialog.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/prev.eps.gz" }}
B {Moves to the previous source phrase.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/next.eps.gz" }}
B {Moves to the next source phrase.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/prevunfinished.eps.gz" }}
B {Moves to the previous unfinished source phrase.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/nextunfinished.eps.gz" }}
B {Moves to the next unfinished source phrase.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/doneandnext.eps.gz" }}
B {Marks the phrase as 'done' (translated) and move to the next unfinished source phrase.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/validateaccelerators.eps.gz" }}
B {Toggles accelerator validation on and off.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/validatepunctuation.eps.gz" }}
B {Toggles phrase ending punctuation validation on and off.}
@Rowa A {
@Figure @Location { Raw } @IncludeGraphic { "images/validatephrases.eps.gz" }}
B {Toggles phrase book validation on or off.}
}
@LD @Heading { The Find Dialog{@PageMark{the.find.dialog}} }
@Figure
    @Caption { 
@I{The Find Dialog} }
 0.5 @Scale @IncludeGraphic { "images/finddialog.eps.gz" }
@LP
Choose @B{Edit"|"Find} from the menu bar or press @B{Ctrl+F}
to pop up the Find dialog. Press @B{F3} to repeat the last search.
By default the source phrases, translations and comments will
all be searched and the search will be case-insensitive. These
settings can be changed by checking or unchecking the checkboxes
to reflect your preferences.

@LD @Heading { The Phrase Dialog{@PageMark{the.phrase.dialog}} }
This dialog is explained in the Creating and Using Phrase Books [p.~@PageOf{creating.and.using.phrase.books}]
section.

@End @Section
@EndSections
@End @Chapter
