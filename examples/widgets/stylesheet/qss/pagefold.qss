/* layout(pagefold) . Note: Style is not RTL compliant. */

QMainWindow > .QWidget {
    background-color: gainsboro;
    background-image: url(:/images/pagefold.png);
    background-position: top right;
    background-repeat: no-repeat
}

/* Provide a padding for the layout inside the frame. The frame
    exists only to provide a padding for the top right image, so we
    explicitly disable the border! */
#mainFrame {
    padding-right: 30px;
    border-style: none;
    border-image: none; /* since we set a border-image below */
}

/* Note that mainFrame wont have this border-image since we have
    explicitly set it to 'none' using a more specific selector */
QFrame, QLineEdit {
    border-image: url(:/images/frame.png) 3;
    border-width: 3;
}

/* Make text in message boxes selectable */
QMessageBox {
    /* LinksAccessibleByMouse+TextSelectableByMouse*/
    -qt-messagebox-text-interaction-flags: 5;
}
    
/* All widgets to have the following selection colors */
QWidget {
    -qt-selection-foreground: black;
    -qt-selection-background: Silver;
    color: black;
}

/* This makes the entire row selected in itemviews selected */
QAbstractItemView {
    -qt-show-decoration-selected: 1;
    padding: 2px; /* items are too close to the border image */
    background-color: transparent;
}

/* This makes the entire row selected in itemviews selected */
QAbstractItemView {
    -qt-show-decoration-selected: 1;
}

/* Nice windowsxp style password character for password lineedits */
QLineEdit[echoMode="2"] {
    -qt-lineedit-password-character: 9679;
}

/* Tool tips support only one padding. Also, border-radius does not set the window mask
     so need to keep the radius as low as possible */
QToolTip {
    background-color: rgb(200,200,255);
    border-color: darkslategray;
    border-width: 1px;
    border-style: solid;
    padding: 3px;
    font: bold;
    border-radius: 3px;
    -qt-opacity: 200;
}

/* The radio button */
QRadioButton {
    -qt-spacing: 5px;
}

/* not needed to set width, height but good practice */    
QRadioButton::indicator {
    width: 13px;
    height: 13px;
}

QRadioButton::indicator::unchecked {
    -qt-image: url(:/images/radiobutton_unchecked.png);
}

QRadioButton::indicator:unchecked:hover {
    -qt-image: url(:/images/radiobutton_unchecked_hover.png);
}

QRadioButton::indicator:unchecked:pressed {
    -qt-image: url(:/images/radiobutton_unchecked_pressed.png);
}

QRadioButton::indicator::checked {
    -qt-image: url(:/images/radiobutton_checked.png);
}

QRadioButton::indicator:checked:hover {
    -qt-image: url(:/images/radiobutton_checked_hover.png);
}

/* this state never really happens. its here for completness */
QRadioButton::indicator:checked:pressed {
    -qt-image: url(:/images/radiobutton_checked_pressed.png);
}

/* The Push Button and Combo box. Our non-ediable combo box
   is very similar to a combo box. So they share the same border image! */
QPushButton {
    min-width: 4em;
    min-height: 1.2em;
}

QPushButton, QComboBox[editable="false"] {
    border-image: url(:/images/pushbutton.png) 3;
    border-width: 3;
}

QPushButton:hover, QComboBox[editable="false"]:hover,
QMenuBar::item:hover {
    border-image: url(:/images/pushbutton_hover.png) 3;
    border-width: 3;
}

QPushButton:pressed, QComboBox[editable="false"]:on,
QMenuBar::item:on {
    border-image: url(:/images/pushbutton_pressed.png) 3;
    border-width: 3;
}

/* Combo box specifics */
QComboBox::drop-down {
    -qt-origin: padding;
    -qt-position: top right;
    width: 15px;
    border-left-style: solid;
    border-left-color: darkgray;
    border-left-width: 1px;
}

QComboBox::down-arrow {
    -qt-origin: content;
    -qt-position: center;
    -qt-image: url(:/images/down_arrow.png);
    width: 7px;
    height: 7px;
}

QComboBox::down-arrow:on {
    top: 1px;
    left: 1px;
}

/* The check box */
QCheckBox {
    -qt-spacing: 5px;
}

QCheckBox::indicator {
    width: 13px;
    height: 13px;
}

QCheckBox::indicator:unchecked {
    -qt-image: url(:/images/checkbox_unchecked.png);
}

QCheckBox::indicator:unchecked:hover {
    -qt-image: url(:/images/checkbox_unchecked_hover.png);
}

QCheckBox::indicator:unchecked:pressed {
    -qt-image: url(:/images/checkbox_unchecked_pressed.png);
}

QCheckBox::indicator:checked {
    -qt-image: url(:/images/checkbox_checked.png);
}

QCheckBox::indicator:checked:hover {
    -qt-image: url(:/images/checkbox_checked_hover.png);
}

QCheckBox::indicator:checked:pressed {
    -qt-image: url(:/images/checkbox_checked_pressed.png);
}

/* Size Grip */
QSizeGrip {
    -qt-image: url(:/images/sizegrip.png);
    width: 16px;
    height: 16px;
}

/* QMenuBar */
QMenuBar {
    border-image: none;
    border-style: none;
    border-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: darkslategray;
    padding: 2px;
}

