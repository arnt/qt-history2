/*
 * This file was generated by dbusxml2cpp version 0.6
 * Command line was: dbusxml2cpp -c CarInterface -p car_interface_p.h:car_interface.cpp car.xml
 *
 * dbusxml2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef CAR_INTERFACE_P_H_1156853585
#define CAR_INTERFACE_P_H_1156853585

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.trolltech.Examples.CarInterface
 */
class CarInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.trolltech.Examples.CarInterface"; }

public:
    CarInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~CarInterface();

public Q_SLOTS: // METHODS
    inline QDBusReply<void> accelerate()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("accelerate"), argumentList);
    }

    inline QDBusReply<void> decelerate()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("decelerate"), argumentList);
    }

    inline QDBusReply<void> turnLeft()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("turnLeft"), argumentList);
    }

    inline QDBusReply<void> turnRight()
    {
        QList<QVariant> argumentList;
        return callWithArgumentList(QDBus::Block, QLatin1String("turnRight"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void crashed();
};

namespace com {
  namespace trolltech {
    namespace Examples {
      typedef ::CarInterface CarInterface;
    }
  }
}
#endif
