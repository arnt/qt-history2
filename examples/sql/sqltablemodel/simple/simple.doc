/*!   
  \page sqltablemodel-example.html

  \ingroup examples
  \ingroup sql
  \title Displaying the contents of a SQL table

  This example demonstrates how to display a database table in a table widget.

  \quotefile sql/sqltablemodel/simple/main.cpp
  \skipto main(
  \printuntil createConnection

  A QApplication object is neccessary in order to use databases.
  \c createConnection() is just a local function that opens a database
  connection for us.

  \printuntil model

  A QSqlTableModel is created and its parent is set to the QApplication, making
  sure that it will be deleted when the application exits. 
  
  \printuntil setTable
  
  Note that a QSqlTableModel is invalid by default, it is neccessary to set a table
  first. In this example, the \c persons table is used.

  \printuntil setFilter

  After the table has been set, it is possible to set the sort order with \c setSort()
  or to specify a filter with \c setFilter().

  \printuntil select

  Finally, the call to \c select() will populate the model with data from the table
  using the specified filter.

  \printto app.exec

  A QGenericTableView is created and our QTableSqlModel is set as data model. The parent
  is 0, since the table is our top-level widget.

  \printuntil }

  The application is executed and will display the database table.
*/

