<!DOCTYPE UI><UI version="3.0" stdsetdef="1">
<class>BookForm</class>
<include location="global" impldecl="in declaration">qsqlrecord.h</include>
<include location="local" impldecl="in declaration">editbook.h</include>
<include location="global" impldecl="in declaration">qdatabrowser.h</include>
<include location="global" impldecl="in implementation">qsqlcursor.h</include>
<include location="global" impldecl="in implementation">qcombobox.h</include>
<include location="local" impldecl="in implementation">connect.h</include>
<include location="global" impldecl="in implementation">qsqldatabase.h</include>
<include location="global" impldecl="in implementation">qlineedit.h</include>
<include location="global" impldecl="in implementation">qdatatable.h</include>
<widget class="QWidget">
    <property name="name">
        <cstring>BookForm</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>478</width>
            <height>498</height>
        </rect>
    </property>
    <property name="caption">
        <string>Book</string>
    </property>
    <grid>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <property name="margin">
            <number>11</number>
        </property>
        <property name="spacing">
            <number>6</number>
        </property>
        <widget class="QDataTable" row="1" column="0" rowspan="1" colspan="3">
            <column>
                <property name="text">
                    <string>Surname</string>
                </property>
                <property name="field">
                    <string>surname</string>
                </property>
            </column>
            <column>
                <property name="text">
                    <string>Forename</string>
                </property>
                <property name="field">
                    <string>forename</string>
                </property>
            </column>
            <property name="name">
                <cstring>AuthorDataTable</cstring>
            </property>
            <property name="sorting">
                <bool>true</bool>
            </property>
            <property name="confirmDelete">
                <bool>true</bool>
            </property>
            <property name="sort">
                <stringlist>
                    <string>surname ASC</string>
                    <string>forename ASC</string>
                </stringlist>
            </property>
            <property name="database" stdset="0">
                <stringlist>
                    <string>(default)</string>
                    <string>author</string>
                </stringlist>
            </property>
            <property name="frameworkCode" stdset="0">
                <bool>false</bool>
            </property>
        </widget>
        <spacer row="0" column="1" rowspan="1" colspan="2">
            <property name="name">
                <cstring>Spacer3</cstring>
            </property>
            <property name="orientation">
                <enum>Horizontal</enum>
            </property>
            <property name="sizeType">
                <enum>Expanding</enum>
            </property>
            <property name="sizeHint">
                <size>
                    <width>20</width>
                    <height>20</height>
                </size>
            </property>
        </spacer>
        <widget class="QDataTable" row="2" column="0" rowspan="1" colspan="3">
            <column>
                <property name="text">
                    <string>Title</string>
                </property>
                <property name="field">
                    <string>title</string>
                </property>
            </column>
            <column>
                <property name="text">
                    <string>Price</string>
                </property>
                <property name="field">
                    <string>price</string>
                </property>
            </column>
            <column>
                <property name="text">
                    <string>Notes</string>
                </property>
                <property name="field">
                    <string>notes</string>
                </property>
            </column>
            <property name="name">
                <cstring>BookDataTable</cstring>
            </property>
            <property name="readOnly">
                <bool>true</bool>
            </property>
            <property name="sorting">
                <bool>true</bool>
            </property>
            <property name="sort">
                <stringlist>
                    <string>title ASC</string>
                </stringlist>
            </property>
            <property name="database" stdset="0">
                <stringlist>
                    <string>(default)</string>
                    <string>book</string>
                </stringlist>
            </property>
            <property name="frameworkCode" stdset="0">
                <bool>false</bool>
            </property>
        </widget>
        <spacer row="3" column="0" rowspan="1" colspan="2">
            <property name="name">
                <cstring>Spacer1</cstring>
            </property>
            <property name="orientation">
                <enum>Horizontal</enum>
            </property>
            <property name="sizeType">
                <enum>Expanding</enum>
            </property>
            <property name="sizeHint">
                <size>
                    <width>20</width>
                    <height>20</height>
                </size>
            </property>
        </spacer>
        <widget class="QPushButton" row="0" column="0">
            <property name="name">
                <cstring>connectButton</cstring>
            </property>
            <property name="sizePolicy">
                <sizepolicy>
                    <hsizetype>0</hsizetype>
                    <vsizetype>0</vsizetype>
                </sizepolicy>
            </property>
            <property name="text">
                <string>&amp;Connect...</string>
            </property>
        </widget>
        <widget class="QPushButton" row="3" column="2">
            <property name="name">
                <cstring>editButton</cstring>
            </property>
            <property name="enabled">
                <bool>false</bool>
            </property>
            <property name="sizePolicy">
                <sizepolicy>
                    <hsizetype>0</hsizetype>
                    <vsizetype>0</vsizetype>
                </sizepolicy>
            </property>
            <property name="text">
                <string>&amp;Edit Books</string>
            </property>
        </widget>
    </grid>
</widget>
<connections>
    <connection>
        <sender>editButton</sender>
        <signal>clicked()</signal>
        <receiver>BookForm</receiver>
        <slot>editClicked()</slot>
    </connection>
    <connection>
        <sender>AuthorDataTable</sender>
        <signal>primeInsert(QSqlRecord*)</signal>
        <receiver>BookForm</receiver>
        <slot>primeInsertAuthor(QSqlRecord*)</slot>
    </connection>
    <connection>
        <sender>AuthorDataTable</sender>
        <signal>currentChanged(QSqlRecord*)</signal>
        <receiver>BookForm</receiver>
        <slot>newCurrentAuthor(QSqlRecord*)</slot>
    </connection>
    <connection>
        <sender>connectButton</sender>
        <signal>clicked()</signal>
        <receiver>BookForm</receiver>
        <slot>connectClicked()</slot>
    </connection>
    <slot access="protected" language="C++" returnType="void">init()</slot>
    <slot access="protected" language="C++" returnType="void">destroy()</slot>
    <slot access="protected" language="C++" returnType="void">editClicked()</slot>
    <slot access="protected" language="C++" returnType="void">connectClicked()</slot>
    <slot access="protected" language="C++" returnType="void">newCurrentAuthor( QSqlRecord * author )</slot>
    <slot access="protected" language="C++" returnType="void">primeInsertAuthor( QSqlRecord * buffer )</slot>
</connections>
<functions>
    <function name="init()" >{

}</function>
    <function name="destroy()" >{

}</function>
    <function name="editClicked()" >{
    EditBookForm *dialog = new EditBookForm( this, "Edit Book Form", TRUE );
    QSqlCursor cur( "book" );
    dialog-&gt;BookDataBrowser-&gt;setSqlCursor( &amp;cur );
    dialog-&gt;BookDataBrowser-&gt;setFilter( BookDataTable-&gt;filter() );
    dialog-&gt;BookDataBrowser-&gt;setSort(QSqlIndex::fromStringList(
	BookDataTable-&gt;sort(), &amp;cur ) );
    dialog-&gt;BookDataBrowser-&gt;refresh();
    int i = BookDataTable-&gt;currentRow();
    if ( i == -1 ) i = 0; // Always use the first row
    dialog-&gt;BookDataBrowser-&gt;seek( i );
    dialog-&gt;exec();
    delete dialog;
    BookDataTable-&gt;refresh();
}</function>
    <function name="connectClicked()" >{
    bool ok = FALSE;
    ConnectDialog* dialog = new ConnectDialog( this, "Connect", TRUE );
    dialog-&gt;comboDriver-&gt;insertStringList( QSqlDatabase::drivers() );
    dialog-&gt;editDatabase-&gt;setText( "book" );
    if ( dialog-&gt;exec() == QDialog::Accepted ) {
	QSqlDatabase::removeDatabase( QSqlDatabase::defaultConnection );	
	QSqlDatabase* db = QSqlDatabase::addDatabase( dialog-&gt;comboDriver-&gt;currentText() );
	db-&gt;setDatabaseName( dialog-&gt;editDatabase-&gt;text() );
	db-&gt;setUserName( dialog-&gt;editUsername-&gt;text() );
	db-&gt;setPassword( dialog-&gt;editPassword-&gt;text() );
	db-&gt;setHostName( dialog-&gt;editHostname-&gt;text() );
	if ( !db-&gt;open() ) {
	    //## warning?
	    ok= FALSE;
	} else
	    ok = TRUE;
    } 
    if ( !ok ) {
	editButton-&gt;setEnabled( FALSE ); 
	BookDataTable-&gt;setSqlCursor( 0 );
	AuthorDataTable-&gt;setSqlCursor( 0 );
    }  else {
	editButton-&gt;setEnabled( TRUE );
	QSqlCursor* authorCursor = new QSqlCursor( "author" );
	AuthorDataTable-&gt;setSqlCursor( authorCursor, FALSE, TRUE );
	QSqlCursor* bookCursor = new QSqlCursor( "book" );	
	BookDataTable-&gt;setSqlCursor( bookCursor, FALSE, TRUE );
	AuthorDataTable-&gt;refresh( QDataTable::RefreshAll );
	BookDataTable-&gt;refresh( QDataTable::RefreshAll );	
    }
    delete dialog;
}</function>
    <function name="newCurrentAuthor(QSqlRecord*)" >{
    BookDataTable-&gt;setFilter( "authorid=" + author-&gt;value( "id" ).toString() );
    BookDataTable-&gt;refresh();
}</function>
    <function name="primeInsertAuthor(QSqlRecord*)" >{
    QSqlQuery q;
    q.exec( "UPDATE sequence SET sequence = sequence + 1 WHERE tablename='author';" );
    q.exec( "SELECT sequence FROM sequence WHERE tablename='author';" );
    if ( q.next() ) {
	buffer-&gt;setValue( "id", q.value( 0 ) );
    }
}</function>
</functions>
<tabstops>
    <tabstop>connectButton</tabstop>
    <tabstop>editButton</tabstop>
</tabstops>
</UI>
