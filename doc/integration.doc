/****************************************************************************
**
** Documentation of Visual Studio Integration Plugin.
**
** Copyright (C) 1992-$THISYEAR$ Trolltech AS. All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*! 
  \page integration.html

  \title About the Visual Studio Integration Plugin

  The Visual Studio Integration Plugin is currently available only to users of
  Visual Studio 6, it offers simple ways of doing common tasks when writing a
  Qt application. 

  \section1 How to install the Visual Studio Integration Plugin
   
  When you install Qt, the integration plugin should be installed for you,
  however, sometimes this does  not happen, so to install the integration
  plugin manually just carry out the following steps.

  \list
  \i Close down any instances of Visual Studio.
  \i Bring up a command prompt.
  \i Type 'cd %QTDIR%\tools\designer\integration\qmsdev' in that command prompt.
  \i Type 'nmake' in that command prompt.
  \i Start up Visual Studio.
  \i Select Tools | Customize | Add-ins and Macro Files.
  \i Ensure that there is a tick next to QMsDev Developer Studio Add-In.
  \i Click Close.
  \endlist

  Now the integration plugin should be installed.  If this did not work for you
  then I suggest you contact your friendly Trolltech Support team giving details
  of what part went wrong.
  
  \section1 How to uninstall the Visual Studio Integration Plugin

  When you want to uninstall the integration plugin, just carry out the
  following steps.

  \list
  \i Close down any instances of Visual Studio.
  \i Delete the file '%MSDevDir%\addins\qmsdev.dll'
  \endlist

  \section1 What can the Visual Studio Integration Plugin do?
  
  The integration plugin offers a few things that you can do,
  they are as follows.

  \list
  \i New Qt Project
  \i New Qt Dialog
  \i Qt Designer
  \i Open Qt Project
  \i Write Qt Project
  \i Use Qt In Current Project
  \i Add MOC
  \endlist

  \section1 Using the 'New Qt Project' button
  
  The 'New Qt Project' button allows you to create a simple Qt project ready
  for extending.  All you need to do is fill in the form and if you select
  'Dialog' or 'Main Window' without MDI support then it will start up
  Qt Designer for you.  When you have finished with the form in Qt Designer
  just save it and it will appear in a ready made Qt project for you.

  If you select 'Main Window' with 'MDI Support' then it will simply give you
  a code skeleton in a project which you will need to populate with your code.

  \section1 Using the 'New Qt Dialog' button

  The 'New Qt Dialog' button works in two ways, you can use it to create a new
  dialog for your project, or you can  use it to insert an already existing
  dialog into your project.

  If you want to create a new dialog then all you need to do is specify where
  the dialog file should be saved and give it a name.  This will start up
  Qt Designer to allow you to edit your newly created dialog and add it to
  the existing  project for you.

  If you want to add an existing dialog to your project, then just select the
  relevant ui file.  This will then add it to your existing project and add
  the relevant steps to create the generated code for you.

  \section1 Using the 'Qt Designer' button

  The 'Qt Designer' button simply starts up Qt Designer, it has no ties to
  your existing project so whatever you do with it will not effect your
  existing projects.  It can also be started up by using the Ctrl+Shift+D key
  combination in Visual Studio.

  \section1 Using the 'Open Qt Project' button

  The 'Open Qt Project' button will allow you to easily convert an existing
  qmake project file into a .dsp file which you can insert into your existing
  workspace.  When you click the 'Open Qt Project' button, just select an
  existing qmake project file (.pro) and then click OK.  You will get a message
  box when it has done which tells you to insert the newly created .dsp file
  into your existing workspace.

  \section1 Using the 'Write Qt Project' button

  The 'Write Qt Project' button will create a qmake project (.pro) file for
  your current project so that you can easily copy  the files onto another
  platform and be able to use qmake to create a Makefile on that other
  platform.  All you need to do is make the project you wish to write a
  project for the current project and click on the button.  Just name your
  qmake project file and click Save.

  \section1 Using the 'Use Qt In Current Project' button

  The 'Use Qt In Current Project' button simply adds in the necessary
  information for the current project so that it links against Qt and
  sets any other settings needed to use Qt in that project.

  \section1 Using the 'Add MOC' button

  The 'Add MOC' button will add in the custom build step for the selected file
  so that it creates any needed MOC files and it will  add these generated
  files to the project.  All you need to do to use it is click on a file that
  has Q_OBJECT and click the button.  

  You only need to use this button if you added a file that has Q_OBJECT in
  it by hand, you don't need to use this if you used any of the previously
  mentioned buttons.  It can also be invoked by using the Ctrl+Shift+M key
  combination in Visual Studio.

*/
