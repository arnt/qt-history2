/****************************************************************************
** $Id: xml.doc,v 2.45 1999/10/05 12:12:08 arnt Exp $
**
** Documentation on the xml module
**
** Copyright (C) 2000 Trolltech AS.  All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
**
** This file may be distributed under the terms of the Q Public License
** as defined by Trolltech AS of Norway and appearing in the file
** LICENSE.QPL included in the packaging of this file.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
** licenses may use this file in accordance with the Qt Commercial License
** Agreement provided with the Software.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
**   information about Qt Commercial License Agreements.
** See http://www.trolltech.com/qpl/ for QPL licensing information.
** See http://www.trolltech.com/gpl/ for GPL licensing information.
**
** Contact info@trolltech.com if any conditions of this licensing are
** not clear to you.
**
**********************************************************************/

/*! \page xml.html

\title Qt XML Module

The XML module provides a well-formed XML parser using the SAX2 (Simple API for
XML) interface plus an implementation of the DOM Level 1 (Document Object
Model).

This document assumes that you are familiar with the XML terminology. It
provides you with information on how to use the XML classes in Qt. 
It is however not intended to teach XML basics. If you wish to learn 
more about XML please refer to other sources like
e.g. <a href="http://www.w3.org/XML/">http://www.w3.org/XML/</a>.


<h2><a name="overview">Overview of the XML architecture in Qt</h2>

The Qt XML Module provides two interfaces for XML: SAX2 and DOM Level 1.

SAX is a very popular event-based standard interface for XML parsers.
The Qt interface follows the design of the SAX2 Java implementation.
Its naming scheme was however adjusted to fit the Qt naming conventions.
Details on SAX2 can be found at
<a href="http://www.megginson.com/SAX/">http://www.megginson.com/SAX/</a>.

Support for SAX2 filters and the reader factory are missing at the moment.
The Qt implementation furthermore omits all SAX1 compatibility classes 
present in the Java interface. 

To learn more about the Qt SAX2 classes please turn to
the document covering "<a href="xml-sax.html">The Qt SAX2 implementation</a>". 
A code example is discussed in the "<a href="xml-sax-walkthrough.html">tagreader
Walkthrough</a>".

DOM Level 1 is a W3C Recommendation for XML interfaces that maps the
constituents of a XML document in a tree structure. Details and the
specification of DOM Level 1 can be found at
<a href="http://www.w3.org/DOM/">http://www.w3.org/DOM/</a>.
More information about the DOM classes in Qt is provided in the
appropriate <a href="xml-dom.html">overview</a>.


 
<h2><a name="namespaces">Namespaces</h2>
 
Namespaces are a concept introduced to XML to allow a more modular design.
Details on namespaces can be found at
<a href="http://www.w3.org/TR/REC-xml-names/">http://www.w3.org/TR/REC-xml-names/</a>.
 
Namespaces do not change the parsing behavior. They are only reported
through the handler.
 
You have to declare the namespace first. After that you can apply the
namespace to element names or attribute names.
 
Namespaces are declared like attributes; they are attributes, strictly
speaking. You can declare a namespace prefix \c fnord to the namespace name
\c http://trolltech.com/fnord/ with the attribute \c
xmlns:fnord="http://trolltech.com/fnord/" (remark: namespaces are URI
references; this does not mean that there must be any data available at the
address; they are simply unique names, not more).  There is also one
default namespace that can be declared: \c xmlns.
 
Namespaces can be used for element names and attribute names by prepending
the prefix with a ":" to the name. If an element name does not have a
prefix, the default namespace is applied (the default namespace is not
applied to attributes).
 
Example:
\code
<fnord:document xmlns:fnord = 'http://trolltech.com/fnord/'
                xmlns       = 'http://trolltech.com/' >
    <element1 a = '42' fnord:b = '23'>Eris</element1>
    <fnord:element2 c = '42' fnord:d = '23'>Discordia</fnord:element2>
</fnord:document>
\endcode
In this example the elements and attributes have the namespaces:
<ul>
<li> \c document has the namespace URI \c http://trolltech.com/fnord/
<li> \c element1 has the namespace URI \c http://trolltech.com/
<li> \c element2 has the namespace URI \c http://trolltech.com/fnord/
<li> \c a and c  have no namespace URIs
<li> \c b and d  have the namespace URI \c http://trolltech.com/fnord/
</ul>
 
The following terms are used to distinguish the parts of the names with
namespaces:
<ul>
<li><i>Qualified name</i>
    is the name as it appears in the document (in the example \c
    fnord:element2 is a qualified name).
<li><i>Namespace prefix</i>
    is the prefix in a name, i.e. the part before the ":"  (in the example
    \c fnord is a namespace prefix).
<li><i>Local part</i>
    is the name without the prefix (and without the ":"), i.e. the part
    after the ":" (in the example \c element2 is a local part).
</ul>
If an element does not have a ":", this means that there is no namespace
prefix and the local part is the same as the qualified name (in the example
\c element1 has no namespace prefix and the qualified name and the local
part are both \c element1).
 
You can configure the behavior of the reader concerning namespace
processing. This is done with the features
\c http://xml.org/features/namespaces and
\c http://xml.org/features/namespace-prefixes (for details on features see
the section "<a href="xml-sax.html#featuresAndProperties">Features and properties</a>")
int the <a href="xml-sax.html">Description of the Qt SAX2 implementation</A.
 
There are four reporting behaviors that are influenced by this features:
<ol>
<li>The namespace prefix and local part of elements and attributes are
    reported.
<li>The qualified name of elements and attributes are reported.
<li>The startPrefixMapping() and endPrefixMapping() functions of the
    \l QXmlContentHandler are called.
<li>Attributes that declare namespaces (i.e. the attribute \c xmlns and
    attributes starting with \c xmlns:) are reported.
</ol>      

<a name="sax2namespaces"></a>
SAX2 requires the following behavior:
<table border="1">
<tr>
    <th>namespaces</th><th>namespace-prefixes</th>
    <th>Namespace prefix and local part</th><th>Qualified names</th>
    <th>Prefix mapping</th><th>xmlns attributes</th>
</tr>
<tr>
    <td>TRUE</td><td>FALSE</td>
    <td>Yes</td><td>Unknown</td>
    <td>Yes</td><td>No</td>
</tr>
<tr>
    <td>TRUE</td><td>TRUE</td>
    <td>Yes</td><td>Yes</td>
    <td>Yes</td><td>Yes</td>
</tr>
<tr>
    <td>FALSE</td><td>TRUE</td>
    <td>Unknown</td><td>Yes</td>
    <td>Unknown</td><td>Yes</td>
</tr>
</table>
The combination that both features (namespaces and namespace-prefixes) are
FALSE is an illegal combination.
 
\l QXmlSimpleReader implements the following behavior:
<table border="1">
<tr>
    <th>namespaces</th><th>namespace-prefixes</th>
    <th>Namespace prefix and local part</th><th>Qualified names</th>
    <th>Prefix mapping</th><th>xmlns attributes</th>
</tr>
<tr>
    <td>TRUE</td><td>FALSE</td>
    <td>Yes</td><td>Yes</td>
    <td>Yes</td><td>No</td>
</tr>
<tr>
    <td>TRUE</td><td>TRUE</td>
    <td>Yes</td><td>Yes</td>
    <td>Yes</td><td>Yes</td>
</tr>
<tr>
    <td>FALSE</td><td>TRUE</td>
    <td>No</td><td>Yes</td>
    <td>No</td><td>Yes</td>
</tr>
</table>
 
The default settings are
\c http://xml.org/features/namespaces is \c TRUE and
\c http://xml.org/features/namespace-prefixes is \c FALSE.
                                                                           


*/
