/****************************************************************************
** $Id$
**
** Documentation for class hierarchy
**
** Copyright (C) 2001-2003 Trolltech AS.  All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
**
** This file may be distributed under the terms of the Q Public License
** as defined by Trolltech AS of Norway and appearing in the file
** LICENSE.QPL included in the packaging of this file.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
** licenses may use this file in accordance with the Qt Commercial License
** Agreement provided with the Software.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
**   information about Qt Commercial License Agreements.
** See http://www.trolltech.com/qpl/ for QPL licensing information.
** See http://www.trolltech.com/gpl/ for GPL licensing information.
**
** Contact info@trolltech.com if any conditions of this licensing are
** not clear to you.
**
**********************************************************************/

/*!
\page how-to-learn-qt.html

\title How to Learn Qt

We assume that you already know C++!

Read the \link http://www.trolltech.com/products/qt/whitepaper.html
Qt Whitepaper\endlink first. This provides an overview of Qt's
facilities and has snippets of code which demonstrate the Qt approach
to programming. It gives you the 'big picture'.

If you want to program purely in C++, designing your interfaces in
code without the aid of any design tools, read the tutorials. \link
tutorial.html Tutorial #1\endlink is designed to get you into Qt
programming, with the emphasis on working code rather than being a
tour of features. \link tutorial2.html Tutorial #2\endlink presents a
more realistic example, demonstrating how to code menus, toolbars,
file loading and saving, dialogs, etc.

If you want to design your user interfaces using a design tool, then
read at least the first few chapters of the \link designer-manual.book
Qt Designer manual\endlink. After this, it is still worthwhile trying
the pure C++ Tutorials (\link tutorial.html Tutorial #1\endlink and
\link tutorial2.html Tutorial #2\endlink) mentioned above.

By now you'll have produced some small working applications and have a
broad feel for Qt programming. You could start work on your own
projects straight away, but we recommend reading a couple of key
overviews to deepen your understanding of Qt: the \link
object.html Qt Object Model \endlink and \link signalsandslots.html
Signals and Slots\endlink. 

At this point we recommend looking at the \link overviews-list.html
overviews\endlink and reading those that are relevant to your
projects. You may also find it useful to browse the source code of the
\link examples.html examples\endlink that have things in common with
your projects. You can also read Qt's source code since this is
supplied. 

If you run the \c demo application (in \c{$QTDIR/examples/demo})
you'll see many of Qt's widgets in action.

Qt comes with extensive documentation, with hypertext cross-references
throughout, so you can easily click your way to whatever interests
you. The part of the documentation that you'll probably use the most
is the \link index.html API Reference\endlink. Each link provides a
different way of navigating the API Reference; try them all to see
which work best for you. You might also like to try \link
assistant.book Qt Assistant\endlink: this tool is supplied with Qt and
provides access to the entire Qt API, and it provides a full text
search facility. There are also a growing number of \link
http://www.trolltech.com/developer/documentation/literature.html Qt
books\endlink.

You should now be ready to ground-break: good luck, and have fun!

*/
