/****************************************************************************
** $Id$
**
** Documentation on deploying Qt
**
** Copyright (C) 2000-2002 Trolltech AS.  All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
**
** This file may be distributed under the terms of the Q Public License
** as defined by Trolltech AS of Norway and appearing in the file
** LICENSE.QPL included in the packaging of this file.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
** licenses may use this file in accordance with the Qt Commercial License
** Agreement provided with the Software.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
**   information about Qt Commercial License Agreements.
** See http://www.trolltech.com/qpl/ for QPL licensing information.
** See http://www.trolltech.com/gpl/ for GPL licensing information.
**
** Contact info@trolltech.com if any conditions of this licensing are
** not clear to you.
**
**********************************************************************/

/*!
\page distributingqt.html
\title Deploying Qt Applications

\section1 Static Qt Applications

To distribute static Qt applications, you need the following file for
all platforms:

\list
\i your application's executable
\endlist

\section1 Dynamic Qt Applications

To distribute dynamic Qt applications, you will need the following
files for all platforms:

\list
\i application executable
\i the Qt library 
\endlist

The Qt library needs to be either in the same directory as the application
executable or in the directory which is included in the system library
path.

In addition, you need the following platform specific files:

\list
\i Windows: qt.dll
\i Unix/Linux: libqt.so
\i Mac: libqt.so##
\endlist

Finally, you need to include the following plugin files:

\list
\i Plugins used by the application (e.g. styles)
\endlist

Plugins have to be put into a subdirectory under a directory known to
Qt as a plugin directory. The subdirectory has to have the name of the
plugin category (e.g. styles, sqldrivers, designer, etc..). 


\section1 Dynamic Dialogs 

For dynamic dialogs if you use QWidgetFactory, you need the following
files for all platforms:

\list
\i The same files as used for dynamic Qt applications
\i The QUI Library
\list
\i Windows: qui.lib
\i Unix/Linux: libqui.so
\i Mac: libqui.so###
\endlist
\endlist

The QUI library needs to be either in the same directory as the application
executable or in the directory which is included in the system library
path.

\section1 Qt Applications that use QSA

For Qt applications that use QSA, you need the following files for all
platforms:

\list 
\i Same as dynamic dialogs
\i QSA library 
\list
\i Windows: qsa.dll
\i Unix/Linux: libqsa.so
\i Mac: libqsa.so##
\endlist
\endlist

The QSA library needs to be either in the same directory as the application
executable or in the directory which is included in the system library
path.

Then you need the Qt Scripter plugin and the QSA custom widgets plugin
files. The platform specific files are as follows:

\list
\i Qt Scripter plugin
\list
\i Windows: quickide.dll
\i Unix/Linux: quickide.so
\i Mac: quickide.so##
\endlist
\i QSA Custom Widgets plugin
\list
\i Windows: quickcustom.dll
\i Unix/Linux: quickcustom.so
\i Mac: quickcustom.so##
\endlist
\endlist

The plugins have to be put into a subdirectory called "qsa" under a directory
known to Qt as a plugin directory. Qt plugin directories can be set using
QApplication::addLibraryPath(). See the documentation of this function for
details.

*/
