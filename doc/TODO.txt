General clean-up
----------------

64-bit-clean sizeof and size_t
  On 64-bit platforms sizeof and size_t are 64-bit and cannot be cast to uint.
  Use ptrdiff_t instead of uint or whatever for pointer substraction.
  Review code and API to get 64-bit-clean.

Large file access > 2Gb
  On 64-bit platforms offsets must be ulong, not uint, etc.
  On 32-bit platforms, Qt should be "large file safe" if not "large file aware".

const-correctness for char* (Dimitri)
  Some functions in the API return char* instead of const char*.
  Change to const char* in the API and the code. Remove some casts that
  had been added as a workaround to avoid relevant warnings.
  This is illegal C/C++:
    char *str = "constant!"

Pointer to pointer to member function
  Rework signals/slots so that no member function pointer casting is used.
  No member function pointer casting up and down the inheritance tree!

Use _OS_*_ and _CC_*_
  Use _OS_*_ and _CC_*_ everywhere or create new Q_* flags.
  For example
    #if defined(BSD4_4)
  should be something like
    #if defined(_OS_FREEBSD_) && defined(...
  or
    #if defined(Q_BSD44_SOCKET_API)
  At least this is how it was done until now because this level of indirection
  had proved useful in the past...
  Well, maybe we just need _OS_BSD_ or _OS_SYSV_.

QPicture
  Change the format of a written QPicture that also the size is written to the
  file. This will allow a more clean implementation of the streaming operator
  that read from a QDataStream.

QSpinBox
  Don't use buttons in the box, and make it styleable.

QMenuData
  Clean up the semi-internalness of QMenuItem, ref qmenudata.h. Either
  make it public or provide another API (e.g. methods in QMenuData) for
  asking about the contents of an existing menu.

QSemiModal
  Find a way to have QSemiModal #ifdef'ed out by QT_NO_COMPAT if nexessary
  but gave its MOC functions linked in if necessary... Probably the MOC
  code needs to be put in the header?

MOC/MetaObject
  pass the metaobject of the parentclass to this metaobject in moc generated code
  drop the objectDict.


Specific enhancements
---------------------

QRect
  Make 0x0 rectangles valid and fix any problems that may arise from it.

PNG
  Use functions instead of direct struct access to maintain binary
  compatibility across libpng versions.

PNG
  Two images from the PNG test suite are still not read correctly.

Drag and Drop
  Still doesn't work (sometimes crashes?) when dragging from or dropping to
  non-Qt programs:
    Can't paste or drop to NEdit.
    Can't drag from ClearCase.
    Asks useless question when dropping Netscape's "Location".
    Can't paste from Netscape.

QTextStream (rms)
  There is still need to optimize speed, especially readLine().

QWorkspace (vohi)
  Support focusPolicy() for mdi clients to prevent them becoming the active window
  tileVertically/tileHorizontally slots

QTabWidget
  QWidget *page( int pos ) function like in QWizard

QPrinter
  More control about specific parameters (e.g. paper bin)

QFtp (rms?)
  Support active transfers. E.g. ftp://ptgftp.nws.noaa.gov does not support
  passive transfers. See also support/arc-08/17164.

QSpinBox
  Grant access to the lineedit widget.

QFileDialog
  Re-use the history


Feature Requests
----------------

QFileDialog
  setSelectedFilter( const QString&/int ) to set used filter
  set filter to initial file-extension
  make addFilter public
  add signal when filter changes
  Make the combobox like on MS-Windows and add additional
  functionality for bookmarks and history

QSizeGrip (Win32) (Volker)
  Outlined resize as set in the system properties

QProgressBar
  setPercentageVisible( bool )

QProgressBar
  Add a "Busy" indicator for operations which have no concept of
  "percentage" like waiting for a network operation to be completed.

QScrollView
  Add a AutoOneFit resize policy.

QApplication
  something like bool hasPostedEvents() (info/arc-07/15087)

QObject
  UserData. d-pointer.

QCursor
  QCursor::QCursor(const QPixmap & pixmap, ...) should do colored cursors on
  systems where color cursors are supported.

QListView
  Ctrl+NumPlus resizes all listview items to the optimum on windows (see more on info/arc-07/15307)

QHostAddress (rms)
  (or another network class): it would be nice to have a way to find
  out the own IP address; perhaps static member of QHostAddress?
  (see support/arc-08/16270)

QLineEdit
  public undo/redo API, like in QMultiLineEdit right now (borland)

QFont/X11 (brad & lars)
  complete rewrite of the x11 font handling to be really unicode compliant.
  One QFont will use several X11 fonts to be able to render one QString
  that contains eg all of arabic, chinese and russian. Will make
  QFont/X11 more compatible with the windows version, and remove the
  burden of handling charset/encoding issues from the developer.

QString
  examine possibility to do language specific sorting. LC_COLLATE could help there.

QWorkspace
  moveChild( QPoint )
  More control over min/max/close buttons individually
  raise without focus

Socket Multicasting (rms)
  There was one request for a socket class where you can easily do
  multicasting. I'm not sure if many people will need this.

qt_winEventFilter
  Inprise want's this method to be Q_EXPORT'ed; it's probably better to remove it, 
  since there is QApplication::winEventFilter already.


New functionality
-----------------

Plugin System (Volker)
    System for dynamically loading plugins. First used by designer
    but offered as Qt class. Find a solution to fix qAddPostRoutine
    and static meta object problems with unloading libs (maybe have a
    look at the hacks done in KDE to see all problems)

BiDi (Lars)
    BiDi algorithm for all text displaying. ASA the QTextView,
    QTextBrowser, QTextEdit, QRichText part described in
    "Extending existing functionality" is working start integrating
    the BiDi stuff into that. This also includes making layouts and
    widgets rtl. Like a listview has to have the first column on the
    right, scrollbars have to be at the right and not at the left,
    menubars have to go from right to left, etc.
    clean up the old bidi functions in qstring and qtrlcodec


Database classes (Dave)
    Classes to query SQL databases.  Eventually use the plugin system to
    dynamically load required drivers.  Also, eventually create 'data
    aware' widgets to speed Qt database app development.  Integrate them
    into designer.  Possibly integrate with XML query mechanism so that
    you can run SQL queries against XML files as if it were just another
    database.

QSettings (Brad, Volker)
    QSetting class to store Qt settings in a XML tree
    structure. Offer API so that Qt apps can use that to store
    settings. Allow to read/write all C++ and Qt datatypes
    (QVariant). On windows do it either as Registry frontend or also
    using XML. When done, get rid of all static QApplication methods
    which are just settings and replace that by having a QSetting
    object. Also write a tool which allows to set the Qt relevant
    settings (default style, double click interval, etc.)

QProcess (rms)
    Class to start and control external programs.

HTTP (rms)
    HTTP support for the network module. Torben has done some stuff for
    ViaVoice that can be used.

SSL (rms)
    It would be nice to have SSL support for QSocket and QServerSocket. Jo
    form Trustix -- or whatever his name is -- is actually doing a little work
    in this direction: he uses OpenSSL together with Qt. This might be a
    suitable approach... have to spend some time on thinking about it.

Validating XML parser (rms)
    ... would be nice to have one in addition to the well-formed parser we
    already have.

DOM2 support (rms)
    ... would also be nice.

XML Query mechanism (rms?)
    Suggestion by Warwick: "BTW, would it be painful to co-opt the new regexp
    engine as a query mechanism for QDom trees? (Ask Matthias about the
    marketting power of XML database queries!)"
    Also consider the possibility to use XPath.
    Also consider integrating this mechanism into the database classes (would
    require a SQL parser though...).

Multi-head display support?
    ... was asked by a lot of people on qt-interest.


Extending existing functionality
--------------------------------

Action/Mainwindow editor (Reggie - something for 3.1)
    Actioneditor for QMainWindow so that one can drag'n'drop
    actions in a special mode between the actin editor (which shows
    all available actions) and the menus and toolbars. Allows also
    creating new toolbars and menus (?) on the fly. Like you can do
    in Visual Studio and MS-Office

QThread (Volker, Brad)
    Evaluate possibility of event-loop passing and provide API for
    accessing low-level properties (e.g. priority and rights)

Widgetflags (Matthias)
    Reordering, cleanups. Introducing of a new WType_Dialog for
    secondard windows. Fix testWState and testWFlags. Currently
    they return true if _something_ is set. This is pretty pointless
    but used internally in Qt for some low-level optimizations. Those
    have to be identified and fixed.

Qt/MS-Windows (Matthias, Volker)
   widget class work (qt_req_winclass). Should be possible to get rid
   of the close button.
   problems with non-clipping DC, should probably use GetDCEx instead
   of GetWindowDC.

Qt/X11 (Matthias, Brad)
   NET_WM functionality directly in Qt. Maybe also better support for
   Motif hints.

moc: (Matthias)
    new and faster signal and slot system
    Q_DISPATCH macro and Q_OBJECT extensions to support remote
    function calls.
    Bridge to KDE's dcop system.

QListView / QListBox:
    Make them usable with external data only (i.e.l without
    QListViewItem, QListBoxItem, directly from the database).

XML (rms)
    Enable the parser to do "incremental" parsing; i.e. that he can parse an
    XML that is delivered in different chunks. So when he parsed a chunk and
    no data is available, store the state of the parser and continue parsing
    when more data is available. This is nice if you get the data asynchronous
    from a (slow) network connection. The Jabber protocol needs such
    functionality too.

QRichText
    valign for tables

QListView/QListBox/maybe QTable (Reggie)
    DnD API, like QIconView

QListView/QHeader (Reggie)
    Support for stretchable header in QListView, so that the header
    always fits exactly into the width of the view
