General clean-up
----------------

64-bit-clean sizeof and size_t
  On 64-bit platforms sizeof and size_t are 64-bit and cannot be cast to uint.
  Use ptrdiff_t instead of uint or whatever for pointer substraction.
  Review code and API to get 64-bit-clean.

Large file access > 2Gb
  On 64-bit platforms offsets must be ulong, not uint, etc.
  On 32-bit platforms, Qt should be "large file safe" if not "large file aware".

const-correctness for char* (Dimitri)
  Some functions in the API return char* instead of const char*.
  Change to const char* in the API and the code. Remove some casts that
  had been added as a workaround to avoid relevant warnings.
  This is illegal C/C++:
    char *str = "constant!"

Pointer to pointer to member function
  Rework signals/slots so that no member function pointer casting is used.
  No member function pointer casting up and down the inheritance tree!

Use _OS_*_ and _CC_*_
  Use _OS_*_ and _CC_*_ everywhere or create new Q_* flags.
  For example
    #if defined(BSD4_4)
  should be something like
    #if defined(_OS_FREEBSD_) && defined(...
  or
    #if defined(Q_BSD44_SOCKET_API)
  At least this is how it was done until now because this level of indirection
  had proved useful in the past...
  Well, maybe we just need _OS_BSD_ or _OS_SYSV_.

QPicture
  Change the format of a written QPicture that also the size is written to the
  file. This will allow a more clean implementation of the streaming operator
  that read from a QDataStream.

QMenuData
  Clean up the semi-internalness of QMenuItem, ref qmenudata.h. Either
  make it public or provide another API (e.g. methods in QMenuData) for
  asking about the contents of an existing menu.

QSemiModal
  Find a way to have QSemiModal #ifdef'ed out by QT_NO_COMPAT if nexessary
  but gave its MOC functions linked in if necessary... Probably the MOC
  code needs to be put in the header?


Specific enhancements
---------------------

QCursor
  Make the pointing hand cursor look like the Windows pointing hand cursor
 (when you select a web link in Netscape/IE).  There is a IDC_HAND constant
 in LoadCursor (Win2K only?) if this is any use.

QRect
  Make 0x0 rectangles valid and fix any problems that may arise from it.

PNG
  Use functions instead of direct struct access to maintain binary
  compatibility across libpng versions.

PNG
  Two images from the PNG test suite are still not read correctly.

Drag and Drop
  Still doesn't work (sometimes crashes?) when dragging from or dropping to
  non-Qt programs:
    Can't paste or drop to NEdit.
    Can't drag from ClearCase.
    Asks useless question when dropping Netscape's "Location".
    Can't paste from Netscape.

QColor
  Maybe add an alpha channel to the external API. Even XFree will soon
  support alpha channels. (PARTIALLY IMPLEMENTED)

QTextStream (rms)
  There is still need to optimize speed, especially readLine().

QWorkspace (vohi)
  Support focusPolicy() for mdi clients to prevent them becoming the active window
  tileVertically/tileHorizontally slots

QTabWidget
  QWidget *page( int pos ) function like in QWizard
  Be able to create a new line of tabs instead of showing arrows (Windows uses these all over)

QPSPrinter
  convert it to use the new font stuff (QFont:CharSet is obsolete)

QFtp (rms?)
  Support active transfers. E.g. ftp://ptgftp.nws.noaa.gov does not support
  passive transfers. See also support/arc-08/17164.

QSpinBox
  Don't use buttons in the box, and make it styleable.
  Grant access to the lineedit widget.

QFileDialog
  Re-use the history

QDir
  Static function that will return the application directory
  Static function to copy a file
  Last error function to get the OSs error message as a string

QFile
  Last error function to get the OSs error message as a string

QTable
  Be able to set the whole table to be editable or not as well as the individual cells

QLineEdit
  Be able to use the "insert" key correctly

Feature Requests
----------------

QFileDialog
  Make the combobox like on MS-Windows and add additional
  functionality for bookmarks and history
  Provide more access to windows specific functions ( support/arc-09/19612 )

QSizeGrip (Win32) (Volker)
  Outlined resize as set in the system properties

QProgressBar
  setPercentageVisible( bool )

QProgressBar
  Add a "Busy" indicator for operations which have no concept of
  "percentage" like waiting for a network operation to be completed.

QScrollView
  Add a AutoOneFit resize policy.

QApplication
  something like bool hasPostedEvents() (info/arc-07/15087)
  Return QApplication::topLevelWidgets in z-order (order that the widgets
are shown on the screen)

QObject
  UserData. d-pointer.
  Why not just use named children? That costs 0 when not used.

QCursor
  QCursor::QCursor(const QPixmap & pixmap, ...) should do colored cursors on
  systems where color cursors are supported.

Keyboard control of Widgets
   Reported on sales/arc-10/20644, info/arc-07/15307:
	Many keyboard shortcuts don't work as they usually do in normal windows
	applications. Examples:
	In TabControls user can switch from page to page by pressing "Ctrl+Tab" or
	"Ctrl+Shift+Tab".
	In Listviews user can press "Ctrl+NumPlus" to auto
	resize all columns in a Listview to best fit size.
	The keys "Home" and "End" are working in ComboBoxes.

QHostAddress (rms)
  (or another network class): it would be nice to have a way to find
  out the own IP address; perhaps static member of QHostAddress?
  (see support/arc-08/16270)

QLineEdit
  public undo/redo API, like in QMultiLineEdit right now (borland)

QFont/X11 (brad & lars)
  complete rewrite of the x11 font handling to be really unicode compliant.
  One QFont will use several X11 fonts to be able to render one QString
  that contains eg all of arabic, chinese and russian. Will make
  QFont/X11 more compatible with the windows version, and remove the
  burden of handling charset/encoding issues from the developer.

QString
  examine possibility to do language specific sorting. LC_COLLATE could help there.

QWorkspace
  moveChild( QPoint )
  More control over min/max/close buttons individually
  raise without focus

Socket Multicasting (rms)
  There was one request for a socket class where you can easily do
  multicasting. I'm not sure if many people will need this.

qt_winEventFilter
  Inprise want's this method to be Q_EXPORT'ed; it's probably better to remove it,
  since there is QApplication::winEventFilter already.

QPopupMenu
  One user requested the ability to show just the icons in a torn off menu, and asked
  if the torn off menu could get a WS_EX_TOOLWINDOW style.  I don't think that this
  will benefit anyone much as they might as well just use a toolbar.

  3 new functions:
  void addFileList( int maxFiles); // Append a file list to the bottom of this QPopupMenu
  void addFileName( const QString& ); // Add a file to the list (if maxFiles
				      // is exceeded remove the first one)
  QStringList fileList(); // Return the list of files 

Be able to traverse from one popup menu to another when you are within a popup menu
  (see more on support/arc-09/18923)

QMenuData
  bool isPopup( int id ) - check to see if a menu item is a QPopupMenu or just a plain QMenuItem.

QWidget::setIcon() need second parameter
  QWidget::setIcon() needs an extra parameter to specify the size of the icon
  (large/small) at least for the Windows platform.  The small icon is for the
  caption bar.  The large icon is for the task manager when you hit ALT + TAB.
  (qt-bugs/arc-08/17124)

QIconView::mask()
  A KDE developer asked if we could make this function protected rather than private.
  (qt-bugs/arc-08/17228)

QIconViewItem::calcTmpTxt()
  A KDE developer asked if we could make the return value (tmpTxt) protected instead of private.
  (qt-bugs/arc-08/17228)

QSound:
  QSound could support QUrlOperator, so that you can fetch the sound file from
  a HTTP server, e.g.

QListBox
  Be able to set a QWhatsThis for the items on the QListBox
  (qt-bugs/arc-08/17849)

QDialog:
  Have a function called setValidator() so that the user can validate the output of the dialog
  before it hides the dialog.

QListView
  Have a function which will return the column which is sorted and the sort order 

QString::vsprintf()
  An user requested we add a function that takes a format string and va list.
  (support/arc-11/23705)  

QPtrQueue:
  bool remove( type* ) - to remove a pending item from the queue
  bool isPending( type* ) - to determine if an item is pending
  And have an iterator.  (see support/arc-11/23842)

QDockWindow
  Be able to dock a window on top of itself so that it makes it like a QTabWidget.  
  (see support/arc-11/23889)

QPrinter\QPainter??
  Export the graphics to a WMF (Window Metafile) - I doubt we will do this, but I'll
  add it all the same.

QToolButton
  Option to have associated popup menu pop up instead of down.

Services/Daemons (vohi, rms)
  Platform independent API to install deamons on Unix and Services on NT. (support/arc-12/24505)

QComboBox
  Be able to have right aligned text, on Windows, this means putting the arrow on the left
  hand side of the combobox.

QLCDNumber
  Support leading zeros, so you can have a number like 0003.

QToolBar
  Allow the ability to insert a toolbutton into a certain position (see qt-bugs/arc-10/21771)

QListBoxItem::setEnabled()
  Allow the user to be able to set a list box item to be disabled.


New functionality
-----------------

Plugin System (Volker)
    System for dynamically loading plugins. First used by designer
    but offered as Qt class. Find a solution to fix qAddPostRoutine
    and static meta object problems with unloading libs (maybe have a
    look at the hacks done in KDE to see all problems)

BiDi (Lars)
    Finish getting widgets right-to-left

QSettings (Brad, Volker)
    QSetting class to store Qt settings in a XML tree
    structure. Offer API so that Qt apps can use that to store
    settings. Allow to read/write all C++ and Qt datatypes
    (QVariant). On windows do it either as Registry frontend or also
    using XML. When done, get rid of all static QApplication methods
    which are just settings and replace that by having a QSetting
    object. Also write a tool which allows to set the Qt relevant
    settings (default style, double click interval, etc.)

QProcess (rms)
    Class to start and control external programs.

HTTP (rms)
    HTTP support for the network module. Torben has done some stuff for
    ViaVoice that can be used.

SSL (rms)
    It would be nice to have SSL support for QSocket and QServerSocket. Jo
    form Trustix -- or whatever his name is -- is actually doing a little work
    in this direction: he uses OpenSSL together with Qt. This might be a
    suitable approach... have to spend some time on thinking about it.

Validating XML parser (rms)
    ... would be nice to have one in addition to the well-formed parser we
    already have.

DOM2 support (rms)
    ... would also be nice.

XML Query mechanism (rms?)
    Suggestion by Warwick: "BTW, would it be painful to co-opt the new regexp
    engine as a query mechanism for QDom trees? (Ask Matthias about the
    marketting power of XML database queries!)"
    Also consider the possibility to use XPath.
    Also consider integrating this mechanism into the database classes (would
    require a SQL parser though...).

Multi-head display support?
    ... was asked by a lot of people on qt-interest.


Extending existing functionality
--------------------------------

Action/Mainwindow editor (Reggie - something for 3.1)
    Actioneditor for QMainWindow so that one can drag'n'drop
    actions in a special mode between the actin editor (which shows
    all available actions) and the menus and toolbars. Allows also
    creating new toolbars and menus (?) on the fly. Like you can do
    in Visual Studio and MS-Office

QThread (Volker, Brad)
    Evaluate possibility of event-loop passing and provide API for
    accessing low-level properties (e.g. priority and rights)

Widgetflags (Matthias)
    Reordering, cleanups. Introducing of a new WType_Dialog for
    secondard windows. Fix testWState and testWFlags. Currently
    they return true if _something_ is set. This is pretty pointless
    but used internally in Qt for some low-level optimizations. Those
    have to be identified and fixed.

Qt/MS-Windows (Matthias, Volker)
   widget class work (qt_req_winclass). Should be possible to get rid
   of the close button.
   problems with non-clipping DC, should probably use GetDCEx instead
   of GetWindowDC.

Qt/X11 (Matthias, Brad)
   NET_WM functionality directly in Qt. Maybe also better support for
   Motif hints.

Qt/X11
   Modifier keys are currently hardwired: for example Mod1Mask for AltButton
   and Mod4Mask for MetaButton in translateButtonState(). We should query the
   current software mapping from X11, shouldn't we?

Qt/X11
   Search for the best visual when running under some X servers where the
   default visual is psuedocolor, but a truecolor visual exists

moc: (Matthias)
    new and faster signal and slot system
    Q_DISPATCH macro and Q_OBJECT extensions to support remote
    function calls.
    Bridge to KDE's dcop system.

QListView / QListBox:
    Make them usable with external data only (i.e.l without
    QListViewItem, QListBoxItem, directly from the database).

XML (rms)
    Enable the parser to do "incremental" parsing; i.e. that he can parse an
    XML that is delivered in different chunks. So when he parsed a chunk and
    no data is available, store the state of the parser and continue parsing
    when more data is available. This is nice if you get the data asynchronous
    from a (slow) network connection. The Jabber protocol needs such
    functionality too.

QRichText
    valign for tables

QListBox (Reggie)
    DnD API, like QIconView

QTable (Reggie):
    functions for insert/remove row/column

QPrinter
    get a list of the available printers
