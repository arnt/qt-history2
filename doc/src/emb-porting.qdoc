/* !
    \page emb-porting.html

    \title Issues to be Aware of When Porting Qtopia Core

    Qtopia Core is reasonably platform-independent, although the only
    publically available version is a Linux implementation. If you are
    looking for a non-Linux commercial implementation, it is worth
    contacting \link mailto:sales@trolltech.com
    sales@trolltech.com\endlink to see if we can help.

    If you plan to do your own port to another operating system, the
    following dependencies will need to be addressed (files that you'll
    need to modify are listed at the end of each section):

    \list

    \i \bold{System V IPC} (shared memory and semaphores) is used to share
    window regions between client and server. You will need to provide
    something similar unless you want a single-application setup (i.e.
    running only one program, which is the server). System V semaphores
    are also used for synchronizing access to the framebuffer.

    Modify \c qwindowsystem_qws.cpp, \c qwsregionmanager_qws.cpp, \c
    qapplication_qws.cpp, and \c qlock_qws.cpp.

    \i \bold{Unix-domain sockets} are used to communicate things like
    keyboard events, requests to raise windows and QCOP messages between
    applications. Again, you will need to provide something similar unless
    you want a single-application setup. It should be possible to
    implement something like this using message queues or similar
    mechanisms; with the exception of QCOP messages (which are generated
    by client applications and not Qtopia Core) individual messages should
    be no more than a few bytes in length.

    Modify \c qwssocket_qws.cpp.

    \i \bold{The Linux framebuffer device} is used to map in the drawing
    area. You will need to replace it (by creating a new class of QScreen)
    with something else giving a byte pointer to a memory-mapped
    framebuffer, plus information about width, height and bit depth (which
    most likely you can simply hard-code). If your framebuffer is not
    memory-mapped or is in an unsupported format or depth you will need to
    modify QGfxRaster as well.

    Modify \c qgfxlinuxfb_qws.cpp.

    \i \bold{Sound} uses a Linux \c /dev/dsp style device. If you want to use
    the Qtopia Core sound server you'll need to reimplement it.

    Modify \c qsoundqss_qws.cpp.

    \i \bold{select()} is used to for
    events to/from the Qtopia Core server application.

    Modify \c qeventdispatcher_qws.cpp.

    \endlist

    Qtopia Core makes use of the standard C library and some POSIX functions.
    Mostly the latter are concentrated in platform dependent code anyway
    (e.g. \c mmap() to map in the Linux framebuffer).
*/
