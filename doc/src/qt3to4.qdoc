/*!
    \page qt3to4.html
    \title qt3to4 - The Qt 3 to 4 Porting Tool

    The \c qt3to4 tool provides help when moving a project from Qt 3
    to Qt 4. It is designed to automate the most tedious part of the
    porting effort.

    See the \l{porting4.html}{Porting Guide} for more information
    about porting from Qt 3 to Qt 4.

    \section1 Usage

    \c qt3to4 can be run either on individual C++ source or header
    files, or on an entire project specified by a qmake \c .pro file:

    \code
        qt3to4 myfile.cpp
        qt3to4 myapp.pro
    \endcode

    In project mode, \c qt3to4 reads the \c .pro file and converts
    all files specified in it. The tool modifies the files in place.
    You might want to make a copy of your project before you run the
    tool.

    \section1 Porting Rules

    The Qt porting tool loads its porting rules from an XML file
    called \c q3porting.xml located in Qt's \c tools/porting/src directory. 
    By editing this file, you can add your own rules or remove some
    rules.

    The standard \c q3porting.xml file specifies the following
    conversions:

    \list
    \o  Rename classes that are now part of the Qt 3 support
        library (e.g., replace \c QFileDialog with \c{Q3FileDialog}).
    \o  Prefix or rename enum values that have been moved or
        renamed (e.g., replace \c QButton::On with \c{QCheckBox::On}) or
        members of the Qt namespace (e.g., replace \c QWidget::red with
        \c{Qt::red}).
    \o  Add \c #include directives that might be needed in Qt 4.
    \o  Perform miscellaneous trivial changes (e.g., replace \c TRUE
        with \c true).
    \endlist

    \section2 Location of the qt3porting.xml File

    You can now specify the location of the \c qt3porting.xml file with the
    \c{-f} command line option. This is useful if you want to use a modified
    file with your own rules. 

    If you you don't want to maintain a modified \c qt3porting.xml it is
    possible to create a "patch" file that includes the original file and adds
    or disables rules. The syntax for this file looks like this:

    \code
    <Rules>
        <Include>/path/to/q3porting.xml</Include>

        <item Type="RenamedHeader" Disable="True" >
            <Qt4>q3sqlselectcursor.h</Qt4>
            <Qt3>qsqlselectcursor.h</Qt3>
        </item>

        <item Type="RenamedHeader" >
            <Qt4>newclass.h</Qt4>
            <Qt3>oldclass.h</Qt3>
        </item>
    </Rules>
    \endcode

    \section1 Logging

    The porting tool logs all changes to a file called \c
    portinglog.txt in the current directory. This file lists all
    changes made to the source files.

    \section1 State of the Porting Tool

    The current version of the \c qt3to4 tool is a beta version. It
    is intended to demonstrate how the finished program will work.
    You are encouraged to test it on your projects and
    \l{mailto:qt-bugs@trolltech.com}{report issues to us}.

    The following are known issues with this version that will be
    addressed in the next release:

    \list
    \o  \e{Scoping of names isn't handled correctly.}
        This version of the Qt porting tool might change names which
        it shouldn't. For example, a user variable named \c lightGray
        will be changed to \c Qt::lightGray, because the tool doesn't
        parse user variable declarations yet.

    \o  \e{The \c .pro file isn't always updated to take into account 
	the Qt library split.}
        Since the Qt library has been split into several smaller
        libraries, a \c{QT} entry needs to be added to the \c .pro
        file depending on witch classes are used. The
        \l{qt3support.html}{qt3support} library is added if it's not
        already specified.

    \o  \e{Porting of designer \c .ui files is incomplete and might require
	some manual work.}

    \o  \e{The \c q3porting.xml file isn't complete.}
    \endlist
*/
