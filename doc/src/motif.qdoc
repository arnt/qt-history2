/*! \page motif.html

\title Qt Motif Extension
\keyword Motif

This module is part of the \link commercialedition.html Qt Commercial
Edition \endlink and is \e not part of the Qt Open Source Edition.

\section1 Introduction

The Qt Motif extension assists the migration of old Xt and Motif based
applications to the more comfortable Qt toolkit.  This extension
replaces the older Xt/Motif Support Extension included with earlier
versions of Qt.

The Qt Motif extension consists of the following classes:

\list
\i \l QMotif - Provides the basis of the Qt Motif extension.
\i \l QMotifWidget - Provides the QWidget API for Motif widgets.
\i \l QMotifDialog - Provides the QDialog API for Motif dialogs.
\i \l QXtWidget - The Xt/Motif integration widget from the previous
Xt/Motif extension.  This class is unsupported and has many known
problems and limitations.  It is provided only to keep existing source
working; it should not be used in new code.
\endlist

\section2 Additional Documentation

\list

\i \l{Motif Examples}.
\i \l{motif/walkthrough}{Migration Walkthrough} - A
complete migration of a Motif based program to the Qt toolkit.

\endlist

\section1 Common Problems

\section2 Incorrect CDE Color Scheme

QMotifWidget and QMotifDialog will use the same Visual, Colormap
and color depth that QApplication uses.  When using CDE, the color
scheme may be incorrect when using a Visual, Colormap and color depth
that is not the default.  To work around this problem, add the
following resource string to your startup files (for example,
\c $HOME/.dt/sessions/current/dt.resources):

\code
    *userColorObj: false
\endcode

\section2 X11 Header Conflicts

The X11 headers define some constants that conflict with the Qt
headers.  The solution is to include all Qt headers first, followed by
headers from this extension, and all Xt/Motif and X11 headers last.
For example:

\code
    // Qt headers first
    #include <qapplication.h>
    #include <qpushbutton.h>
    #include <qsocket.h>
    ...

    // QMotif* headers next
    #include <qmotif.h>
    #include <qmotifdialog.h>
    #include <qmotifwidget.h>

    // Xt/Motif and X11 headers last
    #include <X11/Xlib.h>
    #include <Xt/Intrinsic.h>
    #include <Xm/Xm.h>
    ...
\endcode

\section2 Multiple Screen Support

QMotifWidget can be used together with QDesktopWidget to create
top-level windows on multiple screens.  A common mistake is to create
a QMotifWidget on a non-default screen while the Xt/Motif widgets are
created on the default screen.  The solution is to specify the screen
to both QMotifWidget and the Xt/Motif child.  For example:

\code
    Display *dpy = QApplication::desktop()->x11Display();
    Arg args[1];

    // make sure both QMotifWidget and the XmMainWindow are on screen 1
    XtSetArg(args[0], XtNscreen, ScreenOfDisplay(dpy, 1));
    QMotifWidget *toplevel =
        new QMotifWidget(QApplication::desktop()->screen(1),
                         xmMainWindowWidgetClass, args, 1, "mainwindow");
\endcode

*/
