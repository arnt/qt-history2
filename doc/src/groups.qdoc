/****************************************************************************
**
** Copyright (C) 1992-$THISYEAR$ Trolltech AS. All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*! \page groups.html

\title Grouped Classes

This page provides a way of navigating Qt's classes by grouping
related classes together. Some classes may appear in more than one group.

\table
\header 
\i Group
\i Description

\row 
\i \link abstractwidgets.html   Abstract Widgets \endlink
\i Abstract widget classes usable through subclassing.

\row 
\i \link accessibility.html   Accessibility \endlink
\i Classes that provide support for accessibility.

\row 
\i \link advanced.html   Advanced Widgets \endlink
\i Advanced GUI widgets such as listviews and progress bars.

\row 
\i \link basic.html   Basic Widgets \endlink
\i Basic GUI widgets such as buttons, comboboxes and scrollbars.

\omit
\row 
\i \link componentmodel.html   Component Model \endlink
\i Interfaces and helper classes for the Qt Component Model.
\endomit

\row
\i \link database.html Database\endlink
\i Database related classes, e.g. for SQL databases.

\row 
\i \link time.html   Date and Time \endlink
\i Classes for handling date and time.

\row 
\i \link draganddrop.html   Drag and Drop \endlink
\i Classes dealing with drag and drop and mime type
   encoding and decoding.

\row 
\i \link environment.html   Environment \endlink
\i Classes providing various global services such as
   event handling, access to system settings and internationalization.

\row
\i \link events.html Events\endlink
\i Classes used to create and handle events.

\row 
\i \link tools.html  Utility Classes \endlink
\i Collection classes such as list, queue, stack and string, along
with other classes that can be used without needing QApplication.

\row 
\i \link multimedia.html   Multimedia, Graphics, and Printing \endlink
\i Classes that provide support for graphics (2D, and with OpenGL, 3D),
image encoding, decoding, and manipulation, sound, animation,
printing, etc.

\row 
\i \link helpsystem.html   Help System \endlink
\i Classes used to provide online-help for applications.

\row 
\i \link geomanagement.html   Layout Management \endlink
\i Classes handling automatic resizing and moving of widgets, for
        composing complex dialogs.

\row
\i \link shared.html	Implicitly and Explicitly Shared
Classes\endlink
\i Classes that use reference counting for fast copying.

\row 
\i \link io.html   Input/Output and Networking \endlink
\i Classes providing file input and output along with directory and
network handling.

\row 
\i \link application.html   MainWindow and Related Classes \endlink
\i Everything you need for a typical modern main application window,
including menus, toolbars, workspace, etc.

\row 
\i \link misc.html   Miscellaneous \endlink
\i Various other useful classes.

\row
\i \link model-view.html Model/View Classes \endlink
\i Classes that use the model/view design pattern.

\row 
\i \link objectmodel.html   Object Model \endlink
\i The Qt GUI toolkit's underlying object model.

\row 
\i \link organizers.html   Organizers \endlink
\i User interface organizers such as splitters, tab bars, button groups, etc.

\row
\i \link plugins.html Plugin Classes\endlink
\i Plugin related classes.

\row 
\i \link dialogs.html   Standard Dialogs \endlink
\i Ready-made dialogs for file, font, color selection and more.

\row
\i \link containers.html Generic Containers\endlink
\i Qt's template-based container classes.

\row
\i \link text.html Text Related Classes\endlink 
\i Classes for text
processing. (See also \link xml-tools.html XML Classes\endlink.)

\row
\i \link thread.html Threading Classes\endlink
\i Classes that provide threading support.

\row 
\i \link appearance.html   Widget Appearance \endlink
\i Appearance customization with styles, fonts, colors etc.

\row
\i \link xml-tools.html XML Classes\endlink
\i Classes that support XML, via, for example DOM and SAX.

\row
\i \link qws.html Qt/Embedded Classes\endlink
\i Classes that are specific to Qt/Embedded.

\endtable

*/

/*! \defgroup tools

\title Non-GUI Classes

The non-GUI classes are general-purpose collection and string classes
that may be used independently of the GUI classes.

In particular, these classes do not depend on QApplication at all,
and so can be used in non-GUI programs.

*/

/*! \defgroup io

\title Input/Output and Networking 

These classes are used to handle input and output to and from external
devices, processes, files etc. as well as manipulating files and directories.

*/

/*! \defgroup basic

\title Basic Widgets

These basic controls (widgets) are designed for direct use.  There are
also some \link abstractwidgets.html abstract widget classes, \endlink
designed for subclassing, and some \link advanced.html more complex
widgets. \endlink

*/

/*! \defgroup advanced

\title Advanced Widgets

These classes provide more complex user interface controls (widgets).

*/

/*! \defgroup abstractwidgets

\title Abstract Widget Classes

These classes are abstract widgets; they are generally not usable in
themselves, but provide functionality that can be used by inheriting
these classes.

*/

/*! \defgroup accessibility

\title Classes that provide support for accessibility

Accessible applications are able to be used by users who cannot use
conventional means of interaction. These classes provide support for
accessible applications.

*/

/*! \defgroup objectmodel

\title Object Model

These classes form the basis of the \link object.html Qt Object Model \endlink.

*/

/* \defgroup componentmodel

\title Component Model

These classes and interfaces form the basis of the \link component.html Qt Component Model \endlink.

*/

/*! \defgroup plugins

\title Plugins

These classes deal with shared libraries, (e.g. .so and DLL files),
and with Qt plugins. 

See the \link plugins-howto.html plugins documentation\endlink.


See also the \link activeqt.html ActiveQt framework\endlink for
Windows.

*/

/*! \defgroup organizers

\title Organizers

These classes are used to organize and group GUI primitives into more
complex applications or dialogs.

*/


/*! \defgroup dialogs

\title Dialog Classes

These classes are complex widgets, composed of simpler widgets; dialog
boxes, generally.

*/

/*! \defgroup multimedia

\title Multimedia, Graphics, and Printing Classes

These classes provide support for graphics (2D, and with OpenGL, 3D),
image encoding, decoding, and manipulation, sound, animation, printing
etc.

See also this introduction to the \link coordsys.html Qt
coordinate system. \endlink

*/

/*! \defgroup draganddrop

\title Drag And Drop Classes

These classes deal with drag and drop and the necessary mime type
encoding and decoding. See also \link dnd.html Drag and Drop with
Qt. \endlink

*/

/*! \defgroup appearance

\title Widget Appearance and Style

These classes are used to customize an application's appearance and
style.

*/

/*! \defgroup shared

\title Implicitly and Explicitly Shared Classes

These classes are normally-heavy classes which in Qt have been
optimized by the use of reference counter and common data so they can
be passed around.

The only important effect is that the classes listed here \e can
be passed around as arguments efficiently, even though they may
seem heavyweight.

*/

/*! \defgroup time

\title Time and Date

These classes provide system-independent date and time abstractions.

*/


/*! \defgroup application

\title Main Window and Related Classes

These classes provide everything you need for a typical modern main
application window, like the main window itself, menu and tool bars,
a statusbar, etc.

*/


/*! \defgroup geomanagement

\title Layout Management

These classes provide automatic geometry (layout) management of widgets.

*/


/*! \defgroup helpsystem

\title Help System

\keyword help system

These classes provide for all forms of online-help in your application,
with three levels of detail:

\list 1
    \i Tool Tips and Status Bar message - flyweight help, extremely brief,
	entirely integrated in the user interface, requiring little
	or no user interaction to invoke.
    \i What's This? - lightweight, but can be
	a three-paragraph explanation.
    \i Online Help - can encompass any amount of information,
	but is typically slower to call up, somewhat separated
	from the user's work, and often users feel that using online
	help is a digression from their real task.
\endlist

*/


/*! \defgroup environment

\title Environment Classes

These classes providing various global services to your application such as
event handling, access to system settings, internationalization, etc.

*/

/*! \defgroup misc

\title Miscellaneous Classes

These classes are useful classes not fitting into any other category.

*/


/*! \defgroup events

\title Event Classes

These classes are used to create and handle events.

For more information see the \link object.html Object model\endlink
and \link signalsandslots.html Signals and Slots\endlink.
*/


/*! \defgroup qtl

\title Qt Template Library Classes

The Qt Template Library (QTL) is a set of templates that provide
object containers. See \link containers.html Generic Containers
\endlink.

*/


/*! \defgroup database

\title Database Classes

These classes provide access to SQL databases.
*/


/*! \defgroup thread

\title Threading

These classes are relevant to threaded applications.
*/


/*! \defgroup xml-tools

\title XML

These classes are relevant to XML users.
*/

/*! \defgroup qws

\title Qt/Embedded Classes

These classes are relevant to Qt/Embedded users.
*/

/*! \defgroup text

\title Text Related Classes

These classes are relevant to text processing. See also the
\l{richtext.html}{Rich Text Processing} overview and the
\link xml.html XML classes \endlink.
*/

/*! \defgroup model-view

\title Model/View Classes

These classes use the model/view design pattern in which the
underlying data (in the model) is kept separate from the way the data
is presented and manipulated by the user (in the view). See also
\link model-view-programming.html Model/View Programming\endlink.

*/

/*! \defgroup activeqt-tools

\title ActiveQt Tools

These tools provide support for integrating Qt with Active X components.

\link activeqt.html ActiveQt\endlink.

*/
