/*!
    \page emb-fonts.html
    \title Fonts

    The Qtopia Core platform uses the \l
    {http://freetype.sourceforge.net/freetype2/index.html}{FreeType 2}
    font engine to produce font output. For that reason it supports the
    same font formats as this font engine. In addition, Qtopia Core
    supports the Qt Prerendered Font (\l QPF), a light-weight
    non-scalable font format specific to Qtopia Core. Several of the
    formats are rendered using anti-aliasing for improved readability
    on low-resolution devices.

    When Qtopia Core applications run, they look for a file called \c
    fontdir in Qt's \c /lib/fonts/ directory which defines the fonts
    that are available to the application. Modify this file to specify
    the preferred fonts.

    Support for other font formats can be added, contact
    \l{mailto:info@trolltech.com}{info@trolltech.com} for more
    information.

    \table 100%
    \row
    \o
    \bold {Optimization}

    Both the \l FreeType and \l QPF formats are features that can be
    disabled and enabled using Qtopia Core's feature definition
    system, reducing the size of Qt and saving resources.

    Note that at least one of the two formats must be defined.

    See also \l {Fine-Tuning Features}.

    \o
    \inlineimage qtopiacore-fontfeatures.png
    \endtable

    All supported fonts use the Unicode character encoding. Most fonts
    available today do, but they usually don't contain \e all the
    Unicode characters. A complete 16-point Unicode font uses over 1
    MB of memory.

    Note that the font definition file, naming conventions for font
    files, and the format of QPF files may change in future versions
    of the Qtopia Core platform.

    \tableofcontents
    \ingroup qtopia-core

    \section1 FreeType

    By default, the \l
    {http://freetype.sourceforge.net/freetype2/index.html}{FreeType 2}
    font engine (and Qtopia Core) supports the following font formats:

    \table 100%
    \header \o Format \o Description
    \row
    \o \bold TTF
    \o
    \bold TrueType

    Originally developed by Apple Computer as a competitor to Adobe's
    Type 1 fonts used in PostScript. Standard on Microsoft Windows and
    Mac OS X.

    \row
    \o \bold{PFA/PFB}
    \o
    \bold {Postscript Type1}

    Scalable fonts often used by printers, but the format is also
    popular on X11. The format is similar in functionality to the
    TrueType fomat.

    \row
    \o \bold BDF
    \o
    \bold {Bitmap Distribution Format}

    A standard format for non-scalable fonts for the X Window System.

    A large number of BDF fonts are supplied as part of standard X11
    distributions, most of these can be used with Qtopia Core. Note
    that these fonts should \e not be used in a production system;
    they are very slow to load and take up a lot of storage
    space.

    \row \o \bold {CID-keyed Type1}
    \o

    A CID keyed font is a PostScript (or OpenType) font designed to
    hold Chinese, Japanese and Korean characters efficiently.

    \row \o \bold CFF
    \o
    \bold {Compact Font Format}

    A font format suitable for compactly representing one or more Type
    1 or CID-keyed fonts.

    \row \o \bold {OpenType fonts}
    \o

    A cross-platform font file format developed jointly by Adobe and Microsoft.

    OpenType fonts resemble TrueType fonts but they can contain either
    TrueType or PostScript Type 1 font data.

    \row \o \bold {SFNT-based bitmap fonts}

    \o The SFNT resource, used for font management on the Macintosh
    platform, describes TrueType outline fonts.

    \row \o \bold PCF
    \o
    \bold {Portable Compiled Format}

    A binary representation of a bitmap font used by the XServer.

    \row \o \bold {Windows FNT}
    \o
    \bold {Microsoft Windows Font File Format}

    A format used to store fonts under Microsoft Windows.

    \row \o \bold PFR
    \o
    \bold {Portable Font Resource}

    Dynamic fonts that are formatted in such a way that they can be
    either automatically grabbed from the author's site or embedded in
    an html page, ensuring that the html page reader sees the page in
    the intended font.

    \row \o \bold {Type 42 }(limited support)
    \o
    A format used to download TrueType fonts to PostScript printers,
    or PostScript compatible printers, that contain a TrueType
    rasterizer.
    \endtable

    It is possible to add modules to the \l
    {http://freetype.sourceforge.net/freetype2/index.html}{FreeType 2}
    font engine to support other types of font files. For more
    information, see the font engine's own website: \l
    http://freetype.sourceforge.net/freetype2/index.html.

    \section1 Qt Prerendered Font
    \target QPF

    The Qt Prerendered Font (QPF) is a platform specific, light-weight
    and non-scalable font format.

    With Qt 3 and the Qt/Embedded platform (Qtopia Core's predecessor)
    it was possible to create custom QPF font files, for example
    creating QPF files from a TrueType (TTF) or Bitmap Distribution
    Format (BDF) font, removing the need for TTF and BDF support. Qt 3
    also provided the \c makeqpf tool, located in its \c tools
    directory, for producing QPF font files.

    Note that the \c makeqpf tool is not yet ported to Qt 4.

    \section1 Memory Requirements

    With TrueType fonts, the rendering of each character in the font
    at a given point size is not performed until it is required in a
    drawing or metrics operation. With Bitmap Distribution Format
    fonts, all characters are rendered when the font is used. For
    example, a 10-point Times font containing the ASCII characters
    uses around 1300 bytes when stored in QPF format.

    Taking advantage of the way the QPF format is structured, Qtopia
    Core memory-maps the data rather than reading and parsing it. This
    reduces RAM consumption even further.

    Scalable fonts use a larger amount of memory per font, but
    these fonts provide a memory saving if many different sizes of each
    font are needed.

    \section1 Specifying Fonts

    When Qtopia Core applications run, they look for a file called \c
    fontdir in Qt's \c /lib/fonts/ directory. Modify this file to
    specify the preferred fonts.

    The file defines the fonts available to the application, and has
    the following format:

    \code
        name file renderer italic weight size flags
    \endcode

    The font definition file does not specify \l QPF fonts; these are
    loaded directly from the directory containing the \c fontdir file,
    and must be called

    \code
        name_size_weight_italicflag.qpf
    \endcode

    Both the \c fontdir file and the \c .qpf file names follow the
    same syntax convention:

    \table 100%
    \header \o Field \o Value
    \row \o \bold name \o \c Helvetica, \c Times, etc.
    \row \o \bold file \o \c helvR0810.bdf, \c verdana.ttf, etc.
    \row \o \bold renderer \o \c FT
    \row \o \bold italic \o \c y or \c n
    \row \o \bold weight \o \c 50 is normal, \c 75 is bold, etc.
    \row \o \bold size \o \c 0 for scalable or point size * 10 (i.e. \c 120
            for 12pt)
    \row \o \bold flags \o \list
		        \o \c s: smooth (anti-aliased)
		        \o \c u: Unicode range when saving (default is Latin1)
		        \o \c a: ASCII range when saving (default is Latin1)
		        \endlist
    \row \o \bold italicflag \o \c i for italic, otherwise nothing.
    \endtable
*/
