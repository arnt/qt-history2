/*!
  \module QtSvg
  \since 4.1
  \title QtSvg Module
  \contentspage Qt's Modules
  \previouspage QtSql
  \nextpage QtXml

  \brief The QtSvg module provides classes for displaying the contents of SVG
  files.

  Scalable Vector Graphics (SVG) is a language for describing two-dimensional
  graphics and graphical applications in XML. SVG 1.1 is a W3C Recommendation
  and forms the core of the current SVG developments in Qt. SVG 1.2 is the
  specification currently being developed by the \l{SVG Working Group}, and it
  is \l{http://www.w3.org/TR/SVG12/}{available in draft form}.
  The \l{Mobile SVG Profiles} (SVG Basic and SVG Tiny) are aimed at
  resource-limited devices and are part of the 3GPP platform for third generation
  mobile phones. You can read more about SVG at \l{About SVG}.

  \tableofcontents

  \section1 SVG Support
  Qt supports the \l{SVG 1.2 Tiny Static Features}{static features} of
  \l{SVG 1.2 Tiny}. ECMA scripts and DOM manipulation are currently not
  supported.

  \section1 Configuring the Build Process

  Applications that use Qt's SVG classes need to
  be configured to be built against the QtSvg module.
  To include the definitions of the module's classes, use the
  following directive:

  \code
      #include <QtSvg>
  \endcode

  To link against the module, add this line to your \l qmake \c
  .pro file:

  \code
      QT += svg
  \endcode

  The QtSvg module is part of the \l{Qt Desktop Edition} and the
  \l{Qt Open Source Edition}.

  \section1 Rendering SVG files

  The easiest way to render SVG files is to construct a QSvgWidget and
  load an SVG file using one of the QSvgWidget::load() functions.

  QSvgRenderer is the class responsible for rendering SVG files for
  QSvgWidget, and it can be used directly to provide SVG support for
  custom widgets.
  To load an SVG file, construct a QSvgRenderer with a file name or the
  contents of a file, or call QSvgRenderer::load() on an existing
  renderer. If the SVG file has been loaded successfully the
  QSvgRenderer::isValid() will return true.

  Once you have loaded the SVG file successfully, you can render it
  with the QSvgRenderer::render() function. Note that this scheme allows
  you to render SVG files on all paint devices supported by Qt, including
  QWidget, QGLWidget, and QImage. See the \l{SVG Viewer Example}{SVG Viewer}
  example for more details.

*/
