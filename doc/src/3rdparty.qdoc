/****************************************************************************
**
** Discussion of different licenses used in Qt.
**
** Copyright (C) 1992-$THISYEAR$ Trolltech AS. All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \page 3rdparty.html

    \title Third-Party Licenses Used in Qt

    Run \c{configure -help} to see any options that may be available for
    controlling the use of these libraries.

    \tableofcontents

    \section1 dlopen() Compatibility Library for Darwin (\c dlcompat)

    \e{Dlcompat is] a small library that emulates the dlopen()
    interface on top of Darwin's dyld API.} -- quoted from \c
    src/3rdparty/dlcompat/README.

    See \c src/3rdparty/dlcompat/LICENSE for license details.

    \section1 FreeType 2 (\c freetype)

    \e{The FreeType project is a team of volunteers who develop free, portable
    and high-quality software solutions for digital typography. We specifically
    target embedded systems and focus on bringing small, efficient and
    ubiquitous products.} -- quoted from \c 3rdparty/freetype/docs/freetype2.html.

    See \c src/3rdparty/freetype/docs/FTL.txt and \c
    src/3rdparty/freetype/docs/GPL.txt for license details.

    See also the files in \c src/3rdparty/opentype, which are used by
    FreeType.

    Parts of the FreeType projects have been modified and put into Qt
    for use in the painting subsystem. These files are ftraster.h,
    ftraster.c, ftgrays.h and ftgrays.c. The following modifications
    has been made to these files:

    \list
    \i Renamed FT_ and ft_ symbols to QT_FT_ and qt_ft_ to avoid name
    conflicts.
    \i Removed parts of code not relevant when compiled with
    _STANDALONE_ defined.
    \i Changed behaviour in ftraster.c to follow X polygon filling
    rules.
    \i Implemented support in ftraster.c for winding / odd even
    polygon fill rules.
    \i Replaced bitmap generation with span generation in ftraster.c
    \i Renamed: ftraster.h to qblackraster_p.h
    \i Renamed: ftraster.c to qblackraster.c
    \i Renamed: ftgrays.h to qgrayraster_p.h
    \i Renamed: ftgrays.c to qgrayraster.c
    \endlist

    \section1 The Independent JPEG Group's JPEG Software (\c libjpeg)

    \e{This package contains C software to implement JPEG image compression and
    decompression.  JPEG (pronounced "jay-peg") is a standardized compression
    method for full-color and gray-scale images.  JPEG is intended for compressing
    "real-world" scenes; line drawings, cartoons and other non-realistic images
    are not its strong suit.  JPEG is lossy, meaning that the output image is not
    exactly identical to the input image.} -- quoted from \c
    src/3rdparty/libjpeg/README.

    See \c src/3rdparty/libjpeg/README for license details.

    \section1 PNG Reference Library (\c libpng)

    \e{Libpng was written as a companion to the PNG specification, as a way
    of reducing the amount of time and effort it takes to support the PNG
    file format in application programs.} -- quoted from \c
    src/3rdparty/libpng/libpng.txt.

    See \c src/3rdparty/libpng/LICENSE for license details.

    \section1 SQLite (\c sqlite)

    \e{SQLite is a small C library that implements a
    self-contained, embeddable, zero-configuration SQL database engine.}
    -- quoted from \l{http://www.sqlite.org/}{www.sqlite.org}.

    According to the comments in the source files, the code is in the
    public domain.

    \section1 Wintab API (\c wintab)

    Wintab is a de facto API for pointing devices on Windows. The
    wintab code is from \l{http://www.pointing.com/WINTAB.HTM}.

    See \c src/3rdparty/wintab/wintab.h for license details.

    \section1 Data Compression Library (\c zlib)

    \e{zlib is a general purpose data compression library.  All the code
    is thread safe.  The data format used by the zlib library is described
    by RFCs (Request for Comments) 1950 to 1952} -- quoted from \c
    src/3rdparty/zlib/README.

    See \c src/3rdparty/zlib/README for license details.
*/
