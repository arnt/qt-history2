/*!
    \page qtopiacore-pointer.html
    \contentspage {Qtopia Core}{Contents}

    \title Pointer Handling
    \ingroup qtopiacore

    Pointer handling in Qtopia Core works for both mouse and
    mouse-like devices such as touch panels and trackballs. The
    various drivers can be enabled and disabled using the \c configure
    script.

    For example:

\if (defined(QTOPIA_PHONE)
   \code
        ./configure -extra-qtopiacore-config -qt-mouse-tslib
    \endcode

    To list the available mouse drivers run:
    \code
<qtopia-root-dir>/qtopiacore/qt/configure -embedded -help |grep -a1 mouse
    \endcode
    \bold{Note:} By default only the PC mouse driver is enabled.

\else
   \code
        configure -qt-mouse-tslib
    \endcode

    Run \c{./configure -help} to list the available drivers. In the
    default Qt configuration, only the "pc" mouse driver is enabled.
\endif

    \section1 Available Drivers

    Qtopia Core provides drivers for the MouseMan, IntelliMouse,
    Microsoft, NEC Vr41XX, Linux Touch Panel and Yopy protocols as
    well as the universal touch screen library, tslib.

    Provided that the "pc" mouse driver is enabled, Qtopia Core will
    try to auto-detect the mouse device if it is one of the supported
    types on \c /dev/psaux or one of the \c /dev/ttyS?  serial
    lines. If multiple mice are detected, all may be used
    simultaneously. Note that Qtopia Core does not support
    auto-detection of \e {touch panels} in which case the driver must
    be specified explicitly to determine which device to use.

    Other drivers can be added by deriving from the QWSMouseHandler
    and QMouseDriverPlugin classes and using Qt's plugin mechanism.

    \if (defined(QTOPIA_PHONE)
    For a tutorial on how to add a new keyboard driver plug-in see : \l {Tutorial: Implementing a Device Plug-in}.
    \endif

    \section1 Specifying a Driver

    To specify which driver to use, set the QWS_MOUSE_PROTO
    environment variable. For example (if the current shell is bash,
    ksh, zsh or sh):

    \code
         export QWS_MOUSE_PROTO=<driver>:<device>
    \endcode

    The \c <driver> argument is either \c MouseMan, \c IntelliMouse,
    \c Microsoft, \c VR41xx, \c LinuxTP, \c Yopy or \c Tslib, and the
    \c <device> argument is typically \c /dev/mouse for mouse devices
    and \c /dev/ts for touch panels. Note that the latter argument is
    optional.
*/
