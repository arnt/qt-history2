/****************************************************************************
**
** Copyright (C) 1992-$THISYEAR$ Trolltech AS. All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \page winsystem.html

    \title Window System Specific Notes

    Qt is a cross-platform GUI toolkit, so almost the entire API is the
    same on all platforms and window systems. If you wish to use
    platform-specific features, and still maintain a platform-independent
    source tree, you should protect the platform-specific code using the
    appropriate \c{#ifdef} directives (see below).

    Qt provides a few low-level global functions for fine-tuning
    applications on specific platforms. See \l{Special-Purpose Global
    Functions Exported by Qt} for details.

    \tableofcontents

    For information about which platforms are supported by Qt, see the
    \link http://www.trolltech.com/products/platforms/ Platform
    Notes\endlink. For information on distributing Qt applications, see
    \link distributingqt.html Deploying Qt Applications\endlink.

    \target x11
    \section1 Qt/X11

    When compiling for this platform, the macro \c{Q_WS_X11} is defined.

    \e{Not documented here. Please contact Trolltech Technical Support
    if you have queries.}

    \img dependencies.png Qt/X11 Dependencies

    Note: You must compile with \e both Xft and XRender support to get
    alpha transparency support for pixmaps and images.  Configuring with
    XRender support alone is not enough.

    \target win
    \section1 Qt/Windows

    When compiling for this platform, the macro \c{Q_WS_WIN} is defined.

    \e{Not documented here. Please contact Trolltech Technical Support
    if you have queries.}

    \target macosx
    \section1 Qt/Mac OS X

    When compiling for this platform, the macro \c{Q_WS_MAC} is defined.

    \list
    \i \link mac-differences.html Qt/Mac-Specific Issues\endlink
    \i \link qtmac-as-native.html Qt/Mac is Mac OS X Native\endlink
    \endlist

    \target qws
    \section1 Qtopia Core (Qt for Embedded Linux)

    When compiling for this platform, the macro \c{Q_WS_QWS} is defined
    (the window system is literally the Qt Window System).

    \omit
    \list
    \o \l{emb-install.html}{Installing Qtopia Core}
    \o \l{emb-classes.html}{The Qtopia Core Specific Classes}
    \o \l{emb-envvars.html}{Qtopia Core Environment Variables}
    \o \l{emb-running.html}{Running Qtopia Core Applications}
    \o \l{emb-framebuffer-howto.html}{Enabling the Linux Framebuffer}
    \o \l{emb-qvfb.html}{Qtopia Core Virtual Framebuffer}
    \o \l{emb-vnc.html}{Qtopia Core as a VNC Server}
    \o \l{emb-performance.html}{Qtopia Core Performance Tuning}
    \o \l{emb-features.html}{The Feature Definition File}
    \o \l{emb-differences.html}{Porting Your Applications to Qtopia Core}
    \o \l{emb-fonts.html}{Fonts in Qtopia Core}
    \o \l{emb-charinput.html}{Character Input in Qtopia Core}
    \o \l{emb-pointer.html}{Qtopia Core Pointer Handling}
    \o \l{emb-accel.html}{Adding an Accelerated Graphics Driver to Qtopia Core}
    \o \l{emb-porting.html}{Issues to be Aware of when Porting Qtopia Core}
    \endlist
    \endomit
*/
