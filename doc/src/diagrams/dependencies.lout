@SysInclude { picture }
@SysInclude { tbl }
@SysInclude { diag }
# lout -EPS dependencies.lout > dependencies.eps
macro @TTGreenColour { {cmyk 0.40 0.00 1.00 0.01} }
macro @TTPurpleColour { {cmyk 0.39 0.39 0.00 0.00} }
macro @XrenderColour { rgb { 0.961 0.961 0.863 } }
macro @FreetypeColour { rgb { 0.902 0.902 0.980 } }
macro @GLColour { rgb { 1.000 0.753 0.796 } }
macro @PthreadColour { rgb { 0.741 0.718 0.420 } }
macro @XineramaColour { rgb { 0.792 0.882 1.000 } }
macro @SMColour { rgb { 0.961 1.000 0.980 } }
macro @MiscColour { rgb { 0.941 0.973 1.000 } }
macro @GlibColour { rgb { 0.7 0.7 0.7 } }
@Illustration
    @InitialFont { Helvetica Base 14p }
{
@Centre @Diag
    outline { shadowbox }
    shadow { 0.15f }
    margin { 0.5f }
    hsize { 5f }
    paint { @MiscColour }
    arrowwidth { 0.55f }
    arrowlength { 0.55f }
    pathwidth { medium }
    zindent { 0.1f }
    radius { 0.5f }
    #
    bmargin { 0.5f }
    boutlinestyle { noline }
    #
    coutlinestyle { noline }
    cmargin { 0.5f }
{
@Tbl
#    rule { yes } rulecolour { red }
    indent { ctr }
    iv { ctr }
    marginvertical { 1.25f }
    div { top }
#    fmarginbelow { 0c }

    aformat { @Cell A | @Cell B | @Cell marginbelow { 0c } font { +2p } C | @Cell D | @Cell E }
    bformat { @Cell A | @Cell B | @Cell C | @Cell D | @Cell E }
    cformat { @Cell A | @Cell marginbelow { 1c } B | @Cell marginbelow { 1c } C | @Cell marginbelow { 1c } D | @Cell E }
    dformat { @Cell A | @Cell B | @Cell C | @Cell D | @Cell E }
    eformat { @Cell A | @Cell B | @Cell C | @StartHSpan @Cell D | @HSpan }
{
    @Rowa C { Qt"/"X11 library dependencies }
    @Rowb C { QTGUI:: @Node paint { @TTGreenColour } QtGui }
    @Rowc B { XRENDER:: @Node paint { @XrenderColour } XRender }
	  C { XINERAMA:: @Node paint { @XineramaColour } Xinerama }
          D { SM:: @Node paint { @SMColour } SM }
    @Rowd A { QTCORE:: @Node paint { @TTPurpleColour } QtCore }
          C { XEXT:: @Node Xext } D { ICE:: @Node paint { @SMColour } ICE }
    @Rowe A { PTHREAD:: @Node paint { @PthreadColour } pthread }
          B { GLIB:: @Node paint { @GlibColour } Glib }
          C { X:: @Node X11 }
          D {
	@Tbl
	    font { -2p }
	    margin { 0.15f }
	    cmarginabove { 0c }
	    iv { top }
	    bformat { @Cell A | @Cell B | @Cell C }
	    cformat { @Cell A | @Cell B | @Cell C }
	    aformat { @StartHSpan @Cell A | @HSpan | @HSpan }
	{
	    @Rowb A { C:: @BNode {} } B { D:: @BNode {} }
	          C { some configurations only }
	}
	} 
}
//
@Arrow from { QTGUI } to { XINERAMA }
@HVCurveArrow from { QTGUI } to { QTCORE }
@Arrow from { QTCORE } to { PTHREAD }
@VHVCurveArrow from { QTCORE } to { GLIB } pathstyle { dotted }
@VHVCurveArrow from { QTGUI } to { SM }
@VHVCurveArrow from { QTGUI } to { XRENDER } pathstyle { dotted }
@Arrow from { XINERAMA } to { XEXT }
@VHCurveArrow from { XRENDER } to { XEXT }
@Arrow from { SM } to { ICE }
@Arrow from { XEXT } to { X }
@Link from { C@W } to { D@E } pathstyle { dotted }
}
@LLP
@Tbl
    font { -1p }
    aformat { @Cell white @Colour @I A | @Cell white @Colour @I B | @Cell white @Colour @I C }
    bformat { @Cell A | @Cell B | @Cell C }
{
    @Rowa paint { darkgrey } A { Name } B { Library } C { Notes }
    @Rowb paint { @TTGreenColour } A { QtGui } B { libQtGui }
	C { QtGui }
    @Rowb paint { @TTPurpleColour } A { QtCore } B { libQtCore }
	C { QtCore (non-user interface features) }
    @Rowb paint { @XrenderColour } A { XRender } B { libXrender }  
	C { X Rendering Extension; -xrender or auto-detected }
    @Rowb paint { @XineramaColour } A { Xinerama } B { libXinerama }
	C { Multi-head support; -xinerama or auto-detected }
    @Rowb paint { @MiscColour} A { Xext } B { libXext }  
	C { X Extensions }
    @Rowb paint { @MiscColour} A { X11 } B { libX11 }  
	C { X Window System }
    @Rowb paint { @SMColour } A { SM } B { libSM }  
	C { X Session Management; -sm or auto-detected }
    @Rowb paint { @SMColour } A { ICE } B { libICE }  
	C { Inter-Client Exchange; -sm or auto-detected }
    @Rowb paint { @GlibColour } A { glib } B { libglib-2.0 }  
	C { Common event loop handling; -glib or auto-detected }
    @Rowb paint { @PthreadColour } A { pthread } B { libpthread }  
	C { Multithreading }
}
}
