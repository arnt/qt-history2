/****************************************************************************
**
** Copyright (C) 1992-$THISYEAR$ Trolltech AS. All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \page qtopiacore-envvars.html

    \contentspage {Qtopia Core}{Contents}

    \title Environment Variables
    \ingroup qtopiacore

    \table
    \header \o Variable \o Description

    \row
    \o \bold QWS_SW_CURSOR \target QWS_SW_CURSOR
    \o If defined, always use a software mouse cursor even when using an
    accelerated driver that supports a hardware cursor.

    \row
    \o \bold QWS_DISPLAY \target QWS_DISPLAY
    \o

    Specifies the display type and framebuffer. For example, if the
    current shell is bash, ksh, zsh or sh:

    \code
        export QWS_DISPLAY=<gfx driver><:driver specific options><:display number>
    \endcode

    The default value is an unaccelerated Linux framebuffer driver: \c
    /dev/fb0.  Valid drivers are \c QVfb, \c LinuxFb (unaccelerated
    Linux framebuffer), \c Transformed (for rotated displays), and \c
    VNC (when running Qtopia Core as a VNC server).

    Transformed displays have a special format: the specification
    should include a rotation as a multiple of 90 degrees given as \c
    rot<x>, for instance \c transformed:rot90.

    See also \l {Running Applications}, \l {The Virtual Framebuffer}
    and \l {The VNC Protocol}.

    \row
    \o \bold QWS_SIZE \target QWS_SIZE
    \o

    Specifies the size of Qtopia Core's window which is centered
    within the screen. For example, if the current shell is bash, ksh,
    zsh or sh:

    \code
        export QWS_SIZE=<width>x<height>
    \endcode

    \row
    \o \bold QWS_MOUSE_PROTO \target QWS_MOUSE_PROTO
    \o

    Specifies the driver and device for pointer handling. For example, if the
    current shell is bash, ksh, zsh or sh:

    \code
        export QWS_MOUSE_PROTO=<driver>:<device>
    \endcode

    The available drivers are \c MouseMan, \c IntelliMouse, \c
    Microsoft, \c VR41xx, \c LinuxTP or \c Tslib, and the device is
    typically \c /dev/mouse, or \c /dev/ts for touch panels. Note that
    specifying the device is optional.

    The default value is \c Auto which enables auto-detection of the
    mouse device if the "pc" mouse driver is enabled. Note that Qtopia
    Core does not support auto-detection of touch panels in which case
    the driver must be specified explicitly to determine which device
    to use.

    See also \l {Pointer Handling}.

    \row
    \o \bold QWS_KEYBOARD \target QWS_KEYBOARD
    \o

    Specifies the driver and device for character input. For example, if the
    current shell is bash, ksh, zsh or sh:

    \code
        export QWS_KEYBOARD=<driver>:<device>
    \endcode

    The available drivers are \c SL5000, \c Yopy, \c VR41xx, \c TTY or
    \c USB, and the device is typically \c /dev/tty0. Note that
    specifying the device is optional.

    Multiple keyboard drivers can be specified in one go:

    \code
        export QWS_KEYBOARD=<driver> <driver> <driver>:<device>
    \endcode

    Input will be read from all of specified drivers.

    See also \l {Character Input}.

    \endtable
*/
