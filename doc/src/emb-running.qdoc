/*!
    \page qtopiacore-running.html

    \contentspage {Qtopia Core}{Contents}

    \title Running Applications
    \ingroup qtopia-core

    A Qtopia Core application requires a master application to be
    running, or to be the master application itself. The master
    application is responsible for managing top-level window regions,
    pointer handling and character input. Any Qtopia Core application
    can be the master application by constructing the QApplication
    object with the QApplication::GuiServer type, or by running the
    application with the \c{-qws} command line option.

    An application can be run using both single and multiple displays,
    and various command line option are also available.

    Note that this document assumes that you either are using the \l
    {The Virtual Framebuffer}{Qtopia Core Virtual Framebuffer} or are
    running Qtopia Core using the \l {The VNC Protocol}{VNC}protocol,
    \e or that you have the Linux framebuffer configured correctly and
    that no master process is running. (To test that the Linux
    framebuffer is set up correctly, use the program provided by the
    \l {Testing the Linux Framebuffer} document.)

    \tableofcontents

    \section1 Using a Single Display

    To run the application using a single display, change to a Linux
    console and select an application to run, e.g. \l {Text
    Edit}{demos/textedit}.  Run the application with the \c{-qws}
    option:

    \code
        cd path/to/Qtopia/Core/demos/textedit
        ./textedit -qws
    \endcode

    \table 100%
    \row
    \o
    Provided that the environment variables are adjusted properly
    during the \l {Installing Qtopia Core}{installation process}, you
    should see the \l {Text Edit} demo appear.

    If the input methods don't work properly, the input driver and
    device must be specified explicitly. For more information, please
    consult the following documentation:

    \list
        \o \l {Pointer Handling}
        \o \l {Character Input}
    \endlist

    \o
    \inlineimage qtopiacore-runningapplication.png
    \endtable

    Additional applications should be run as clients, i.e. without the
    \c{-qws} option. You can exit the master application at any time
    using \gui{Ctrl+Alt+Backspace}.

    \section1 Using Multiple Displays

    Qtopia Core also allows multiple displays to be used
    simultaneously by running multiple Qtopia Core master
    processes. This is achieved using the \c -display command line
    parameter or the QWS_DISPLAY environment variable.

    The \c -display parameter's syntax is:

    \code
        <gfx driver><:driver specific options><:display number>
    \endcode

    The valid drivers are \c LinuxFb, \c QVfb, \c VNC and \c
    Transformed. For example, use the following code to run the
    example and demo launcher \l {Qt Demo example}{Qt Demo}, on a
    transformed display:

    \code
        cd path/to/Qtopia/Core/examples/tools/qtdemo
        qtdemo -qws -display transformed:rot90:1
    \endcode

    Alternatively, you can set the QWS_DISPLAY environment variable
    before running the application. For example, if the current shell
    is bash, ksh, zsh or sh:

    \code
        export QWS_DISPLAY=<gfx driver><:driver specific options><:display number>
    \endcode

    \section1 Command Line Options

    \table 100%
    \header
    \o Option \o Description
    \row
    \o \bold -fn <font>
    \o
    Defines the application font. For example:
    \code
        ./myapplication -fn helvetica
    \endcode
    The font should be specified using an X logical font description.
    \row
    \o \bold -bg <color>
    \o
    Sets the default application background color. For example:
    \code
        ./myapplication -bg blue
    \endcode
    The color-name must be one of the names recognized by the QColor constructor.
    \row
    \o \bold -btn <color> \o
    Sets the default button color. For example:
    \code
        ./myapplication -btn green
    \endcode
    The color-name must be one of the names recognized by the QColor constructor.
    \row
    \o \bold -fg <color> \o
    Sets the default application foreground color. For example:
    \code
        ./myapplication -fg 'dark blue'
    \endcode
    The color-name must be one of the names recognized by the QColor constructor.
    \row
    \o \bold -name <objectname> \o
    Sets the application name, i.e. the application object's object name. For example:
    \code
        ./myapplication -name texteditapplication
    \endcode
    See also qApp.
    \row
    \o \bold -title <title> \o
    Sets the application's title. For example:
    \code
        ./myapplication -title 'Text Edit'
    \endcode
    \row
    \o \bold -geometry <width>x<height>x<Xoffset>x<YOffset> \o
    Sets the client geometry of the first window that is shown. For example:
    \code
        ./myapplication -geometry 300x200x50x50
    \endcode
    \row
    \o \bold -keyboard \o
    Enables the keyboard.

    See also the \l {Pointer Handling} documentation.
    \row
    \o \bold -nokeyboard \o
    Disables the keyboard.
    \row
    \o \bold -mouse \o
    Enables the mouse cursor.

    See also the \l {Pointer Handling} documentation.
    \row
    \o \bold -nomouse \o
    Disables the mouse cursor.
    \row
    \o \bold -qws \o
    Runs the application as a master application, i.e. constructs the
    QApplication object with the QApplication::GuiServer type.
    \row
    \o \bold -display \o
    Specifies the display driver.

    See also the \l {Running Applications#Using Multiple
    Displays}{Using Multiple Displays} documentation.
    \row
    \o \bold -decoration <style>\o
    Sets the application decoration. For example:
    \code
        ./myapplication -decoration windows
    \endcode
    The supported styles are \c windows, \c default and \c styled.

    See also QDecoration.
    \endtable


    \omit
    To try this functionality you can do the following:

    \table 100%
    \row
    \o
        \list 1
        \o Change to VC 1 (virtual console one) and run the
        example and demo launcher \l {Qt Demo example}{Qt Demo}:

        \code
            cd path/to/QtopiaCore/examples/tools/qtdemo
            qtdemo -qws
        \endcode

        \image qtopiacore-runningqtdemo.png

        \o Switch to VC 2 and run another one:

        \code
           cd path/to/QtopiaCore//examples/tools/qtdemo
           qtdemo -qws -display :1
        \endcode

        Another launcher will be started. Start an application in this launcher.

        \o Press \gui{Ctrl+Alt+F1} to get back to display 0.
        \endlist

        You can also start additional applications on a particular
        display by specifying the display ID. Change to VC 3:

        \code
            cd path/to/QtopiaCore/examples/widgets/styles
            ./styles -display :1
        \endcode

        will display the styles example on display :1 (i.e. VC 2).

        Only the master process needs to specify the driver/device
        part explicitly. The clients get the information they need
        from the master when they connect. So once you have a master
        server running using a particular driver, you can just use \c
        client \c display \c n to use display \c n.
    \endtable
    \endomit
*/
