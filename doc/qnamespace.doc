/****************************************************************************
**
** Qt's global enums etc.
**
** Copyright (C) 1992-2003 Trolltech AS. All rights reserved.
**
** This file is part of the kernel module of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \enum Qt::AlignmentFlags

    This enum type is used to describe alignment. It contains
    horizontal and vertical flags.

    The horizontal flags are:

    \value AlignAuto Aligns according to the language. Left for most,
	right for Arabic and Hebrew.
    \value AlignLeft Aligns with the left edge.
    \value AlignRight Aligns with the right edge.
    \value AlignHCenter Centers horizontally in the available space.
    \value AlignJustify Justifies the text in the available space.
	Does not work for everything and may be interpreted as
	AlignAuto in some cases.

    The vertical flags are:

    \value AlignTop Aligns with the top.
    \value AlignBottom Aligns with the bottom.
    \value AlignVCenter Centers vertically in the available space.

    You can use only one of the horizontal flags at a time. There is
    one two-dimensional flag:

    \value AlignCenter Centers in both dimensions.

    You can use at most one horizontal and one vertical flag at a time. \c
    AlignCenter counts as both horizontal and vertical.

    Masks:

    \value AlignHorizontal_Mask
    \value AlignVertical_Mask

    Conflicting combinations of flags have undefined meanings.
*/

/*!
    \enum Qt::GlobalColor

    Qt's 19 predefined QColor objects

    \value white
    \value black
    \value red
    \value darkRed
    \value green
    \value darkGreen
    \value blue
    \value darkBlue
    \value cyan
    \value darkCyan
    \value magenta
    \value darkMagenta
    \value yellow
    \value darkYellow
    \value gray
    \value darkGray
    \value lightGray
    \value color0 0 pixel value (for bitmaps)
    \value color1 1 pixel value (for bitmaps)

    \img qt-colors.png Qt Colors

    \sa QColor

*/

/*!
    \enum Qt::StringComparisonFlags

    Many Qt string functions accept a StringComparisonFlags argument
    which can be the OR of these values. (A flag value of 0 signifies
    a case-insensitive match anywhere in the string.)

    \value CaseSensitive
    \value BeginsWith
    \value EndsWith
    \value Contains
    \value ExactMatch

*/

