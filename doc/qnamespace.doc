/****************************************************************************
**
** Qt's global enums etc.
**
** Copyright (C) 1992-2003 Trolltech AS. All rights reserved.
**
** This file is part of the kernel module of the Qt GUI Toolkit.
** EDITIONS: FREE, PROFESSIONAL, ENTERPRISE
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

/*!
    \enum Qt::AlignmentFlags

    This enum type is used to describe alignment. It contains
    horizontal and vertical flags.

    The horizontal flags are:

    \value AlignAuto Aligns according to the language. Left for most,
	right for Arabic and Hebrew.
    \value AlignLeft Aligns with the left edge.
    \value AlignRight Aligns with the right edge.
    \value AlignHCenter Centers horizontally in the available space.
    \value AlignJustify Justifies the text in the available space.
	Does not work for everything and may be interpreted as
	AlignAuto in some cases.

    The vertical flags are:

    \value AlignTop Aligns with the top.
    \value AlignBottom Aligns with the bottom.
    \value AlignVCenter Centers vertically in the available space.

    You can use only one of the horizontal flags at a time. There is
    one two-dimensional flag:

    \value AlignCenter Centers in both dimensions.

    You can use at most one horizontal and one vertical flag at a time. \c
    AlignCenter counts as both horizontal and vertical.

    Masks:

    \value AlignHorizontal_Mask
    \value AlignVertical_Mask

    Conflicting combinations of flags have undefined meanings.
*/

/*!
    \enum Qt::GlobalColor

    Qt's 19 predefined QColor objects

    \value white
    \value black
    \value red
    \value darkRed
    \value green
    \value darkGreen
    \value blue
    \value darkBlue
    \value cyan
    \value darkCyan
    \value magenta
    \value darkMagenta
    \value yellow
    \value darkYellow
    \value gray
    \value darkGray
    \value lightGray
    \value color0 0 pixel value (for bitmaps)
    \value color1 1 pixel value (for bitmaps)

    \img qt-colors.png Qt Colors

    \sa QColor

*/

/*!
    \enum Qt::PenStyle

    \value NoPen
    \value SolidLine
    \value DashLine
    \value DotLine
    \value DashDotLine
    \value DashDotDotLine
    \value MPenStyle Mask

    \img pen-styles.png Pen styles

    \sa QPen
*/

/*!
    \enum Qt::PenCapStyle

    \value FlatCap
    \value SquareCap
    \value RoundCap
    \value MPenCapStyle

    \img pen-cap-styles.png Pen Cap Styles

    \sa QPen
*/

/*!
    \enum Qt::PenJoinStyle

    \value MiterJoin
    \value BevelJoin
    \value RoundJoin
    \value MPenJoinStyle

    \img pen-join-styles.png Pen Join Styles

    \sa QPen
*/

/*!
    \enum Qt::BrushStyle

    \value NoBrush
    \value SolidPattern
    \value Dense1Pattern
    \value Dense2Pattern
    \value Dense3Pattern
    \value Dense4Pattern
    \value Dense5Pattern
    \value Dense6Pattern
    \value Dense7Pattern
    \value HorPattern
    \value VerPattern
    \value CrossPattern
    \value BDiagPattern
    \value FDiagPattern
    \value DiagCrossPattern
    \value CustomPattern

    \img brush-styles.png Brush Styles

    \sa QBrush
*/

/*!
    \enum Qt::StringComparisonFlags

    Many Qt string functions accept a StringComparisonFlags argument
    which can be the OR of these values. (A flag value of 0 signifies
    a case-insensitive match anywhere in the string.)

    \value CaseSensitive
    \value BeginsWith
    \value EndsWith
    \value Contains
    \value ExactMatch

*/

/*!
    \enum Qt::LineBreakMode

    \value NoLineBreak
    \value SmartLineBreak
    \value AtLineBoundary
    \value AtWordBoundary
    \value AtCharacterBoundary
*/

/*!
    \enum Qt::TextFlags

    \value SingleLine
    \value DontClip
    \value ExpandTabs
    \value ShowPrefix
    \value WordBreak
    \value BreakAnywhere
    \value NoAccel
*/

/*!
    \enum Qt::BGMode

    \internal

    \value TransparentMode
    \value OpaqueMode
*/

/*!
    \enum Qt::RasterOp

    \value CopyROP
    \value OrROP
    \value XorROP
    \value NotAndROP Synonym: EraseROP
    \value NotCopyROP
    \value NotOrROP
    \value NotXorROP
    \value AndROP Synonym: NotEraseROP
    \value NotROP
    \value ClearROP
    \value SetROP
    \value NopROP
    \value AndNotROP
    \value OrNotROP
    \value NandROP
    \value NorROP Synonym: LastROP
*/

/*!
    \enum Qt::ConnectionType

    \internal

    \value AutoConnection
    \value DirectConnection
    \value QueuedConnection
*/
