/****************************************************************************
** $Id$
**
** Help with porting from Qt 3.x to Qt 4.x
**
** Copyright (C) 1992-2003 Trolltech AS.  All rights reserved.
**
** This file is part of the Qt GUI Toolkit.
**
** This file may be distributed under the terms of the Q Public License
** as defined by Trolltech AS of Norway and appearing in the file
** LICENSE.QPL included in the packaging of this file.
**
** This file may be distributed and/or modified under the terms of the
** GNU General Public License version 2 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.
**
** Licensees holding valid Qt Enterprise Edition or Qt Professional Edition
** licenses may use this file in accordance with the Qt Commercial License
** Agreement provided with the Software.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
** See http://www.trolltech.com/pricing.html or email sales@trolltech.com for
**   information about Qt Commercial License Agreements.
** See http://www.trolltech.com/qpl/ for QPL licensing information.
** See http://www.trolltech.com/gpl/ for GPL licensing information.
**
** Contact info@trolltech.com if any conditions of this licensing are
** not clear to you.
**
**********************************************************************/

/*!
\page porting.html

\title Porting to Qt 4.x

This document describes porting applications from Qt 3.x to Qt 4.x. 

If you haven't yet made the decision about porting, or are unsure
about whether it is worth it, take a look at the \link
keyfeatures40.html key features\endlink offered by Qt 4.x.

The Qt 4.x series is not binary compatible with the 3.x series. This
means programs compiled for Qt 3.x must be recompiled to work with Qt
4.x.  Qt 4.x is also not completely \e source compatible with 3.x,
however all points of incompatibility cause compiler errors or
run-time messages (rather than mysterious results).  Qt 4.x includes
many additional features and discards obsolete functionality. Porting
from Qt 3.x to Qt 4.x is straightforward, and once completed makes 
the considerable additional power and flexibility of Qt 4.x available
for use in your applications.

To port code from Qt 3.x to Qt 4.x:

\list 1

\i Briefly read the porting notes below to get an idea of what to expect.
\i Be sure your code compiles and runs well on all your target platforms
   with Qt 3.x.
\i Recompile with Qt 4.x.  For each error, search below for related
   identifiers (e.g. function names, class names). This document 
   mentions all relevant identifiers to help you get the information
   you need at the cost of being a little verbose.
\i If you get stuck, ask on the \link http://qt-interest.trolltech.com/
   qt-interest \endlink mailing list, or Trolltech Technical Support if
   you're a registered licensee.

\endlist

Table of contents:

\tableofcontents

\section1 QString

If you specify a negative value for \e len to left() or right() then an empty string is
returned.

*/
