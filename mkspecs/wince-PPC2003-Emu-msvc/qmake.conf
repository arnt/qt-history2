#
# $Id$
#
# qmake configuration for win32-msvc
#
# Written for Microsoft eMbedded C++
#

MAKEFILE_GENERATOR	= MSVC
TEMPLATE		= app
CONFIG			+= qt warn_on release flat link_prl



# ======================================================================
# WinCE compiler dependent defines                                 BEGIN
# ======================================================================
# This mkspec is setup to compile for the x86 emulator on the PocketPC
# 2002 version of Windows CE. You may copy the mkspec directory, and
# alter the variables below suit the needs for a specific platform.

QMAKE_PLATFORM		= Win32 (WCE emulator)		# Name of target
QMAKE_PLATFORM_DIR	= Emu_PPC2003			# Name of platform directory
QT_CE_APP_PRJ_ID	= 0xa601			# CPU application ID
QT_CE_DLB_PRJ_ID	= 0xa602			# CPU dynamic lib ID
QT_CE_SLB_PRJ_ID	= 0xa604			# CPU static lib ID
QT_CE_CPU_ID		= {32E52003-403E-442D-BE48-DE10F8C6131D}
QT_CE_PLATFORM_ID	= {8A9A2F80-6887-11D3-842E-005004848CBA}
QT_CE_COMPILER		= cl.exe			# Compiler executable for target CPU

QT_CE_DEFINES		= /D _X86_ /D x86 /D _i386_	# 'Shared' defines (CL & RSC)
QT_CE_CL_DEFINES	= /D _WIN32_WCE_CEPC		# CL only defines
QT_CE_WIN32_WCE		= 420				# $(CEVersion)
QT_CE_UNDER_CE		= 420				# $(CEVersion)
QT_CE_PLATFORM		= WIN32_PLATFORM_PSPC=400	# $(CePlatform)
QT_CE_MACHINE		= /MACHINE:IX86			# /MACHINE:{ALPHA|ALPHA64|ARM|IA64|IX86|MIPS|MIPS16|MIPSFPU|MIPSFPU16|MIPSR41XX|PPC|SH3|SH4|THUMB}
QT_CE_WINDOWSCE		= 				# /WINDOWSCE:{convert|emulation}
QT_CE_CORELIBC		= corelibc.lib			# $(CEx86Corelibc)
							# $(CENoDefaultLib)
QT_CE_NODEFLIB		= libc.lib /nodefaultlib:libcd.lib /nodefaultlib:libcmt.lib /nodefaultlib:libcmtd.lib /nodefaultlib:msvcrt.lib /nodefaultlib:msvcrtd.lib
# ======================================================================
# WinCE compiler dependent defines                                   END
# ======================================================================


### TODO: Add instructions here!
### ...


# ======================================================================
# WinCE compiler independent defines                               BEGIN
# ======================================================================
# WinCE defines needed for all compilers
DEFINES			+= Q_OS_TEMP QT_NO_PRINTER QT_NO_COMPONENT NO_ERRNO_H NO_GETENV WIN32 STRICT USA INTERNATIONAL INTLMSG_CODEPAGE UNICODE _UNICODE
# ======================================================================
# WinCE compiler independent defines                                 END
# ======================================================================



exists( $(QTDIR)\.qtwinconfig ) {
	include( $(QTDIR)\.qtwinconfig )
}

QMAKE_CC		= $$QT_CE_COMPILER
QMAKE_LEX		= flex
QMAKE_LEXFLAGS		=
QMAKE_YACC		= byacc
QMAKE_YACCFLAGS		= /d
QMAKE_CFLAGS		= /nologo /Gz /D _WIN32_WCE=$$QT_CE_WIN32_WCE /D UNDER_CE=$$QT_CE_UNDER_CE /D "$$QT_CE_PLATFORM" $$QT_CE_CL_DEFINES $$QT_CE_DEFINES
QMAKE_CFLAGS_WARN_ON	= /W3
QMAKE_CFLAGS_WARN_OFF	= /W0
QMAKE_CFLAGS_RELEASE	= /Oxs /D "NDEBUG"
QMAKE_CFLAGS_DEBUG	= /Od /Zi /D "DEBUG" /Gm
QMAKE_CFLAGS_MT		= /MD
QMAKE_CFLAGS_MT_DBG	= /MDd
QMAKE_CFLAGS_MT_DLL	= /MD
QMAKE_CFLAGS_MT_DLLDBG	= /MDd
QMAKE_CFLAGS_YACC	=
QMAKE_CFLAGS_STL_ON	= /GX
QMAKE_CFLAGS_STL_OFF	=
QMAKE_CFLAGS_RTTI_ON	= /GR
QMAKE_CFLAGS_RTTI_OFF	=
QMAKE_CFLAGS_EXCEPTIONS_ON = /GX
QMAKE_CFLAGS_EXCEPTIONS_OFF =

QMAKE_CXX		= $$QMAKE_CC
QMAKE_CXXFLAGS		= $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	= $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG	= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_MT	= $$QMAKE_CFLAGS_MT
QMAKE_CXXFLAGS_MT_DBG	= $$QMAKE_CFLAGS_MT_DBG
QMAKE_CXXFLAGS_MT_DLL	= $$QMAKE_CFLAGS_MT_DLL
QMAKE_CXXFLAGS_MT_DLLDBG= $$QMAKE_CFLAGS_MT_DLLDBG
QMAKE_CXXFLAGS_YACC	= $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_STL_ON	= $$QMAKE_CFLAGS_STL_ON
QMAKE_CXXFLAGS_STL_OFF	= $$QMAKE_CFLAGS_STL_OFF
QMAKE_CXXFLAGS_RTTI_ON	= $$QMAKE_CFLAGS_RTTI_ON
QMAKE_CXXFLAGS_RTTI_OFF	= $$QMAKE_CFLAGS_RTTI_OFF
QMAKE_CXXFLAGS_EXCEPTIONS_ON = $$QMAKE_CFLAGS_EXCEPTIONS_ON
QMAKE_CXXFLAGS_EXCEPTIONS_OFF = $$QMAKE_CFLAGS_EXCEPTIONS_OFF

QMAKE_INCDIR		=
QMAKE_INCDIR_QT		= $(QTDIR)\include
QMAKE_LIBDIR_QT		= $(QTDIR)\lib

QMAKE_RUN_CC		= $(CC) -c $(CFLAGS) $(INCPATH) -Fo$obj $src
QMAKE_RUN_CC_IMP	= $(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ $<
QMAKE_RUN_CC_IMP_BATCH	= $(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ @<<
QMAKE_RUN_CXX		= $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$obj $src
QMAKE_RUN_CXX_IMP	= $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ $<
QMAKE_RUN_CXX_IMP_BATCH	= $(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ @<<

QMAKE_LINK		= link
QMAKE_LFLAGS		= /NOLOGO /nodefaultlib:$$QT_CE_NODEFLIB $$QT_CE_WINDOWSCE $$QT_CE_MACHINE
QMAKE_LFLAGS_RELEASE	=
QMAKE_LFLAGS_DEBUG	= /DEBUG
QMAKE_LFLAGS_CONSOLE	= /SUBSYSTEM:console,4.20
QMAKE_LFLAGS_WINDOWS	= /SUBSYSTEM:windowsce,4.20
QMAKE_LFLAGS_CONSOLE_DLL= /SUBSYSTEM:console,4.20 /DLL
QMAKE_LFLAGS_WINDOWS_DLL= /SUBSYSTEM:windowsce,4.20 /DLL
QMAKE_LFLAGS_QT_DLL	= /BASE:0x39D00000

QMAKE_LIBS		= commctrl.lib coredll.lib $$QT_CE_CORELIBC
QMAKE_LIBS_CONSOLE	= ole32.lib oleaut32.lib uuid.lib winsock.lib
QMAKE_LIBS_WINDOWS	= ole32.lib oleaut32.lib uuid.lib winsock.lib
QMAKE_LIBS_QT		= $(QTDIR)\lib\qt.lib
QMAKE_LIBS_QT_THREAD	= $(QTDIR)\lib\qt-mt.lib
QMAKE_LIBS_QT_ENTRY	= $(QTDIR)\lib\qtmain.lib

QMAKE_LIBS_OPENGL	=
QMAKE_LFLAGS_OPENGL	=

QMAKE_MOC		= $(QTDIR)\bin\moc.exe
QMAKE_UIC		= $(QTDIR)\bin\uic.exe
QMAKE_IDC		= $(QTDIR)\bin\idc.exe

QMAKE_IDL		= midl
QMAKE_LIB		= lib /NOLOGO
QMAKE_RC		= rc

QMAKE_ZIP		= zip -r -9

QMAKE_COPY		= copy
QMAKE_MOVE		= move
QMAKE_DEL_FILE		= del
QMAKE_DEL_DIR		= rmdir
QMAKE_CHK_DIR_EXISTS	= if not exist
QMAKE_MKDIR		= mkdir

DSP_EXTENSION		= .vcp
