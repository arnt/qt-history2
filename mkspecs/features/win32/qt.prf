shared:DEFINES += QT_DLL
CONFIG *= moc thread
plugin {
    CONFIG += dll
    DEFINES += QT_PLUGIN
}
!contains(DEFINES, QT_NODLL) {
  QT_ENV_DLL = $$(QT_DLL)
  QT_ENV_NO_DLL = $$(QT_NODLL)
  !isEmpty(QT_ENV_DLL):isEmpty(QT_ENV_NO_DLL):DEFINES += QT_DLL
  contains(DEFINES, QT_MAKEDLL)|contains(DEFINES, QT_DLL) {
     QMAKE_QT_DLL = 1
     target_qt:!isEmpty(QMAKE_LIB_FLAG):CONFIG += dll;
  }
}
INCLUDEPATH += $$QMAKE_INCDIR_QT
contains( QT_PRODUCT, qt-(enterprise|internal) ) {
  INCLUDEPATH += $$QMAKE_INCDIR_QT/ActiveQt
}
QMAKE_LIBDIR += $$QMAKE_LIBDIR_QT
!debug:DEFINES += QT_NO_DEBUG
target_qt {
    shared {
	CONFIG += dll
    }
    !isEmpty(QMAKE_LIB_FLAG) {
        !isEmpty(QMAKE_QT_DLL) {
            DEFINES += QT_MAKEDLL
            QMAKE_LFLAGS += $$QMAKE_LFLAGS_QT_DLL
        } 
    }
}
for(QTLIB, QT) {
    qlib =
    isEqual(QTLIB, gui):qlib = QtGui
    else:isEqual(QTLIB, network):qlib = QtNetwork
    else:isEqual(QTLIB, xml):qlib = QtXml
    else:isEqual(QTLIB, opengl):qlib = QtOpenGL
    else:isEqual(QTLIB, sql):qlib = QtSql
    else:isEqual(QTLIB, core):qlib = QtCore
    else:isEqual(QTLIB, canvas):qlib = QtCanvas
    else:isEqual(QTLIB, compat):qlib = Qt3Compat
    else:message("Unknown QT: $$QTLIB"):qlib =
    !isEmpty(qlib) {
        target_qt:isEqual(TARGET, qlib) {
            warning($$TARGET cannot have a QT of $$QTLIB)
        } else {
	    isEqual(QTLIB, compat) {
	       QTDIR_build:warning(***USE of COMPAT inside of QTDIR!**) #just for us
	       INCLUDEPATH *= $$QMAKE_INCDIR_QT/Qt
	       !contains(DEFINES, QT_COMPAT):DEFINES *= QT_COMPAT_WARNINGS
	    }
	    exists($$QMAKE_INCDIR_QT/$$qlib):INCLUDEPATH *= $$QMAKE_INCDIR_QT/$$qlib
	    isEqual(QTLIB, opengl):CONFIG += opengl
            LIBS   += -l$${qlib}
        }
    }
}
