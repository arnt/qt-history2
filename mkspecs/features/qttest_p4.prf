OBJECTS_DIR     = tmp
MOC_DIR         = tmp

CONFIG          += qt warn_on console depend_includepath
CONFIG          -= debug_and_release_target

# find qtestlib's prl file and extract the librarie's name
CONFIG(debug, debug|release) {
    win32:QTESTLIB_PRL = $$[QT_INSTALL_LIBS]/QtTest_debug.prl
    else:QTESTLIB_PRL = $$[QT_INSTALL_LIBS]/libQtTest_debug.prl
} else {
    win32:QTESTLIB_PRL = $$[QT_INSTALL_LIBS]/QtTest.prl
    else:QTESTLIB_PRL = $$[QT_INSTALL_LIBS]/libQtTest.prl
}
QTEST_LIB = $$fromfile($$QTESTLIB_PRL, QMAKE_PRL_TARGET)
win32: QTEST_LIB = $${QTEST_LIB}4.dll
isEmpty(QTEST_LIB) {
    warning("Cannot find qtestlib's prl file!")
} else {
    !exists($$[QT_INSTALL_LIBS]/$$QTEST_LIB):CONFIG += embed_testlib
}

# make sure the test is build according to your Qt configuration
contains(QT_CONFIG, embedded):CONFIG += embedded

embed_testlib {
    QTESTDIR = $$(QTDIR)/tools/qtestlib
    SOURCES += $${QTESTDIR}/qasciikey.cpp \
               $${QTESTDIR}/qabstracttestlogger.cpp \
               $${QTESTDIR}/qsignaldumper.cpp \
               $${QTESTDIR}/qtestdata.cpp \
               $${QTESTDIR}/qtestresult.cpp \
               $${QTESTDIR}/qxmltestlogger.cpp \
               $${QTESTDIR}/qplaintestlogger.cpp \
               $${QTESTDIR}/qtestcase.cpp \
               $${QTESTDIR}/qtestlog.cpp \
               $${QTESTDIR}/qtesttable.cpp
    DEFINES += QTEST_EMBED QTEST_LIGHT
} else {
    CONFIG(debug, debug|release) {
        LIBS += -lQtTest_debug
    } else {
        LIBS += -lQtTest
    }
}

embedded:QMAKE_CXXFLAGS+=-fno-rtti

########################################################################
# Use install rule to run test application.
# This lets you do 'make install' on a test to both build and run it,
# and lets you easily build and run all tests from the parent directory.
# ----------------------------------------------------------------------

runme.files                =
runme.path                 = .
!isEmpty(DESTDIR): runme.commands = cd ./$(DESTDIR) &&
macx:      runme.commands += ./$(QMAKE_TARGET).app/Contents/MacOS/$(QMAKE_TARGET)
else:unix: runme.commands += ./$(QMAKE_TARGET)
else:      runme.commands += $(QMAKE_TARGET)
embedded:  runme.commands += -qws
INSTALLS += runme

########################################################################
