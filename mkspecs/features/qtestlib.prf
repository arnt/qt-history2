
CONFIG += console

INCLUDEPATH = $$[QT_INSTALL_HEADERS]/QtTest $$INCLUDEPATH

QT_TEST_LIB_NAME = QtTest
QT_TEST_LINKAGE =
mac {
   CONFIG(qt_framework, qt_framework|qt_no_framework) { #forced
      QMAKE_CFLAGS *= -F$${QMAKE_LIBDIR_QT}
      QMAKE_CXXFLAGS *= -F$${QMAKE_LIBDIR_QT}
      QMAKE_LIBDIR_FLAGS *= -F$${QMAKE_LIBDIR_QT}
      FRAMEWORK_INCLUDE = $$QMAKE_LIBDIR_QT/$${QT_TEST_LIB_NAME}.framework/Headers
      !qt_no_framework_direct_includes:exists($$FRAMEWORK_INCLUDE) {
         INCLUDEPATH -= $$FRAMEWORK_INCLUDE
         INCLUDEPATH = $$FRAMEWORK_INCLUDE $$INCLUDEPATH
       }
       QT_TEST_LINKAGE = -framework $${QT_TEST_LIB_NAME}
    } else:!qt_no_framework { #detection
       for(frmwrk_dir, $$list($$QMAKE_LIBDIR_QT $$QMAKE_LIBDIR $$(DYLD_FRAMEWORK_PATH) /Library/Frameworks)) {
	  exists($${frmwrk_dir}/$${QT_TEST_LIB_NAME}.framework) {
	     QMAKE_CFLAGS *= -F$${frmwrk_dir}
	     QMAKE_CXXFLAGS *= -F$${frmwrk_dir}
	     QMAKE_LIBDIR_FLAGS *= -F$${frmwrk_dir}
	     FRAMEWORK_INCLUDE = $$frmwrk_dir/$${QT_TEST_LIB_NAME}.framework/Headers
	     !qt_assistant_no_framework_direct_includes:exists($$FRAMEWORK_INCLUDE) {
	        INCLUDEPATH -= $$FRAMEWORK_INCLUDE
	        INCLUDEPATH = $$FRAMEWORK_INCLUDE $$INCLUDEPATH
             }
	     QT_TEST_LINKAGE = -framework $${QT_TEST_LIB_NAME}
   	     break()
          }
       }
   }
}
false {
   QT_TEST_LINKAGE = -l$${QT_TEST_LIB_NAME}
} else:isEmpty(QT_TEST_LINKAGE) {
   win32 {
      CONFIG(debug, debug|release):QT_TEST_LINKAGE = -l$${QT_TEST_LIB_NAME}d
      else:QT_TEST_LINKAGE = -l$${QT_TEST_LIB_NAME}
   } else { 
      isEqual(QT_TEST_LIB_NAME_style, debug):QT_TEST_LINKAGE = -l$${QT_TEST_LIB_NAME}_debug
      else:QT_TEST_LINKAGE = -l$${QT_TEST_LIB_NAME}
   }
}
LIBS += $$QT_TEST_LINKAGE
