CONFIG *= moc thread

#handle defines
win32 {
   shared:DEFINES += QT_DLL
   !contains(DEFINES, QT_NODLL) {
      QT_ENV_DLL = $$(QT_DLL)
      QT_ENV_NO_DLL = $$(QT_NODLL)
      !isEmpty(QT_ENV_DLL):isEmpty(QT_ENV_NO_DLL):DEFINES += QT_DLL
      contains(DEFINES, QT_MAKEDLL)|contains(DEFINES, QT_DLL):QMAKE_QT_DLL = 1
   }
}
CONFIG(release, debug|release):DEFINES += QT_NO_DEBUG
no_keywords:DEFINES += QT_NO_KEYWORDS
plugin { #Qt plugins
   static:DEFINES += QT_STATICPLUGIN
   DEFINES += QT_PLUGIN
}

#handle includes
INCLUDEPATH = $$QMAKE_INCDIR_QT $$INCLUDEPATH #prepending prevents us from picking up "stale" includes
win32:contains( QT_PRODUCT, qt-(enterprise|internal) ) {
  INCLUDEPATH += $$QMAKE_INCDIR_QT/ActiveQt
}

#specific module settings
!isEmpty(QT_BUILD_TREE):QMAKE_LIBDIR += $$QT_BUILD_TREE/lib
QMAKE_LIBDIR += $$QMAKE_LIBDIR_QT
for(QTLIB, $$list($$lower($$unique(QT)))) {
   qlib =
   isEqual(QTLIB, gui):qlib = QtGui
   else:isEqual(QTLIB, network):qlib = QtNetwork
   else:isEqual(QTLIB, xml):qlib = QtXml
   else:isEqual(QTLIB, opengl):qlib = QtOpenGL
   else:isEqual(QTLIB, sql):qlib = QtSql
   else:isEqual(QTLIB, core):qlib = QtCore
   else:isEqual(QTLIB, canvas):qlib = QtCanvas
   else:isEqual(QTLIB, qt3support):qlib = Qt3Support
   else:message("Unknown QT: $$QTLIB"):qlib =
   !isEmpty(qlib) {
      target_qt:isEqual(TARGET, qlib) {
         warning($$TARGET cannot have a QT of $$QTLIB)
      } else {
         DEFINES *= $$upper(QT_$${QTLIB}_LIB)
	 exists($$QMAKE_INCDIR_QT/$$qlib) {
             INCLUDEPATH -= $$QMAKE_INCDIR_QT/$$qlib
             INCLUDEPATH = $$QMAKE_INCDIR_QT/$$qlib $$INCLUDEPATH
         }
	 isEqual(QTLIB, opengl):CONFIG += opengl
	 isEqual(QTLIB, qt3support):DEFINES *= QT3_SUPPORT
	 mac:!qt_no_framework:exists(/Library/Frameworks/$${qlib}.framework/$${qlib}) {
	    FRAMEWORK_INCLUDE = /Library/Frameworks/$${qlib}.framework/Headers
	    !qt_no_framework_direct_includes:exists($$FRAMEWORK_INCLUDE) {
	       INCLUDEPATH -= $$FRAMEWORK_INCLUDE
	       INCLUDEPATH = $$FRAMEWORK_INCLUDE $$INCLUDEPATH
            }
	    LIBS   += -framework $${qlib}
	 } else:CONFIG(debug, debug|release) {
	    win32:LIBS   += -l$${qlib}d
	    else:LIBS   += -l$${qlib}_debug
	 } else { 
 	    LIBS   += -l$${qlib}
         }
      }
   }
}

qt_compat {
   !qt_compat_no_warning:QTDIR_build:warning(***USE of COMPAT inside of QTDIR!**) #just for us
   INCLUDEPATH *= $$QMAKE_INCDIR_QT/Qt
   DEFINES *= QT_COMPAT
}
