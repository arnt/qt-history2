NYE KLASSER
-----------

- en fin Iterator-klasse som alle de andre iteratorene arver


DESIGNENDRINGER
---------------

- hacke QLineEdit til å kunne arves


FUNKSJONSENDRINGER
------------------

- QTableView const: cellWidth, cellHeight, totalWidth,  totalHeight, .....
- QComboBox::activated() rename to selected()


AKSESSENDRINGER
---------------

- QObject::eventFilter protected overalt

- QObject::parent public

- QWidget::setEnabled() og tusen andre nye slots


ENDRINGER UTSATT PGA BINAERKOMPATIBILITET
-----------------------------------------

QPaintDevice::x__Display() -> x11Display()
QLineEdit QLineEdit QLineEdit QLineEdit QLineEdit
Alle set*() virtual, slik at subklasser kan sørge for sine invarianter


ENGLISH THINGS
--------------

Re-arrange all data members to minimize object size.
Provide auto-expanding(?):
    (for LHS)
    type& QArray::operator[](int) 
    (for RHS)
    const type& QArray::operator[](int) const
Honour more brush settings in drawText.  Currently we do all the necessary
 work anyway in order to implement GrayText.
Implement a QDict<KeyType,StoredType>, as per support/1171.

From qt-interest: I wrote a sizeHint() function in a widget derived
from QListBox. In sizeHint(), I thought I could use
QListBox::maxItemWidth(), but sizeHint() is a const function and
maxItemWidth() is not. Shouldn't maxItemWidth() be const?


EAa: How about making Qt listen a bit more to global settings in X
resources?

EAa: We should probably strive to match Win Look & Feel even closer


Use big enough ints/long-pairs in QPainter world transform to allow at
 int-range for at least offsets.  This will improve QScrollView.

Use "top" and "bottom" logical color names rather than "light" and
 "dark" physical names. THEN, use Motif's algorithm for setting those
  colours (it's not just "lighter" and "darker", see -bg white and -bg black)


GERMAN THINGS:
--------------
> the signals applyButtonPressed(), cancelButtonPressed() and
> defaultButtonPressed() in QTabDialog are somewhat misnamed, because
> they are emitted when the corresponding button is clicked, not pressed
> (i.e., emits the signal clicked(), not pressed()). 
