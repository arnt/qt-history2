                        PORTING Qt TO OTHER PLATFORMS

Read this file if you want to port Qt to other NT platforms or C++
compilers. Our internal development environment is Windows 98, NT4.0
and Windows 2000 with both Microsoft Visual C++ (MSVC++) and Borland
C++ Builder (>=4).

                               REQUIREMENTS

Qt requires that your C++ compiler supports multiple inheritance and
templates.  The compiler must recognize the .cpp extension.  Exception
handling and RTTI (Run-Time Type Information) are not required.
Expect problems with old CFront-based compilers.

                                 PATCHES

Please send us the patches you had to make so we can add them to the
code base; then we can support the new platform in an orderly manner.

                           PORTING INSTRUCTIONS

You are strongly recommended to use the tmake utility (see
README.tmake) to write your makefiles. tmake is a multi-platform,
template-based makefile generator that is very easy to use.

In qglobal.h you may need to set _CC_whatever_ for your compiler. It
is not strictly required, but it may be necessary to add some #ifdefs
for your compiler to compile the source.

There are also some size-dependent types (UINT32 and so on), make sure
they're right for your system.

Some compilers emit bad warnings when they compile Qt.  If yours does,
and the code in Qt is sane, please use a #pragma or two to shut your
compiler up.  (This is a good reason for wanting the _CC_whatever_
define above.)

Good luck, and feel free to send mail to qt-bugs@troll.no.
