			INSTALLING Qt/Embedded for ARM


The ARM gcc 2.96 cross-compiler from RedHat/Cygnus has been tested with this 
release. It should also work with gcc 2.95.

Unpack the archive if you have not done so already:

cd <anywhere>
gunzip qt-embedded-%VERSION%-commercial.tar.gz    # uncompress the archive
tar xf qt-embedded-%VERSION%-commercial.tar       # unpack it

This document assumes that the archive is installed as ~/qt-%VERSION%

Compile the Qt/Embedded library and examples:

cd ~/qt-%VERSION%
export QTDIR=~/qt-%VERSION%
export LD_LIBRARY_PATH=~/qt-%VERSION%/lib:$LD_LIBRARY_PATH
./configure -xplatform linux-arm-g++
make

Note that some versions of the ARM compiler are unreliable thanks to
internal compiler bugs with optimisation turned on; if you get an internal
compiler error on some files you should compile those files without 
optimisation (simply remove the -O). A debug build (with -debug added to the 
end of the configure) should compile without problems with any version
of the cross-compiler.

Alternatively you can build Qt/Embedded for ARM natively on, for example,
a Corel Netwinder. In this case, simply type ./configure instead
of ./configure -xplatform linux-arm-g++.

