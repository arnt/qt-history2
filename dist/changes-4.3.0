****************************************************************************
*                           General                                        *
****************************************************************************

General Improvements
--------------------

- Configuration/Compilation
    * Fixed OpenBSD and NetBSD build issues.

- Added support for CP949 Korean Codec

- [138140] The whole Qt source compiles with the QT_NO_CAST_FROM_ASCII
  and QT_NO_CAST_TO_ASCII defines and therefore is more robust when
  using codecs.

- Added support for HP-UX 11i (Itanium) with the aCC compiler

- Changed dialogs to respond much better to the LanguageChange event. (i.e. run-time translation
  now works much better.)

- Signals and slots
    * [61295] Added Qt::BlockingQueuedConnection connection type,
      which waits for all slots to be called before continuing.
    * [128646] Ignore optional keywords specified in SIGNAL() and
      SLOT() signatures (struct, class, and enum).
    * Optimize emitting signals that do not have anything connected to them.

- [121629] Added support for Mingw/MSYS platform

- [102293] Added Search path functionality (QDir::addSearchPath)

- Almost all widgets are now styleable using Qt Style Sheets

Third party components
----------------------

- Updated Qt's SQLite version to 3.3.16.

- Updated Qt's FreeType version to 2.3.4.

- Updated Qt's libpng version to 1.2.16.

- Added libtiff version 3.8.2 for the tiff plugin.

****************************************************************************
*                          Library                                         *
****************************************************************************

- QAbstractButton
    * [138210] Ensure strictly alternating ordering of signals resulting from
      autorepeating shortcut. Also fix repeat timer infinite retriggering bug.
    * [150995] Fixed bug where non-checkable buttons take focus when activating 
      shortcuts

- QAbstractItemView
    * [111503] Give the focus back to the view when the tab key is pressed
      while inside an editor.
    * [156290] When the ScrollMode is set to ScrollPerItem, scroll slower.
    * When displaying dates and numbers, the item view classes use their locale
      property, allowing easy customization.
    * Fix a repaint issue with the focus rect if selection mode is NoSelection
    * [147422] Detect when persistent editors take/lose focus and update the
      view accordingly.
    * [146292] items are now updated even if they contain an editor.
    * [130168] auto-scrolling when clicking is now delayed to allow double-clicking
      to happen.
    * [139247] click on a partially visible item was triggering a scroll and the
      wrong item was then clicked.
    * [137729] Use dropAction() instead of proposedAction() in QAbstractItemView::dropEvent().
    * Fix a bug that keyboardSearch() was not ignoring disabled items.

- QAbstractSlider
    * [76155] Fixed bug where the slider handle did not stop under the mouse.

- QAbstractSocket
    * [128546] Fixed bug where an error was emitted with the wrong type.

- QAccessible
    * Added preliminary support for the upcomming IAccessible2 standard
    * Improvements to most of the accessible interfaces.
    * [154534] Make sure that our accessible interfaces honour QWidget::setAccessibleName() and
               QWidget::setAccessibleDescription() better.
    * Avoid crash if QAccessibleInterface::object() returns 0. (it is absolutely legal)

- QApplication
    * Add a flash() method for marking windows that need attention.
    * [86725] Allow the -style command line argument to override a
      style set (with QApplication::setStyle()) before QApplication
      construction.
    * [111892] Fixed a bug that caused Qt to steal all input when
      connecting the QAction::hovered() signal to a slot that called
      QMainWindow::setEnabled(false).
    * [148512] Fixed QApplication::keyboardModifiers() to update
      correctly when minimizing the window when Qt::MetaModifier is held.
    * [148796] Fixed a bug that prevented Qt from detecting system font changes.
    * [154727] Prevent a crash when a widget deletes itself in an key
      event handler without accepting event.
    * [156484] Fixed lastWindowClosed() being emited for each top
      level window when calling QApplication::closeAllWindows().
    * [157667] Fixed widgets with Qt::WA_DeleteOnClose to be properly
      deleted when they are closed in the dropEvent() handler when the
      drag was started in the same application.

- QAtomic
    * [126321] Fixed several flaws in the inline assembler implementations
      for several architectures (ARM, i386, PowerPC, x86-64).
    * [133043] Added support for atomic fetch-and-add.

- QAuthenticator
    * New Class. Needed for authentication support in the Network module.
      Currently supports the Basic, Digest-Md5 and Ntlm authentication mechanisms.

- QBitArray
    * [158816] Fix crash in operator~()

- QAuthenticator
    * New class; added support for complex authenticators.

- QCalendarWidget
    * Don't set maximum width for month/year buttons
    * Use QPalette::Text role for default text
    * date edit feature added, dateEditEnabled and dateEditAcceptDelay properties added
    * [137031] Grid lines are drawn properly when headers are not visible.
    * [151828] the language can be set with QCalendarWidget::setLocale()

- QColorDialog
    * [131160] The color dialog now on Mac OS X can now get an alpha color as well.

- QChar
    * Updated the Unicode tables to Unicode 5.0
    * Added foldCase() and toTitleCase() methods.
    * Added public API to handle the full Unicode range.


- QColor
    * [140150] Fixed bug where QColor::isValid() would return true for certain
      invalid color strings.
    * [120367] Added QColor::setAllowX11ColorNames(bool), which allows
      applications to use X11 color names.
    * Fixed internal errors in toHsv() due to inexact float comparisions.

- QCoreApplication
    * Added support for posted event priorities.
    * [34019] Added QCoreApplication::removePostedEvents() overload
      for removing events of a specific type.
    * Document QCoreApplication::processEvents() as thread-safe;
      calling it will process events for the calling thread.
    * Optimized delivery of QEvent::ChildInserted compatibility events.
    * [154727] Compress posted QEvent::DeferredDelete events (used by
      QObject::deleteLater()) to prevent objects from being delete
      unexpectedly when many such events are postred.
    * avoid duplicate entries in libpaths.

- QCleanlooksStyle
    [129506] * Sliders now looks and acts correct with both reversed and inverted slider appearance.
    [131490] * Group boxes no longer reserves space for title when no title is set.
    [134344] * A sunken frame is now used to indicate checked menu items with icons.
    [133691] * Improved appearance of spin box and buttons when used against dark backgrounds.
    [154499] * Fixed a rendering issue with disabled checked push buttons.
    [154862] * Fixed an issue causing combo box to sometimes show text clipped.
    * Slider appearance is now based on Clearlooks Cairo and the performance on X11 has been improved.
    * The appearance of tab bars when used with Qt::RightToLeft layout direction has been improved.
    * Dock widget title is now elided when the text is too long.

- QColumnView
    * A new widget that provide a column based implementation of QAbstractItemView

- QComboBox
    * Significantly reduced the construction time.
    * [155614] Speedup addItem() and addItems()
    * [155614] Speedup addItem() and addItems()
    * [150768] inserting items doesn't change the current text on editable comboboxes.
    * [150902] The only button on the mouse that can open the popup list is left one.
    * [150735] Fixed pop-up hiding behind top-level windows on Mac.
    * [156700] Fixed bug where the popup was closed when pressing the scroll arrows.
    * [133328] Fixed bug where disabled entries were not grayed out.
    * [134085] Fixed bug where QComboBox::AdjustToContents had no effect.
    * [152840] Fixed bug where QComboBox does not automatically scroll to the current item
    * [90172] Fixed bug where sizeHint iterated over all icons to detect availability.

- QCryptographicHash
    * New Class. Implements support for the Md4, Md5 and Sha1 hash functions.

- QFont
    * X11: Add a method to retrieve the freetype handle from the QFont.

- QFontComboBox
    * [132826] QFontComboBox popup could be shown off-screen.
    * [155614] Speedup addItem() and addItems().
    * [160110] Fixed crash when setting a QFont with pixel size

- QFontMetrics
    * [152013] Fixed bug where boundingRect() gave too big a size using Visual Studio 6.
    * [145980] Added tightBoundingBox() method.

- QCompleter
    * Significantly reduced the construction time.
    * Added support for lazy populated models.
    * [135735] Make QCompleter work in a QLineEdit with a QValidator
    * Added property wrapAround to wrap around completions in popup mode
    * The same QCompleter object can now be set on multiple widgets
    * [143441] Added support for models that sorted in descending order

- QCursor
    * [154593] Fixed hotspot bug for cursors on Mac.
    * [153381] Fixed crash in QCursor assignment operator when the
      cursor was created before QApplication.

- QDateTime
    * [151789] Allow passing of date only format to QDateTime::fromString() (according to ISO 8601)
    * Remove legacy behavior which assumed that a year between 0 and 99 was meant 1900 + year in
      QDateTime
    * [40085, 153114, 145167] Fix bugs in parsing strings into dates.
    * [122047] 0 to 99 are no longer interepreted as 1900 to 1999.
    * [136043] Fixed the USER properties.

- QDir
    * [136380] QDir's permission filters on Unix now behave the same as on
      Windows (previously the filters' behavior was reversed on Unix).
    * [158610] Passing QDir::Unsorted now properly bypasses sorting.
    * [136989] Report removed dirs as non-existent.
    * [129488] Fixed cleanPath for paths with "foo/../bar" pattern.

- QFocusFrame
    * [128713, 129126] Make the QFocusFrame visible in more situations on Mac OS X.

- QFrame
    * [156112] Fixed bug where the default frame was not correct when created without a parent and
      reparented afterwards.
    * [150995] Fixed bug where setting frameStyle did not invalidate the sizeHint

- QDial
    * [151897] Even With tracking disabled, the signal sliderMoved() is emitted
    * [70209] Support the inverted appearance property.

- QDialog
    * [131396] Fixed a crash in QDialog::exec() when the dialog was
      deleted from an event handler.
    * [124269] Hide size grip for extended dialogs.

- QDirIterator
    * New class

- QDialogButtonBox
    * [154493] Action role was moved before Reject role on Windows to conform with platform guidelines.

- QDrag
    * [124962] Added QDrag::exec() to allow changing the default proposed action.

- QDialog
    * [151328] The user can explicit specify the use of buttons on the title bar on Mac.

- QImage
    * [157549] Fixed crash when calling QImage::copy with negative coordinates.
    * Added cacheKey() as a replacement for serialNumber().
    * [131852] Optimized 90 and 270 degrees rotation.
    * [158986] Fixed painting onto a QImage with format QImage::Format_RGB16.
    * Fixed 90 and 270 degrees rotation for QImage::Format_RGB16.
    * [152850] Fixed bug in QImage::text()/setText().
    * don't crash when passing a 0 pointer to the constructor from a xpm.

- QImageReader
    * [141781] Fixed support for doublebyte PPM files (>256 colors).

- QImageWriter
    * Added support to enable compression if plugin supports it.

- QIcon
    * Added cacheKey() as a replacement for serialNumber().
    * Fixed QIcon streaming operators.

- QInputDialog
    * [115565] Disable OK button for non-acceptable text (getInteger() and getDouble()).
    * [90535]  Input dialogs now have a size grip

- QIntValidator, QDoubleValidator
    * Validators recognise numbers formatted in various locales, depending on their "locale"
      property.

- QItemDelegate
    * [145142] It could happen that text was drawn out of the bounds of a cell.

- QVariant
    * [127225] Unloading a GUI plugin will no longer cause crash in
      QVariant in QtCore application.

- QDesktopWidget
    * [135002] emit signal after resize takes place on Mac OS X.

- QDateTimeEdit
    * [111557 and 141266] Improvements with regards to two-digit years in a QDateTimeEdit. Make stepping work properly.
    * [110034] Don't change current section on wheelEvent.
    * [152622] Don't switch section on focusInEvent if the reason is Popup.
    * Fix a bug that would cause problems with formats like dd.MMMM.yyyy.
    * [148522] Make sure the dateRange is valid for QDateTimeEdits that only shows time.
    * [148725] Fix a bug with wrapping and months with fewer than 31 days.
    * [149097] Emit dateTimeChanged even if only date or time is shown.
    * [108572] Make typing 2 into a zzz field turn into 200 rather than 002.
    * Skip to the next field when separator is typed.
    * [141703] Allow empty input when only one section is displayed.
    * [134392] Add a sectionCount property.
    * [134392] Add sectionAt()/currentSectionIndex()/setCurrentSectionIndex() to QDateTimeEdit.
    * Add a NoButtons value for the buttonSymbols property.

- QDockWidget
    * [130773] QDockWidgets remember their undocked positions and sizes.
    * Added support for vertical title bars, which can save space in a QMainWindow.
    * Added support for setting an arbitrary widget as a custom dock widget title bar.
    * [141792] added the visibilityChanged() signal which is emitted when QDockWidgets
      change visibility due to show or hide events, or being selected/deselected in a
      tabbed dock area.
    * added the dockLocationChanged() signal, emitted when dock widgets are moved around
      in a QMainWindow.
    * [135878] Titlebars now support mnemonics properly.
    * [138995] QDockWidget titlebars now correctly indicate their activation state.

- QGridLayout
    * [156497] Fix a one-off error in that caused the bottom button in a QDialogButtonBox to be
               cropped off with one pixel.
- QSettings
    * [153758] Fixed various bugs when writing and reading from Windows registry.

- QSocketNotifier
    * [148472] Mac OS X now prevented from closing the file descriptor when
      the QSocketNotifier is deregistered.
    * [140018] Mac OS X will now invalidate the backing native socket
      notifier upon deregistration.
    * Optimise performance by avoiding some debugging code in release builds.

- QSslCertificate
- QSslCipher
- QSslError
- QSslKey
- QSslSocket
    * New classes; added support for SSL to QtNetwork.

- QTcpSocket
    * Several fixes for improved connection reliability on Windows.
    * Several optimizations.
    * Improved detection of ConnectionRefusedError on Windows and older Unixes.
    * Added support for proxy authentication.

- QTemporaryFile
    * [150770] Fixed large file support on Unix.

- QLineEdit
    * [156104] Disable input methods when not in the "Normal" edit mode.
    * [157355] Fixed drag-n-drop bug on Mac when dragging inside the widget.
    * [151328] Removed caret when text is selected on Mac.
    * [136919] Replace fewer non-printable characters with spaces.

- QDoubleSpinBox
    * [99254] Allow higher settings for decimals

- QFile
    * [128352] A backend refactoring on Windows with major performance
      improvements; in particular line and character reading is much
      faster now.
    * [146693] Fixed a lock-up in copy().
    * [148447] QFile now supports large files when available on Windows.
    * General improved support for stdin.
    * Byte writing performance has improved on all platforms.
    * [151898] Support reading lines with an embedded '\0' character.

- QFileDialog
    * Updated file dialog with native icons, faster performance and a sidebar to
      remember commonly used folders.
    * [134557] Add the ability to set a proxy model.
    * Added dirEntered() and filterSelected() signals which existed in
      Qt3's file dialog.
    * [130353] Fixed Qt/Mac native filedialog pattern splitting
    * [140332] Make QFileDialog respond much better to the LanguageChange event.
    * [154173] Fix a memory deallocation error.
    * Make the selected filter argument work for native Mac OS X file dialogs.

- QFileInfo
    * Do not follow symbolic link for Mac FS hidden flag detection.
    * [128604] Introduced isBundle() for Mac OS X bundle types.
    * [139106] No longer reports drives as hidden on Windows.

- QFileSystemWatcher
    * [155548] Reliability fixes.
    * When in polling mode, send change notification when file permissions change.
    * [144049, 149637] Fixed a bug that prevented watching a directory
      for notification on Windows.

- QFtp
    * [107381] Greatly improved LIST support; QFtp now supports more server
    types.
    * [136008] Improved tolerance for servers with no EPRT/EPSV support.
    * [150607] Fixed a race condition when using ActiveMode for uploading.

- QFSFileEngine
    * Fix bug in fileTime() on Win98 and WinME
    * Make sure we set the working directory of a windows shortcut when a link is created.
    * Improve reliability of buffered reads on platforms that cache their EOF status.

- QGraphicsView
    * [149317] Added 'NoViewportUpdate' to the set of modes for updating a view.

- QGraphicsItem
    * [151271] Fixed crash when calling update on items that are not fully constructed.

- QFileSystemWatcher
    * [143381] Fixed bug where addPath/removePath would fail when passing an empty string.

- QGraphicsItemAnimation
    * [140522] Fixed special case interpolation bug.
    * [140079] Fixed multiple insertations for the same step.

- QHeaderView
    * Now uses Qt::NoFocus for its default focus policy
    * [99569] Speedups providing up to a 2X speed increase for some cases
    * [146292] It was under certain circumstances impossible to resize the last section.
    * [144452] setDefaultAlignment had no effect.
    * [156453] Fixed resizing of columns causing branches to be drawn in the next column.

- QHostInfo
    * [141946] No longer stops working after destroying QCoreApplication.
    * [152805] Now periodically reinitializes DNS settings on Unix.

- QHttp
    * [139575] Fixed state for servers that use the "100 Continue" response.
    * Added support for the https protocol.
    * Improved proxy support.
    * Added support for server and proxy authentication.

- QItemSelectionModel
    * Optimizations for some common cases.
    * [143383] hasSelection was not always giving good results.

- QLayout
    * New features to Qt's layout system:
      - Can specify independent values of all of the four margins.
      - Can specify horizontalSpacing and verticalSpacing in QGridLayout.
      - The spacing between layout items can now be different.
      - Layout items can now occupy parts of the margin or spacing.

- QLibrary
    * QLibrary::load() would discard the real error message if the error was something else than
      ERROR_MOD_NOT_FOUND. (Win32)
    * QLibrary::load() would not load a library with no suffix. (because LoadLibrary automagically
      appended the .dll suffix on Win32)
    * If we loaded a library without specifying a suffix, and the file found had the .dll suffix,
      fileName() would not return the fileName found, but the fileName searched for.
    * [156276] Fix behaviour of unload() to return true only if the library could be *unloaded*.

- QList
    * Fixed a race-condition in QList::detach() which could cause an
      assertion in debug mode.

- QListView
    * [136614] Batched mode did not display the last item of the batch.
    * Fix some issues with jerky scrolling in ScrollPerItem mode if the gridsize was different
      from the delegates size hint.
    * [113437] Avoid some very noticeable flicker on slow systems in Batched mode. (The first batch
      is laid out immediately; no need to wait for the timer).
    * [114473] Added new property to QListView: selectionRectVisible
    * Fix a bug where too many items was selected.
    * [136614] QListView::Batched did not display the last item when number of items was a multiple
      of batchSize.
    * If we had a gridSize different from itemSize we could some times end up with wrong scrollbar
      range.
    * [144378] Better navigation when an item is taller than the viewport.

-QListWidget
    * [146284] SingleSelection is also taken into account when calling setSelected on items.

- QLocale
    * Locale database updated to CLDR 1.4: more locales supported, numerous
      fixes to existing locales.

- QNetworkInterface
    * [146834] Now properly generates broadcast addresses on Windows XP.

- QNetworkProxy
    * Added support for transparent HTTP CONNECT client proxying.
    * Added support for complex authenticators through QAuthenticator.

- QRectF
    * [143550] Added QRectF(topRight,bottomLeft) constructor.

- QResource
    * [129429] Allow a QByteArray for runtime resource registration.

- QMainWindow
    * [145493] Fix a crash with QMainWindow:setMainWindow(0); on X11
    * [137013, 158094] Fixed bugs respecting size hints, minimum/maximum sizes and
      size policies of QDockWidgets in QMainWindow.
    * [147964] Animated tool bar areas adjust dynamically when a QToolBar is dragged
      over them.
    * Added the dockOptions property QMainWindow. This makes it possible to:
        - specify that tabbed dock areas should have vertical tab bars,
        - disable tabbed docking alltogether,
        - force tabbed docking, disallowing placing dock widgets next to each other.
    * Fixed bugs in saving and restoring QMainWindow state.
    * [143026] Fixed support for hiding/showing toolbars on Mac.
    * [131695] Add unified toolbar support on Mac OS X.

- QMdiArea
- QMdiSubWindow
    * New classes. Replacement for QWorkspace.

- QClipboard
    * Make sure that clear() on the Mac OS X clipboard really clears its data.
    * [143927] Don't drop alpha channel information on when pasting pixmaps on Mac OS X.
    * The Mac OS X clipboard now understands tiff information and exports images as tiff as well.
    * [145437] Fixed crash when calling QClipboard::setMimeData()
      twice with the same data.
    * QMacMime now does correct normalization of file names in a URL list from foreign applications.

- QMenu
    * the addAction() overloads that take a slot argument now honor the slot's bool
      argument correctly.
    * [129289] Support context menus from within a QMenu.
    * [144054] Fixed scrolling logic.
    * [132524] Allow setVisible() of separator items on Mac OS X native
      menu items.
    * [131408] tornoff QMenu has a fixed size now to prevent window system
      resizes.
    * [113989] Added some fuzziness to the snapto detection.
    * [155030] Do not disable command actions when merge is disabled.
    * [131702] The tearoff menu no longer appears only once.
    * [138464] If a popup menu does not ffit on the right-hand side of the screen, align it to the
      right side of the parent widget instead of the left side.
    * [130343] Ensured that only the left mouse button triggers menu actions on Windows.
    * [139332] Fixed an issue that caused submenus to close when moving the mouse over a separator.
    * [157218] Do not close torn-off menu when pressing Alt.
    * [135193] Takes sizeHint, maximum size and minimum size into account for QWidgetAction.
    * [133232] Makes executing a QMenu with a position as argument work better.
    * [141856] QMenu.exec() would return NULL if user press mnemonic
    * [133633] Fixed focus problem with keyboard navigation in QMenu with QWidgetAction.
    * [134560] statustip was not shown with an action in a toolbutton's menu.
    * [150545] Fixed memory leak on Mac.
    * [138331] Fixed bug that menus stay highlighted after the closing of a dialog.
    * Menu shortcuts are now cleared if the corresponding QAction is cleared on Mac. 
    * Fix bug when changing a shortcut on Mac OS X would not take effect
    * [12536] Don't allow tab to navigate menus on Mac OS X.
    * [108509] Avoid shortcuts stealing keyboard navigation keys.

- QMenuBar
    * [135320] Make QMenuBar::show() a no-op to on Mac OS X to prevent
      QMenuBar being visible at the same time as a native Mac menubar.
    * [115471] Fix tornoff menu behaviour to propagate mouse events correctly
      on 2nd level tearoffs.
    * [126856] Fixed an issue that could cause several menus to be open at the same time.
    * [47589] The position of the menu is now shifted horizontally when there is not enough
      space (neither above neither below) to display it.
    * [131010] adding an action and setting its menu would prevent the action from
      being triggered through its shortcut.
    * [142749] Fixed bug where setEnabled(false) had no effect on Mac OSX.
    * [141255] Make it possible to set the menu bar application-wide with setParent(0) on Mac OSX.

- QMessageBox
    * [119777] Pressing Ctrl+C in message boxes on Windows copies text to clipboard
    * Added setDefaultButton(StandardButton) and setEscapeButton(StandardButton)

- QMetaObject
    * Optimize QMetaObject::invokeMethod() to avoid calling
      QMetaType::type() unnecessarily.

- QMetaType
    * [143011] Fixed QMetaType::isRegistered() to return false when
      type id is < QMetaType::User.

- QMotifStyle
    * [38624] Fixed the behavior when clicking on a menubar item a
      second time; the menu will now close in the sam way that native
      Motif do.

- QMutex
    * [106089] Added QMutex::tryLock(int timeout), which allows a
      thread to specify the maximum amount of time to wait for the
      mutex to become available.
    * [137309] Fixed a rare deadlock when compiling with optimizations enabled.
    * Optimize recursive locking to avoid 2 unnecessary atomic
      operations when the current thread already owns the lock.
    * Optimise non recursive mutexes by avoiding call to pthread_self() on Unix.

- QObject
    * Added a compile time check to ensure that the objects passed to
      qobject_cast contain a Q_OBJECT macro.
    * [133901] Improve runtime warning from QObject::setParent() when
      trying to set a new parent that is in a different thread
    * [140106] Fixed a deadlock when deleting a QObject from the
      destructor of a QEvent subclass.
    * [133739] Fixed compiler warnings from g++ in QObject::findChildren<T>().
    * Document the QEvent::ThreadChange that is sent by QObject::moveToThread().
    * [130367] Improve runtime warning when creating a QObject with a
      parent from a different thread.
    * [114049] Make QObject::dumpObjectInfo() also dump connection information.

- QGL
    * [158971] Fixed a resource leak in the GL texture cache.

- QGLWidget
    * [145621] Avoid a QGLFormat object copy when checking the buffer format with the
               QGLWidget::doubleBuffer() function.
    * [100519] Rewritten renderText(). It now supports Unicode text, and it doesn't
               try to overwrite previously defined display lists.

- QGLFramebufferObject
    * Make it possible to configure the depth/stencil buffer in a framebuffer object.
    * Add support for floating point formats for the texture in a framebuffer object.

- QGLPixelBuffer
    * [138393] Make QGLPixelbuffer work under Windows on systems without the
               render_texture extension.

- QGraphicsItem
    * [237041] QGraphicsItem's selected state no longer changes state twice
      for each mouse click.
    * [138576] QGraphicsItem::setParent() now correctly adds the child to the
      parent's scene.
    * [130263] Added support for partial obscurity testing,
      isObscured(QRectF).
    * [140725] QGraphicsTextItem is now also selectable when editable.
    * [141694] QGraphicsTextItem now calls ensureVisible() if it has input
      focus.
    * [144734] Fixed bugs in unsetCursor().
    * [144895] Improved bounding rect calculations for all standard items.
    * Added support for QTransform.
    * [137055] Added QGraphicsItem::ItemPositionHasChanged and
      ItemTransformHasChanged.
    * Several convenience functions have been added.
    * [146863] Added clipping flags: ItemClipsToShape and
    ItemClipsChildrenToShape.
    * [139782] Greatly improved hit and selection tests.
    * [123942] New flag: ItemIgnoresTransformations, allows items to bypass
      any inherited transformations.
    * All QGraphicsItem and standard item classes constructors have now had
      their (scene) arguments obsoleted.
    * [150767] Add support for implicit and explicit show and hide. Explicitly
      hidden items are no longer implicitly shown when their parent is shown.
    * [151522] Fixed crash when nesting QGraphicsItems that enabled
      child event handling.
    * [151265] Cursors now change correctly also with no mouse interaction.
    * Added deviceTransform(), which returns a matrix that maps between item
      and device (viewport) coordinates.
    * Added ItemSceneChange notification flag.
    * [128696] Enable moving of editable text item.
    * [148268 and 128684] Improve highlighting of selected items.

- QGraphicsScene
    * [130614] Add QGraphicsScene::invalidate(), for resetting the cache
      individually for each scene layer.
    * [139747] Fixed slow memory leaks caused by repeatedly scheduling
    single-shot timers.
    * [128581] New signal: selectionChanged(), is emitted when the selection
    changes.
    * Introduced delayed item reindexing, which greatly improves performance
    when moving items.
    * The BSP tree implementation has undergone several optimizations.
    * Added new bspTreeDepth property, for fixating the BSP tree depth.
    * Optimization: Reduced the number of unnecessary index lookups.
    * [146518] Add selectionArea() function.

- QGraphicsSceneWheelEvent
    * [146864] Added wheel orientation.

- QGraphicView
    * [136173] Hit-tests are now greatly improved for thin items.
    * [133680] The scrollbars now max out instead of overflowing when the
      transformed scene is larger than INT_MIN - INT_MAX.
    * [129946] Changing the viewport no longer resets the acceptsDrops()
    property.
    * [139752] ScrollHandDrag is now allowed also in non-interactive mode.
    * [128226] Fixed rendering bugs for rubberband (flicker & transparency).
    * [144276] The selection is no longer reset by scroll-dragging.
    * Added support for QTransform.
    * [137027] Added new viewportUpdateMode() property for better control
      over how QGraphicsView schedules updates.
    * Several convenience functions have been added.
    * [146517] Added rubberBandSelectionMode(), for controlling how items are
      selected with the rubber band.
    * [150344] Fixed the scrollbar ranges to avoid the scrollbars from hiding
      parts of the scene.
    * [150321] Added new optimizationFlags() property for disabling individual
      features to speed up rendering.
    * The level-of-detail algorithm has been changed to improve support for
      transformations that change the view's aspect ratio.
    * [154942] Fixed background rendering in render().
    * [156922] render() now properly supports all transformations, source and
      target rectangles.
    * [158245] Calling setScene(0) now implicitly calls update().

- QPainter
    * Fixed stroking of non-closed polygons with non-cosmetic pens in the
      OpenGL paint engine.
    * [133980 and 143502] Fixed stroking bug for RoundJoin and MiterJoin with paths
      containing successive line segments with a 180 degree angle between them.
    * [141826] Fixed stroking with MiterJoin of paths with duplicated control points.
    * [139454 and 139209] Fixed problem with SmoothTransformation that caused images
      to fade out toward the edges in raster paint engine.
    * Added HighQualityAntialiasing render hint to QPainter to use pixel shaders for
      antialiasing in the OpenGL paint engine.
    * [143503] Fixed broken painting when using a QPainter on a non-toplevel widget
      and calling setWorldMatrixEnabled(false) and then setWorldMatrixEnabled(true).
    * [142471] Fixed dashed line drawing of lines that are clipped against the device rect.
    * [147001] Fixed bug with drawing of polygons with more than 65536 points in the
      raster paint engine.
    * [157639] Calling drawPolygon() from multiple threads no longer causes an assert.
    * Optimized line and rectangle drawing in the raster paint engine.
    * [159047] Fixed case where QPainter::fillRect would ignore the brush origin.
    * [143119] Fixed bug where drawing a scaled image on another image would cause black
      lines to appear on the edges of the scaled image.
    * [159894] Fixed X11 errors when using QPainter brush patterns on multiple screens.
    * [148524] Fixed X11 errors when drawing bitmaps containing a color table with alpha values.
    * [141871] Optimized and fixed drawing of extremely large polygons.
    * [140952] Fixed transformed text drawing on X11 setups that used fontconfig without Xrender.
    * [139611] Fixed smooth transform of pixmaps for X11.
    * [132837] Fixed text drawing to QImages with certain fonts for Mac OS X.
    * [147911] Use font antialiasing when rotating small fonts on Windows.
    * [127901] Optimized gradient calculations.
    * [139705, 151562] Optimized clipping algorithms in the raster paint
      engine.
    * Optimized blending operations in the raster paint engine using MMX,
      3DNOW and SSE2.
    * Optimized QPainter::fillRect() for opaque brushes.
    * General speed optimisations, esp in the openGL and Raster paint engines.

- QPainterPath
    * [136924] Correctly convert Traditional Chinese fonts as e.g. MingLiu to painter paths.

- QPicture
    * [142703] QPicture now correctly preserves composition mode changes.
    * Fix QPicture text sizes on devices with non-default DPI.
    * [133727] Fix text alignment when drawing RightToLeft formatted text into a QPicture.
    * [154088] Fix bugs when reading Qt3 generated QPicture files.

- QPixmap
    * Added cacheKey() as a replacement for serialNumber().
    * [97426] Add a way to invert masks created with createMaskFromColor().
    * don't crash when passing a 0 pointer to the constructor from a xpm.

- QPixmapCache
    * [144319] Reinserting a pixmap now moves it to the top of the Least Recently Used-list.


- QPageSetupDialog
    * [136041] Margins are now saved and used properly when printing.

- QPlastiqueStyle
    * [133220] QProgressBar rendering bugs fixed.

- QPrintDialog
    * [128964] Make "Print" button the default
    * [138924] Set the filename in the file dialog when printing to a file
    * [141486] Made QPrintDialog::setPrintRange correctly update the print dialog on X11.
    * [154690] "Print last page first" did not update the QPrinter instance on X11.
    * [149991] Support more text encodings in the PPD subdialog.
    * [158824] Disable Ok button in the dialog if no printers are installed
    * [128990] Don't create the output filename in the printdialog when printing to a file on X11.

- QPrinter
    * Added QPrinter::supportedPaperSources()
    * [153735] Significantly speed up generation of PDF documents with Asian characters.
    * [140759] Document that you can't change orientation on an active printer on Mac OS X (native format).
    * [136242] PS generator: Don't generate huge Postscript files for pattern brushes
    * [139566] Added support for alpha blending when printing on Windows.
    * [151495] Fixed image scaling problems when printing on Windows.
    * [146788] Optimized drawTiledPixmap on Windows.
    * [152637] PDF generator: Setup the pageRect correctly.
    * [152222] PDF generator: Fixed bug that lead to fonts being to small on Mac OS X.
    * [151126] Respect ScreenResolution on Mac OS X.
    * [151141] PDF generator: Make PDFs using the default font on Mac OS X searchable.
    * [129297, 140555] PS/PDF generator: Drastically reduce size of generated files and speedup generation when using simple pens.
    * [143803] Correctly set the default printer name on X11.
    * [134204] PDF generator: generate correct output when drawing 1bit images
    * [152068, 151541] PS generator: Generate correct PS when embedding TrueType fonts with broken POST tables.
    * [143270] X11: Ignore sigpipe when printing to an invalid printer using the PDF generator.

- QProgressBar
    * [146855] setFormat() now calls update() if the format changes.
    * [152227] Improved support for wide ranges (INT_MIN - INT_MAX).
    * QProgressBar::setRange() is now a slot.
    * [137020] Ensure setValue() forces repaint for %v.

- QProgressDialog
    * QProgressDialog::setRange() is now a slot.
    * [123199] Escape key closes dialog even when the cancel text is empty

- QPushButton
    * [114245] Fixed some styling issues of push buttons with popup menus.
    * [158951] Buttons with icons now center their content to be more consistent
    with buttons that do not have icons in most styles.

- QReadWriteLock
    * [106089] Added QReadWriteLock::tryLockForRead(int timeout) and
      QReadWriteLock::tryLockForWrite(int timeout), which allows a
      thread to specify the maximum amount of time to wait for the lock
      to become available.
    * [131880] Added support for recursive write locking.

- QRegion
    * Several optimizations for common operations on X11 and Qtopia Core.

- QStatusbar
    * [131558] Increased text margin and fixed a look and feel issue on Windows.

- QTabBar
    * [126438] Added int tabAt(const QPoint &pos) const
    * [143760] Fixed a bug where scroll buttons are now shown event when setUsesScrollButtons(false)
    * [130089] Make the tooplip help show up on disabled tabs also.
    * [118712] Enabled autorepeat on scroll buttons.
    * [146903] QTabBar now emits currentChanged when a tab is removed
    * Take corner widgets into account when we calculate tab position and the tab bar is centered
    * [132091] "Scroll" tabs backwards the same way that it was done in Qt 3.
    * [132074] Always emit currentChanged() when the current tab is deleted.

- QTabWidget
    * TabWidget now takes ownership of corner widgets and allows setting 0 on the corner widget.
    * [142464] It should not be possible to navigate to disabled tabs.
    * [124987] Relayout when a corner widget is set

- QThread
    * [140734] Fixed a bug that prevented QThread::exec() from being
      called more than once per thread.
    * Added QThread::idealThreadCount().
    * Optimize QThread::currentThread() on UNIX.

- QThreadStorage
    * [131944] Refactored to allow an arbitrary number of instances
      (not just 256 as in previous versions).
    * Updated documentation, as many caveats have been removed in Qt
      4.2 and 4.3.

- QTimeEdit
    * [136043] Fixed the USER properties.

- QTimeLine
    * [145592] Fixed the time line state after finished() has been emitted.
    * [125135] Add resume() for resuming instead of restarting the timeline.
    * [153425] Fixed support for loopcount >= 2.

- QTimer
    * Added property to determine if the timer is active.

- QToolBar
    * [128156, 138908] tool bars do animated expand to display all their actions when the
      extension button is pressed.

- QScrollArea
    * [140603] Fixed flickering when the scroll widget is right-aligned.

- QSemaphore
    * Add QSemaphore::tryAcquire(int n, int timeout), which allows a
      thread to specify the maximum amount of time to wait for the
      semaphore to become available.

- QSlider
    * Prevent QSlider from getting in an infinite loops when extreme values were used.

- QSpinBox
    * [141569] Disallow typing -0 in a QSpinBox with a positive range
    * [158445] keyboardTracking property added, when set to false don't send valueChanged() with every key press
    * [143504] Make undo/redo work.
    * [131165] Fixed highlighting according to the native look on Mac.

- QSyntaxHighligher
    * [151831] calling rehighlight() was causing highlighBlock() to be called
      twice for each block of text

- QSql
    * Added NumericalPrecisionPolicy to allow retrieving numbers as double or float.

- QSqlDriver
    * [128671] Added SimpleLocking to DriverFeature

- QSqlQueryModel
    * [155402] Fixed bug where the rowsAboutToBeRemoved and rowsRemoved signals were emitted when
      setQuery() was called on an already empty model.
    * [149491] Fixed bug where blank rows were inserted into the model if the database driver
      didn't support the QuerySize feature and the result set contained more than 256 rows.

- QSqlRelationalTableModel
    * [142865] Fixed support for Interbase and Firebird by not using 'AS' in generated SQL statements.

- QSqlTableModel
    * [128671] Ensure that the model has no read locks on a table before updating it. Fixes
      parallel access for in-process databases like SQLite.
    * [140210] Fixed bug where setting a sort order for a column caused no rows to be selected
      with PostgreSQL and Oracle databases due to missing escape identifiers in the generated
      SQL statement.
    * [118547] Don't issue asserts when inserting records before calling select() on the model.
    * [118547] Improved error messaging.

- QStandardItemModel
    * Reduced the construction time when rows and columns are given.
    * [133449] Improve the speed of setData()
    * [153238] Moving an item will no longer cause that item to loose its flags.
    * [143073] Calling setItemData() now triggers the emission of the dataChanged signal.

- QString
    * fromUtf8() now discards UTF-8 encoded byte order marks just like the UTF-8 QTextCodec
    * [154454] Fixed several UTF-8 decoder compliance problems (also affects the UTF-8 QTextCodec).
    * Remove old compatibility hack in fromUtf8()/toUtf8() to allow round trip conversions of invalid utf8.
    * Support full Unicode case mappings for toUpper/toLower.
    * Correctly implement case folding (foldCase() method). Also for QChar.
    * [54399] Add more overloads (taking up to 9 arguments) for QString::arg().

- QStringListModel
    * Make it possible to drop items below the other visible items on a view with a QStringListModel

- QSystemTrayIcon
    * [131892] Mac OS X will issue messages to growl via AppleScript now.
    * [151666] Increased the maximum tooltip size to 128 characters on Windows
      platforms that support it.
    * [135645] Fixed an issue preventing system tray messages from working on some
      windows platforms.
    * Addded geometry() to return the global position of the tray icon
	
- QStyle
    * Add StandardPixmap SP_DirHomeIcon which is native icon for the home directory.
    * Add documentation that pixelMetrics are not necessarily followed in all styles.
    * standardPixmap() has been obsoleted. Use standardIcon() instead.
    * Added SP_VistaShield to support Vista UAC prompts on Windows Vista.
    * [103150] Added SH_FocusFrame_AboveWidget to allow the focus frame to be stacked above the widget it has focus on.
    * The default password character is now a Unicode circle, the asterisk is still used for QMotifStyle and its subclasses.
    * [127454] CE_ToolBoxTab now draws two parts, CE_ToolBoxTabShape and CE_ToolBoxTabLabel. This should make
      QToolBox more style-able.
    * [242107] Added a QStyleOptionToolBoxV2 with tab position and selected position enums.

- QStyleOption
    * [86988] Add an initializeFromStyleOption() for many widgets that need to create a QStyleOption subclass for style-related calls.

- QTableView
    * No longer allow invalid spans to be created.
    * [145446] Setting minimum height on horizontal header rendered the table garbled.

- QTableWidget
    * [125285] Only emit dataChanged() once when setItemData() is used to set data for
      more than one role.

- QTextCodec
    * The UTF-8 codec have had a number of improvements in its handling of large, rare codepoints.
    * [154932] UTF-8 codec now keeps correct state for sequence f0 90 80 80 f4 8f bf bd.
    * [154454] Fixed several UTF-8 decoder compliance problems (also affects QString::fromUtf8()).
    * Fixed the UTF-8 codec's handling of incomplete trailing UTF
      sequences to be the same as QString::fromUtf8().

- QTextStream
    * [141391] Fixed bug when reusing a text stream with the setString method.

- QTextCursor
    * The definition of the block char format (QTextCursor::blockCharFormat/QTextBlock::charFormat)
      has been changed to be the format used only when inserting text into an empty block.
      If a QTextCursor is positioned at the beginning of a block and the text block is not empty
      then the char format to the right of the cursor (the first character in the block) is returned.
      If the block is empty the block character format is returned.
      List markers are now also drawn with the character format of the first character in a block
      instead of the invisible block character format.

- QTextDecoder
    * Add hasFailure() that indicates whether the input was correctly encoded.

- QTextTable
    * [138905] Fixed bug where merging cells in a QTextTable would cause text to end up in the
      wrong cells.
    * [139074] Fixed wrong cell widths in HTML export of tables containing column spans.
    * [137236] Fixed bug where a text table would ignore page breaks.
    * [96765] Improved handling of page breaks for table rows spanning several pages.
    * [144291] Fixed crash when using QTextTable::setFormat with an old format after
      inserting or removing columns.
    * [143501 and 144439] Added support for vertical alignment of table cells.
    * [136397, 144320, and 144322] Various border styles and border brushes are now supported.
    * [139052] Made sure that empty text table cells get a visible selection.

- QTextDocumentFragment
    * QTextDocumentFragment no more stores the root frame properties,
      the document title or the document default font when it's created
      from a document or from HTML. Use QTextDocument's toHtml/setHtml
      if you want to propagate these properties to and from HTML.

- QTextDocument
    * [152692] Use the document's default font size in QTextDocument::print().
    * Added QTextDocument::defaultTextOption.
    * Setting a maximum block count implicitly disables the undo/redo history.
    * Numerous fixes and speed-ups in the HTML import.
    * [143296] Fixed HTML import bug where adding a <br> tag after a table would
      insert two empty lines instead of one.
    * [144637 and 144653] The user state property of QTextBlock is now preserved.
    * [140147] Fixed layouting bug where the document size would not be updated properly.
    * [151526] Fixed problem where the margins of an empty paragraph above a table
      would be ignored.
    * [136013] The "id" tag can now be used to specify anchors.
    * [144129] Root frame properties are now properly exported/imported.

- QTextEdit
    * [152208] Preserve the undo/redo enabled state across setPlainText/setHtml calls.
    * [125177] Added print() convenience function that makes it possible to support
      QPrinter::Selection as selection range.
    * [126422] Fixed bug in copy/paste which could cause the background color of pasted
      text to differ from that of the copied text.
    * [147603, 153931] Fixed various cases where parts of a text document would be
      inaccessible or hidden by the scrollbars.
    * [148739] Fixed bug where ensureCursorVisible would not result in a visible cursor.
    * [152065] Fixed cases where currentCharFormatChanged would not be emitted.
    * [154151] The undoAvailable and redoAvailable signals are no longer emitted too many
      times when entering or pasting text.
    * [137706] Make the semantics of the selectionChanged signal more alike QLineEdit::selectionChanged()

- QToolButton
    * [127814] The popup delay is now respecting style changes.
    * [130358] Send Hover to the associated QAction upon enter.
    * [106760] Fixed bug where the button was drawn as pressed when using MenuButtonPopup as popup mode.

- QToolTip
    * [135988] Allow tooltips to be shown immediately below the cursor
    * [148546] The usage of tooltip fading now adhers to user settings on Mac.
    * [145458] Tooltip fading now looks native on Mac (fading out rather than in).
    * [145557] Tooltips doesn't remain if the mouse leaves the application fast on Mac.
    * [143701] Tooltips doesn't hide behind stay-on-top windows on Mac.
    * [158794] Fixed bug on Mac OSX here isVisible() returns true even though the tip is hidden.

- QTableView
    * [158096] resizeColumnToContents(int i) now has the same behaviour as
      resizeColumnsToContents().

- QTreeView
    * [158096] Prevent dropping an item on its own child.
    * [113800] When dragging an item over an item that has child items
      QTreeView will now automatically expand after a set time.
    * [107766] Added style option (enabled in the windows style) to
      select the first child when the right arrow key is pressed.
    * [157790] It was possible to get in a state where clicking on +/-
      to expand an item didn't do anything until elsewhere in thew view
      was clicked.
    * Make it possible to do a selection with a rectangle with negative width or height.
    * [153238] If a drop is done on the branch it should be dropped on the root node.
    * [152868] Fix setSelection() so that it works with a negative y-coordinate.
    * [156522] Fix repaint errors for selections in -reverse mode.
    * [155449] Prevent to tree from having huge columns when setting the
      alignment before it is shown.
    * [151686] Hidden rows are now filtered out of the user selection range.
    * [146468] indexRowSizeHint might not be correct in case columns were moved.
    * [138938] Fixed an infinite loop when calling expandAll with no column.
    * [142074] Scrollbars are no more shown when there is no item.
    * [143127] QTreeView would not emit the collapsed() signal when the animated
      property was set to true.
    * [145199] Fix crash when column 0 with expanded items was removed and inserted.

- QTreeWidget
    * [159078] Fixed drag-n-drop bug on Mac when dragging inside the widget.

- QTextLayout
    * Fixed support for justified arabic text.
    * [152248] Fixed assert in sub/superscript handling of fonts specified in pixel sizes.
    * Optimise text layouting for pure latin text.
    * Skip opentype processing alltogether if the font doesn't contain open type tables.
    * Fix some issues in the shaper for indic languages.
    * Upgrade line breaking algorithm to the newest version (http://www.unicode.org/reports/tr14/tr14-19.html).

- QTreeWidget
    * [153361] Check that an item exists before emiting itemChanged().
    * [155700] Fix a crash in QTreeWidget.

- QToolBox
    * [107787] Fixed rendering bugs in reverse mode.

- QUdpSocket
    * [142853] Now continues to emit readyRead() also if the peer temporarily
      disappears.
    * [154913] Now detects datagrams also when sender's port is invalid.

- QUndoStack
    * [142276] Added undoLimit proprerty which controls the maximum number
      of commands on the stack.

- QValidator
    * [34933] Added support for scientific notation.

- QWaitCondition
    * [126007] Made QWaitCondition::wakeOne() behavior consistent
      between Windows and UNIX when calling wakeOne() twice when
      exactly 2 threads are waiting (the correct behavior is to wake
      up both threads).

- QWidget
    * [139359] "locale" property added, this makes it easy to customize
      how individual widgets display dates and numbers.
    * [155100] Fixed a regression causing Qt::FramelessWindowHint to be ignored for frameless windows.
    * [137190] Setting a window mask is now rendered correct with respect to shadow on Mac.
    * [139182] Added a new function, render(), that renders the widget into another QPaintDevice.
    * [131917] Fixed bug where min/max sizes were not respected when using X11BypassWindowManagerHint.
    * [117896] Fixed QWidget::setGeometry() to be more consistent
      across Mac, Windows, X11 and Qtopia Core.
    * [132827] Allow setting focus to a hidden widget; it will get
      focus when shown.
    * Reduced overhead when repainting a widget with lots of children.
    * Clarified documentation for the Qt::WA_AlwaysShowToolTips widget attribute.
    * [154634] Ensure that the Qt::WA_AlwaysShowToolTips widget
      attribute is respected for all widgets.
    * [151858] Improved the approximation returned by QWidget::visibleRegion().

- QWindowsStyle
    * [110784] Scrollbar and spinbox arrows now scale with the widget size.
    * More native appearance for certain panel and button frames.

- QWindowsXPStyle
    * [150579] Fix the wrong background color for QSlider.
    * [133517] Fixed styling of unused area in header sections.
    * [48387] Fixed styling of MDI/Workspace controls.
    * [109317] Fixed a rendering issue with tab widgets in the Silver color scheme.
    * [114120] Respect the frame property for combo boxes.
    * [138444] Fixed crash when passing 0 to drawComplexControl()'s widget argument.

- QWindowsStyle:
    * [142599] Drawing a CE_DockWidgetTitle by using the style doesn't require to have
      a QDockWidget subclass.

- QWizard
- QWizardPage
    * New classes. Based on QtWizard and QtWizardPage in Qt 4 Solutions. Redesign of QWizard from Qt 3.

- QXmlSimpleReader
    * QXmlSimpleReader no longer reads entire file into memory, allowing
      it to handle large XML files.

- QXmlParseException
    * [137998] SystemId/publicId was never reported.

- QDomDocument
    * [128594] Indent comment nodes.
    * [144781] Crash fix for not adjusting the ownerDocument of new attributes.
    * [107123] Check that appendChild() doesn't add two elements to document nodes.

- Q3DateEdit
    * [131577] Fix a bug with typing in out-of-range years in a Q3DateEdit

- Q3ListView
    * [150781] Fixed a crash in setOpen() (previously fixed in Qt 3).

- Q3GroupBox
    * Added FrameShape, FrameShadow, lineWidth, midLineWidth properties.

- Q3ScrollView
    * [125149] Mouse events should not be delivered if the Q3ScrollView is disabled.
      This fixed the case where items was still selectable when Q3ListVies was disabled using
      setEnabled() method.

- Q3SqlCursor
    * [117996] Improved support for tables and views having fields with whitespaces
      in their names.

- Q3TextEdit
    * [136214] Fixed invalid memory reads when using undo/redo-functionality.

- Q3DockWindow
	* [125117] Fixed some style issues with Windows XP and Plastique styles.

- QTextBrowser
    * [126914] Fix drawing of focus indicator when activating links.
    * [82277] Added openLinks property to prevent QTextBrowser from automatically
      opening any links.

- QProcess
    * [97517] Added suport for specifying the working directory of detached
      processes as well as retrieving the PID of such a process.
    * [138770] Stdin/stdout performance on Windows has been greatly improved.
    * [154135] Fixed crashes and lockups due to use of non-signalsafe
      functions on Unix.
    * [144728] Fixed race conditions on Windows when calling bytesWritten()
      while using the waitFor... functions.
    * [152838] No longer emits finished() if the process couldn't start.

- QPushButton
    * [132211] Fixed setDefault() behavior.

- QLabel
    * [133589] Fixed performance problems with plain text labels.
    * Fixed support for buddies with richtext labels.
    * [136918] Fixed setText() to not turn off mouse tracking when the text is plain.
    * [143063] Reset mouse cursor upon clicking link.
    * [156912] Fixes bug where the mouse cursor can be stuck on the pointing hand cursor

- QTextFormat
    * [156343] Fix crash when streaming QTextFormat instances.

- QTextLayout
    * [140165] Changed boundingRect() to not always report (0, 0) as top left corner but the actual position
      of the top left line.
    * Fixed various problems with text kerning.

- QtGlobal
    * Add Q_FUNC_INFO, a macro that expands to a string describing the function it is used in.
    * [132145] Fix Q_FOREACH to protect against for-scoping compiler bugs.
    * Fixed a race condition in the internal Q_GLOBAL_STATIC() macro.
    * [123910] Fixed crashes on some systems when passing 0 as the
      message to qDebug(), qWarning(), and qFatal().

- QTextStream
    * [133063] atEnd() now works properly with stdin.
    * [152819] Added support for reading and writing NaN and INF.
    * [125496] Ensure uppercasebase and uppercasedigits work as expected.

- QSplashScreen
    * [38269] Added support for rich text.

- QSizeGrip
    * Added support for having size grips in TopLeftCorner/TopRightCorner on Windows.
    * Added support for having size grips on Qt::SubWindows.
    * [150109] Fixed bug where the position (x,y) could change during resize.
    * [156114] Fixed wrong size grip orientation on X11.

- QSplitter
    * [139262] Fixed bug where the splitter was snapping back and forth.

- QMacStyle
    * [159270] Fix icon drawing on buttons with no text.
    * [146364] Fix drawing of multiline text for items in a QToolBar
    * [145346] Remove unwanted wrapping of text in a QPushButton
    * Fix drawing of "Flat" group boxes.
    * [113472] Fix drawing of text on vertical headers when resizing.
    * [148509] Draw with the correct font for buttons and labels when desktop settings aware is false.
    * [106100] Improve the look of QPushButtons with menus.
    * Fixes to Qt's layout system that enables more native looking forms.
    * [151739] Buttons with an icon are now centered correct.
    * [142672] Fixed font size bug on the drop down box for QComboBox on Mac.
    * [148832] The button on a combobox is now showing as pressed when the combo is open.
    * [147377] QComboBox now scales correctly on Mac.
    * [143901] Fixed highlight color for e.g. QComboBox so that it follows the system settings on Mac.
    * [151852] Fixed size calculation for QPushButton with an icon.
    * [133263] Removed the coupling of text size and button kind. You can now set those independently.
    * [133263] QPushButton now respects setFont.
    * [141980] Text with small font sizes is now centered vertically correct inside pushbuttons.
    * [149631] Choose beveled button types if the text doesn't fit rather than cutting the text.
    * [151500] Fixed QPushButton text clipping.
    * [147653] Sort indicator was drawn on top of the text in QHeaderView.
    * [139149] Fixed issues with CE_SizeGrip in "right to left" mode.
    * [139311] Improved drawing of the title in QGroupBox.
    * [128713] Drawing the focus frame now follows pixel metrics.
    * [142274] Make QSlider tickmark drawing more like Cocoa.
    * focusRectPolicy() is now obsolete. This is now controlled by the Qt::WA_MacShowFocusRect attribute
    * widgetSizePolicy() is now obsolete. This is now controlled by the Qt::WA_Mac*Size attribute
    * [129503] A group box without a title no longer allocates space for it.
    * Use a better width for QPushButtons.
    * [132674] Ensure the tab bar drawing is correct when the tab's font isn't as tall as the default.
    * [126214] Draw the QSizeGrip correctly in a brushed-metal window.
    * Better styling of docked QDockWidgets.

- QUrl
    * [134604] Fixed the behavior dirPath() on Windows (obsolete member)

- QThread
    * Added QThread::idealThreadCount() which returns the ideal number of threads that can be run on the system.

- QtAlgorithms
   * [140027] Improve qStableSort performance on large data sets.

****************************************************************************
*                          Database Drivers                                *
****************************************************************************

- Interbase driver

    * [127724] Support OUT values from stored procedures. (See SQL Database Drivers
      documentation for details).
    * [159123] Fixed crash when fetching data from Interbase 2007 databases.
    * [143474] Added support for SQL security based roles.
    * [134608] Fixed bug where queries in some cases returned empty VARCHAR fields
      it they contained non-ascii characters.
    * [143471] Fixed bug that caused fetching multisegment BLOB fields to fail
      in some cases.
    * [125053] Fixed bugs where NUMERIC fields were corrupted or returned as
      wrong type in some cases.

- MySQL driver
    * [156342] Fixed bug where BINARY and VARBINARY fields were returned as QString
      instead of QByteArray.
    * [144331] Fixed bug where a query would become unusable after executing a
      stored procedure returning multiple result sets.

- OCI driver

    * Added support for low-precision retrieval of floating point numbers.
    * [124834] Fixed bug where the binding strings failed on certain setups.
    * [154518] Fixed bug where connections were not properly terminated, which lead
      to resource leaks and connection failures.

- ODBC driver

    * Performance increase for iterating a query backwards.
    * [89844] Added support for fetching multiple error messages from an ODBC driver.
    * [114440] Fixed bug where binding strings longer that 127 characters failed
      with MS Access databases.
    * [139891] Fixed bug where unsigned ints were returned as ints.

- SQLite driver
    * [130799] Improved support for attatched databases when used with
      QSqlTableModel.
    * [142374] Improved error message if failing to fetching a row.
    * [144572] Fixed the implementation of escapeIdentifier() to improve support for
      identifiers containing whitespaces and reserved words when used with the model
      classes.

- PostgreSQL driver

    * [135403] Properly quote schemas in table names ("schema"."tablename")
    * [138424] Fixed resource leak after failed connection attempts.

- DB2 driver

    * [110259] Fixed bug where random characters were prepended to BLOB
      fields when fetched.
    * [91441] Fixed bug where binding strings resulted in only parts of the
      strings being stored.

****************************************************************************
*                             QTestLib                                     *
****************************************************************************

    * [138388] Floating point numbers are printed in printf's "%g" format.
    * [145643] QEXPECT_FAIL does not copy or take ownership of "comment" pointer.
    * [156346] Gracefully handle calls to qFatal().
    * [154013] Don't count skips as passes.
    * [145208] Display QByteArrays in convenient ways.
    * Output well-formed XML.

****************************************************************************
*                               QDBus                                      *
****************************************************************************

- Library

    * Support QList<QDBusObjectPath> and QList<QDBusSignature> implicitely without
      having to register the types.

    * Added support for using QtDBus from multiple threads

    * Make it possible to marshal custom types into QDBusArgument.

    * qdbuscpp2xml:
        * [144663] Fix running qdbuscpp2xml on Windows.
        * Don't require moc being in the PATH environment variable.

- Viewer

    * Moved QDBusViewer from demos to QDBus tools.
    * Added ability to set and get properties.
    * Added support for demarshalling D-Bus variants.
    * Added property dialog for entering arguments.
    * Made QDBusObjectPath clickable in the output pane.

****************************************************************************
*                      Platform Specific Changes                           *
****************************************************************************

X11
---
    * [153346] Don't deliver tablet events while in Drag and Drop.
    * [141756] Don't try to use the Plastique or Cleanlooks styles as the default
	       style when there is no Xrender present.
    * [139455] Fixed QX11EmbedContainer race causing sudden un-embedding of clients.
    * [96507] Add support for using _POSIX_MONOTONIC_CLOCK as the
      timer source (also effects Qtopia Core).
    * [128118] Fixed garbage output when calling QPixmap::grabWindow()
      on a window on a non-default screen.
    * [133119] Detect X11 color names in the RESOURCE_MANAGER property.
    * [56319] Add support for _NET_WM_MOVERESIZE to QSizeGrip, which
      cooperates with the window manager to do the resizing.
    * Fixed QWidget::isMaximized() to return false when the window is
      only maximized in a single direction.
    * [67263] Fixed a bug that could cause applications to freeze
      while querying the clipboard for data.
    * [89224] Fixed minimized Qt applications to show the correct icon
      (instead of the standard OpenWindows icon) on Solaris.
    * [116080] Fixed setting of TIMESTAMP clipboard property to use
      XA_INTEGER (as defined in the ICCCM).
    * [127556] Refactored timer accounting code to be more efficient
      and less cumbersome to maintain.
    * [Related to 132241] Add support for DirectColor visuals, Qt will
      now create and initialize a colormap when using such visuals.
    * [140737] Fixed QEventDispatcherGlib::versionSupported() to be
      much simpler.
    * Fixed a bug where QWidget::windowFlags() would not include
      Qt::X11BypassWindowManagerHint for Qt::ToolTip and Qt::Popuip
      windows.
    * [146472] Fixed a bug where QWidget::setWindowFlags() would
      disable drag-and-drop from outside Qt applications.
    * [150352] Fixed painting errors after show(), hide(), then show()
      under GNOME.
    * [150348] Fixed a bug that would incorrectly set the
      Qt::WA_SetCursor attribute on top-level windows.
    * [135054] Fixed system palette detection code to have contrast
      more similar to the desktop settings.
    * [124689] Document potential QDrag::setHotSpot() inefficiency on X11.
    * [121547] Fixed QWidget::underMouse() to be correctly updated
      after the mouse button is released.
    * [151742] Improved robustness when executing in an X11-SECURITY
      reduced ssh-forwarded session.
    * [142009] Fixed a bug that caused an application using the Qt
      Motif Extension to freeze when trying to copy text to a
      QTextEdit.
    * [124723] Fixed PseudoColor detection to correctly handle cases
      where the colormap is not sequential.
    * [140484] Don't use GLib event dispatcher if GLib version is too old.
    * Fixed a bug where a window would get an incorrect size after the
      second call to show().
    * [153379] Fixed shortcuts where the modifier also includes
      Mode_switch in the modifier mask, for example Alt+F on HP-UX.
    * [154369] Fixed drag and drop to work properly after re-creating
      the window id.
    * [151778] Fixed mouse enter/leave event platform inconsistencies.
    * [153155] Added the QT_NO_THREADED_GLIB environment variable,
      which tells Qt to use Glib only for the GUI thread.
    * Fixed restoreGeometry() to move a full-screen window to the
      correct position.

Windows
-------
    * Added experimental DirectX based paint engine.
    * [141503] When clicked inside the tool windows, it wont be activated if there
      is no child widget to take focus.
    * [153315] Better handling of Synaptic touchpad wheel messages.
    * [150639] Support for CF_DIBV5 format and better support for transparent images
      on clipboard.
    * [146862] Improves readability of progress bar text when shown in Highlight color.
    * [146928] Fixes shortcut events being discarded when AutoRepeat is turned off.
    * [141079] wheelEvent now contains the button information.
    * [149367] QMimeData::formats() returns all the available formats in the object.
    * [135417] WM_SYSCOLORCHANGE will not trigger resetting of fonts.
    * [137023] Fix the crash while translating mouse events.
    * [138349] Fix wrong focus handling with multiple top levels.
    * [111211] Tool windows won't steal focus from their parents while opening.
    * [143812] Fix a bug which can break the widget's ability to maximize after
      saving and restoring its state.
    * [111501] SPI_SETWORKAREA message now triggers a triggers a workAreaResized().
    * [141633] Fixed commandline parsing for GUI applications.
    * [134984] SockAct events wont be triggered from processEvents(ExcludeSocketNotifiers).
    * [134164] The toplevel widgets with MSWindowsFixedSizeDialogHint are centered properly.
    * [145270] Fixed mapFromGlobal() and mapToGlobal() for minimized or
      invisible widgets.
    * [132695] Fixed a potential crash when changing the application style after
      the system theme had been changed.
    * [103739] Workspace title bars now respect custom titlebar heights on XP and style.
    * [48770] Improved size grip behavior in toplevel windows.
    * [113739] Fixed an issue when using QWidget::scroll() with onScreenPaint.
    * [129589] Added support for moving the mouse cursor to the default button in dialogs.
    * [139120] Added support for resolving native file icons through QFileIconProvider.
    * [129927] Added QWindowsVista style.
    * [106437] Removed WindowsXPStyle from QStyleFactory:keys() on platforms where it is not available.
    * [109814] Improved UNC path support.
    * [157261] Fixed crash when using Alt keycodes with text handling widgets.
    * [116307] Fixed QEvent::WindowActivate not being sent for Qt::Tool windows.
    * [150346] Fixed a bug that would exit the application when the
      last window (a modal dialog) was closed and a new window shown
      immediately afterward.
    * [90144] Fixed a bug that caused
      QApplication::keyboardMotifiers() to return modifiers even after
      they had been released.
    * [142767] Fixed a bug that allowed a QPushButton to become
      pressed even though the mousePressEvent() was never called.
    * [151199] Usage of blocking QProcess API in a thread no longer
      hangs the desktop.
    * [144430] Make shortcut system distinguish Key_Return and Key_Enter

- ActiveQt
    * When loading a typelib file to obtain information about a control it
      now processes the typelib correctly.
    * [158990] Ambient property change events are now emitted regardless of the
      container state.
    * [150327] ActiveQt based controls will now return the correct Extents depending
      on the size restrictions set on the widget.
    * [141296] Unloading of ActiveQt dll should be done from the same thread which
      loaded it.

- Qt Style Sheets
    * Added support for clipping background using border-radius
    * Almost all widgets are now style sheet styleable
    * Added support for -stylesheet command line argument to QApplication
    * Added support for styling through SVG
    * Added support to specify colors and brushes as gradients

Mac OS X
--------

    * qtconfig is no longer available on Mac OS X. All settings are read from
      the system's configuration.
    * [156965] Always offers a 'TEXT' type flavor for non-Pasteboard aware
      Mac Application pastes.
    * [158087] Mouse Event propagation bugs.
    * Introduced Q_WS_MAC32/Q_WS_MAC64 for 64 vs 32 bit detection
      at compile time.
    * [156431] Introduced WA_MacAlwaysShowToolWindow to behave as a utility
      window as opposed to a floating window.
    * [155651] Qt will now follow the HIView focus chain to allow wrapped
      HIViewRef's to take focus as appropriate.
    * [149753] Qt will not deliver mouse release events to widgets that do
      not process mouse press events (including widgets with
      WA_MacNoClickThrough).
    * Introduce support for 64 bit Mac OS X builds--Only available on Mac OS X 10.5 (Leopard)
    * [145166] CoreGraphics interpolation set to High quality when using
      SmoothPixmapTransform.
    * [134873] Will find a widget with a cursor by climbing the parent
      heirarchy rather than looking at the front most widget.
    * [132178] Double click detection requires the second click being near
      the previous click to prevent false double click detection.
    * [131327] Toplevel-window mouse propgation for with WA_MacNoClickThrough.
    * Now entirely QuickDraw clean.
    * [155540] Asymetic scales work with cosmetic pens.
    * [141300] Fixed QFontDatabase/QFontDialog not showing all fonts installed on the system.
    * Fixed writing system detection in QFontDatabase.
    * [148876] Don't commit a character twice in the Chinese Input method.
    * Remove an extra setFocus() in the event loop when a window is activated.
    * [152224] Fix bug in QWidget's window state.
    * [156431] Add the Qt::WA_MacAlwaysShowToolWindow to allow Mac users to create utility-windows-style applications.
    * [144110] Fix resizing of sheets on Panther.
    * [140014] Make it possible to drag QUrls on Panther.
    * [155312] Fixed bug when dragging several URLs to e.g. Finder.
    * [155244] Fixed bug when dragging a URL to Finder.
    * [153413] Fixed bug when dragging URLs between Qt applications.
    * [152450] Fixed bug when dragging URLs to e.g the trashcan.
    * [151158] Fixed widgets not receiveing drag events if a move event is ignored.
    * [145876] You now always receive a drag move event directly after a drag enter event (according to the doc).
    * [156365] Fixed event bug when dragging URLs to reveivers that only points us to a drop location.
    * [119251] Tooltips and dialogs now don't cause fullscreen windows to show their menubar and the dock.
    * [147640] Fix scrolling when between 2^15 and 2^16 pixels.
    * [158988] A mouse enter event is now sendt before a mouse press event upon window activation.
    * [157313] Fixed hanging bug if the system clock is adjusted backwards while using sockets.
    * [151411] Fixed window switching bug (Cmd + ~) when showing a modal dialog with a popup.
    * Changing a shortcut containing a cursor movement key now works correctly.
    * [158869] Fixed / removed showing of mnemonics.
    * [143912] Fixed focus problem caused by mouse hovering over widgets with modal sheets.
    * [141456] Fixed activation bug on minimized windows upon show.
    * [155394] Fixed move and resize state not set correct upon widget initialization.
    * [254325] Fixed sheet transparency bug.
    * [152481] Fixed crash when clicking in a window when a modal pring dialog is showing.
    * [143835] Removed unnecessary window updates for active windows.
    * [145552] A mouse up event is now sendt when a window drag has finished after a mouse press.
    * [146443] If a window is moved before it's shown the first time, it is now placed correctly upon show.
    * [141387] Fixed bug that two fast mouse presses on different widget is seen as a click.
    * [139087] Fixed activation for some types of shortcuts (e.g. QKeySequence(Qt::CTRL | Qt::Key_Plus)).
    * Only use Roman for determining with System Fonts, Mac OS X does the translation for us.
    * In OpenGL, opt for the 32-bit accumulation buffer over the 64-bit accumulation by default.
    * [123467] Fixed bug where the event loop would spin and not emit aboutToBlock when popup menus were shown.
    * [137677] QString::localAwareCompare() now respects the sorting order set in the system preferences.
    * [139658] Mac accessibility is no longer require that QApplication::exec() is called.
    * [118814, 126253, 105525] Fixed several QCombobox look-and-feel issues.
    * [145075] Fix aliased line drawing bug.
    * [122826] Fix QScrollBar painting error.
    * [131794] PixelTool and QWidget::grabWindow() now work on non-primary monitors.
    * [160228] The Quartz 2D-based paint engine now respects the font style strategy.
    * Miscellaneous changes to make wrapping non-Qt HIViews more painless.
    * Qt is now built with MACOSX_DEPLOYMENT_TARGET set to 10.3 (since Qt can only be run on Mac OS X 10.3 and up).
    * QSound now uses NSSound for its implementation instead of the deprecated C
      QuickTime API. This means that the QtGui library is no longer dependant
      on the QuickTime framework.
    * Added a -dwarf-2 configure switch to allow people to turn on DWARF2 debugging symbols when that is not the default
      The ability for DWARF2 debugging symbols was added in later version of the Xcode 2.x series.
    * Fixed many assertions when running against Carbon_debug.
    * Renamed the Qt::WA_MacMetalStyle to the WA_MacBrushedMetal attribute.
    * Changing the Qt::WA_MacBrushedMetal attribute will now emit a StyleChange event.
    * The Qt translations and Qt Linguist phrase books have been added to the binary package.
    * [134630] Fix loading of plugins when using universal plugins and accidentally
      reading wrong architecture first and returning an architecture mismatch.
    * QCursor now uses NSCursor internally instead of deprecated QuickDraw functions.
    * Correct our encoding and decoding functions for QFile to handle different Unicode normalization forms.

Qtopia Core
-----------

    * Better support for compiling a LSB (Linux Standard Base) compliant Qtopia Core library.
    * [133365] Allow blocking the key/mouse event that stops the screen saver
      at a particular level - QWSServer::setScreenSaverBlockLevel().
    * A new font subsystem has been implemented that by default allows sharing
      glyphs rendered at run-time to be shared between applications. A new
      pre-rendered font format (QPF2) has also been implemented together with
      a new "makeqpf" tool to generate them.
    * Support for custom font engine plugins has been added through
      QAbstractFontEngine and QFontEnginePlugin.
    * The default font has been changed to the DejaVu Sans family.
    * Fixed QFontDatabase::addApplicationFont for Qtopia Core.
    * [131714] Fixed performance problems with drag'n drop.
    * [96507] Add support for using _POSIX_MONOTONIC_CLOCK as the
      timer source (also effects Qt/X11).
    * [132346] Fixed a performance bug causing unecessary screen copies when
      using a hardware cursor.
    * [131510, 121496] Lot's of performance improvements in the VNC driver.
    * [138615] Fixed color conversion when VNC server is running on a
      big-endian machine.
    * [131321] Optimized text drawing.
    * [136282] Fixed a bug preventing QWidget::setCursor() and
      QWidget::unsetCursor() having effect immediately.
    * [139318] Fixed a performance bug causing non-visible regions to receive
      paint events.
    * [139858] Implemented acceleration for the 'pc' mouse handler.
    * [140705, 140760] Improved release of used resources (e.g shared memory
      and hardware resources) when the application exits unexpectedly.
    * [144245] Fixed a problem with some cross-compilers triggered by using
      math.h functions taking a double argument when using float data.
    * Optimized QSocketNotifier activation.
    * [156511] Implemented QDirectPainter::ReservedSynchronous which makes
      a QDirectPainter object behave as a QDirectPainter region allocated
      using the static functions.
    * [94856] Fixed console switching when using the Tty keyboard driver.
    * [157705, 132811] Pass device parameters to keyboard and mouse plugins.
    * [150564] API changes in QWSWindowSurface. New functions include
      QWSWindowSurface::move() to enable acceleration move of top-level
      windows.
    * [156704] Fixed QPixmap::grabWindow() for 18 and 24 bit screens.
    * [154689] Fixed the -no-gfx-multiscreen parameter to configure.
    * Added QScreen::pixelFormat() and QScreen::setPixelFormat() to enable
      drawing optimizations for some formats.
    * [126421, 126424] Added QGLWindowSurface and QGLScreen framework for
      OpenGLES (and others) on Qtopia Core. Sample implementation found in examples/qtopiacore/.
    * [160404] Fixed 4-bit grayscale support in QVFb and QScreen.

****************************************************************************
*                      Compiler Specific Changes                           *
****************************************************************************

- MinGW
    * [119777] Removed dependancy on mingwm.dll when compiled with 
      -no-exceptions

****************************************************************************
*                   Significant Documentation Changes                      *
****************************************************************************

Examples
--------
    * Added new example to show usage of QCompleter with custom tree models

****************************************************************************
*                          Tools                                           *
****************************************************************************

- Build System
  * Autodetect Xoreax IncrediBuild with XGE technology, and enable distribution of MOC and UIC.
  * Shadowbuilds are now supported by nmake/mingw-make of Qt buildsystem.
  * [151184] Separate -make options for demos and examples
  * [150610] fvisibility requires gcc on Unix builds.
  * [77152] At "make install" time all meta information files will be
    cleaned up to remove reference to source code path.
  * [139399] Use environment CC/CXX on Unix when running the build tests.
  * [145344] "make confclean" will remove all configure generated files as well.
  * [145659] Added ability to disable SSE.
  * Added dwarf2 detection and support into Qt build system for improved
    debug library size.
  * Added macx-g++-64 meta spec for Qt configure purposes.
  * [127840] Our pkgconfig files (.pc) are placed into lib/pkgconfig now.
  * [135547] Allow Windows line endings on UNIX and vice versa in
    .qt-license files.
  * [133068] GIF support is enabled by default now.
  * [137728, 138862] Fixed failed build on Mac OS X and Solaris when
    using -separate-debug-info.
  * [137819] Added support for precompiled headers with the Intel C++
    Compiler for Linux.
  * Re-use qplatformdefs.h from linux-g++ in the linux-icc mkspec.
  * [121633] Add linux-icc-64 mkspec, which is needed for building on
    some 64-bit hosts.
  * Remove cd_change_global from win32-msvc's qmake.conf
  * [116532] Keep intermediate manifest file in object dir, instead of destination dir
  * Add configuration type to qconfig.pri on Windows.
  * Correct paths in Makefile generation when configuring with -fast option.
  * Autodetect TIFF library.
  * [152252] Fix autodetection of MSVC.NET 2005 Express Edition in configure.exe
  * [151267] Ensure that the manifest tool does not get forward slahes in paths to manifest file.
  * [153711] Ensure that directory separators in .qmake.cache is correct for normal MinGW and Cygwin MinGW.
  * [154192] Fix configure.exe executing non-existing scripts.
  * [128667] Add confclean target on Windows for top-level project file.


- Assistant
  * [99923] Added a context menu for the tabs in tab bar. Right click on a tab to get a list
            of common options.
 * Assistant now uses the "unified toolbar" look on Mac OS X

- Designer
    * [151376] Context menu added to the tab order editor
    * [39163] Tab Order Editor - Ctrl + LMB makes it possible to start ordering from selected widget
    * [159129] Fixed Tab Order Editor crash
    * Better snapping for multiselection, better snapping for negative positions
    * [126671] Moving widget possible now with arrows without modifiers, Shift modifier enables resizing, Control modifier snaps
    * [111093] File toolbar added
    * [156225] Fixed delete widget command in case when deleted widget is a child of QSplitter
    * [101420] Better WYSIWYG regarding background colors
    * [112034] Ctrl + drag copies actions now in menus and toolbars
    * [128334] Double clicking on widget invokes default action from task menu
    * [129473] Fixed bug with handling default tab order
    * [131994] Setting tab order for checkable QGroupBox enabled
    * New cursor shapes added
    * [91139] Additional Escape shortcut for "Edit Widgets" action
    * [137879] Better editor for key sequence properties
    * [150634] Improved refreshing of all properties after property change
    * [147655] Fixed shadow build of designer
    * [151567, 149966] Ensure object names are unique
    * [80270] Fixed saving icons taken from resources which are specified with alias
    * [152417] Fixed loading/saving header labels of Q3Table
    * QColumnView widget added to widget box
    * New margin (left, top, right and bottom) and spacing (horizontal and vertical) properties of layout supported
    * [146337] Dont's save margin and spacing if they have default value
    * Fixed layout handling in Q3GroupBox
    * [124680] Correct pages in QStackedWidget are displayed when selecting a page in the object inspector
    * [88264] Breaking a nested layout doesn't break the parent container's layout anymore
    * [129477] Support for dynamic properties added (context menu in property editor)
    * [101166] "Add separator" action added to menu's context menu
    * [132238] "Recent files" button added to new form dialog
    * [107934] Antialiasing of font property is no more bool property, now it has 3 values
    * [155464] Added a German translation.
    * [146953] Widgets can now be dragged onto the object inspector.
    * [152475] The widget box now saves and restores its state.
    * [111092] Added drag and drop of images from the resource editor to the action editor or icon properties.
    * [111091] Icon dialogs now default to resource browser.
    * [152475] Added button to load newly found custom widget plugin to plugin dialog.
    * [151122] Added warnings for custom widget plugin issues (load failures, class name mismatches).
    * [138645] Improved form preview on Mac, provided close button and menu entry.
    * [103801] Made buddy editing possible for custom widgets derived from QLabel.
    * [148677] Added font chooser for tool windows.
    * [107233] Made grid customizable, provided default and per-form grid setting.
    * [149325] Provided form editor context menu in object inspector.
    * [147174] Changed elide mode and improved column resizing behaviour
               of property editor and object inspector.
    * [147317] Better handling of switching user interface modes (prevent form window
               geometry from being changed).
               Made 'Bring to front' deiconify windows.
    * [146629] Fixed never ending loop on Linux triggered by scrolling fast through the pages
               of a QStackedWidget.
    * [133687] Added Qt Script support to aid in building forms.
    * [145806] Enabled KDialog to be used as a template.
    * [142723] Enabled pages of QStackedWidget, QTabWidget and QToolBox to be promoted.
    * [105916] Enabled QMenuBar to be promoted.
    * [147317] Improved the New Form dialog.
    * [95038]  Fixed handling of layout defaults.
    * [103326] Made connections to form signals possible.
    * [145954] Added new dialog for promoted widgets with ability to specify global include files.
               Added promotion candidates to context menu.
    * [127232] Handle global include files returned by QDesignerCustomWidgetInterface::includeFile() correctly.
    * [139985] Improved handling of layouts for custom widgets.
    * [99129]  Made custom implementations of QDesignerMemberSheetExtension work.
    * [87181]  Added support for setting properties to a multiselection.
               Added support for sub-properties (for example, changing the
               font size of a multiselection does not overwrite other font settings).
               Added undo-support for property comments.
    * [135360] Added tooltips to property editor, action editor and object inspector.
    * [103215] Added handling of escaped newline characters for text properties.
               Added validator and syntax highlighting for style sheets.
    * [135468] Added support for toolbar breaks.
    * [135620] Fixed several issues concerning handling of properties of promoted widgets.
    * [109077] Provided multiselection in the object inspector.
    * [133907] Made in-place editing of plain label texts possible.
    * [134657] Fixed table widget editor.
    * [90085] Make the resource editor consume a little less horizontal real estate.
    * [105671] Added support to maximize main windows while beeing previewed.
    * Added style sheet editor

- Linguist
    * Translations can be exported and imported to XLIFF.
    * [136633] Fixed "Find" so that it searched in comments.
    * [129163] "Next Unifinished" did not work if we did not have a selected item.
    * [125131] Make the translation loading behaviour consistent with Assistant and Qt Designer.
    * [125130] Added the command-line argument -resourceDir (for consistency with Assistant and Qt Designer)
               be able to specify path of translation files.
    * [124932] Xml files (.ts and .xlf) are now written in platform-specific line endings.
    * [128081] Don't shift focus away from the treeview if moving up or down with the keys.
               Use Shift+Ctrl+{K,L} instead if you really want this behaviour.
    * [139079] Add documentation of the TS file format. (DTD)

- lupdate
    * Small improvements in lupdates pro parser.
    * Pro parser: Fix bug in inclusion of relative pri files.
    * [140581] Improve namespace/context parsing in lupdate.
    * [142373] Running lupdate on a SUBDIRS pro file did not create any TS files.
    * [135991] Handle pro-file comments within a list of several variable assignments.
    * [154553] Fix bug with CODECFORTR that caused saving of incorrect characters.

- lrelease

- rcc
    * [158522] Default compression set to zlib default (normally level 6).
    * [133837] Allow absolute paths in .qrc files (accessible through
    original filesystem path).
    * [146958] No longer returns error when a .qrc is empty, simply
    generates a (mostly) empty file.

- moc

    * [149054] Fixed parsing of old-style C enums.
    * [145205] The moc now warns when subclassing a known interface (marked with Q_DECLARE_INTERFACE)
      that is not mentioned in Q_INTERFACES.
    * [97300] Allow @file as options input file, to handle command lines larger than allowed by OS.

- uic
    * [144383] Prevent uic-generated code from calling ensurePolished() before constructor is finished.
    * [138949] Re-use font and size policy instances in uic-generated code.
    * [141350] Re-use color brushes in generated code
    * [141217] Improved handling of include files of Qt 3 classes.
    * [144371] Don't set form's objectName in setupUi in case the name was already set
    * QLocale property supported
    * [141820] Fixed connection generation of the form
    * [137520] Uic doesn't generate tooltip, statustip and whatsthis when relevant QT_NO_xxx is defined
    * [128958] Get rid of static casts in generated code, ui format holds enum string instead of int in case of size policy and cursor
    * [116280] qulonglong and uint supported

-uic3
    * [137915] Extract images functionality added, -extract option
    * [129950] -wrap option added, it generates a wrapper class which is qt3 source compatible

- qmake
    * [121965] Implement DSW (Workspace files) generation for MSVC 6.0 users.
    * [132154] Support for /bigobj option in the vcproj generator.
    * Fixed crash with dependency analysis.
    * Do not add cleanup rules for extra compilers with no inputs.
    * LEX/YACC support has been moved into .prf files.
    * [156793] Introduced PRECOMPILED_DIR for PCH output (defaults to OBJECTS_DIR).
    * [257985] Fixed qmake location detection bug.
    * Strip out empty INCLUDEPATH.
    * Allow QMAKE_UUID to override qmake deteremined UUID in
      vcproj generator.
    * [151332] Terminate .pc files with an extra carriage return.
    * [148535] Introduced QMAKE_FRAMEWORKPATH and use it internally.
    * [127415] Fix object_with_source.
    * [127413] Introduce QMAKE_FILE_IN_PATH place holder for extra compilers.
    * [95975]  Replace QMAKE_FILE_IN for custom buildsteps in DSP generator.
    * [141749] Prevent cyclical dependencies.
    * [146368] Remove GNUmake .d files upon distclean.
    * Improved extensibility of the precompiled header support to allow icc
      precompiled headers.
    * [147142] Short-circuit previously seen library paths to avoid
      cyclical .prl processing.
    * [144492] Set INSTALL_PROGRAM for INSTALLS in macx-xcode projects.
    * [143720] Extra compilers will now depend upon the input file automatically.
    * Introduced QMAKE_DISTCLEAN for extra files to be removed upon "make distclean".
    * [133518] Reduced the noise created by qmake warnings.
    * [108012] Bring macx-xcode into line with macx-g++ with regards to
      custom bundle types
    * [128759] Support spaces in paths to linked libraries.
    * [83445] Make sure that "make distclean" in a library with a DESTDIR
      really does remove the destination symbolic links.
    * subdir generator will now use - to separate target words and _ to
      separate internally appended words.
    * [125557] Fix broken generation of dependencies for extra compilers.
    * Give the QMAKE_QMAKE variable a reasonable default before
      parsing and evaluating project files.
    * For Unix/Mac OS X, configure now has an -optimized-qmake option that
      allows people to build qmake with optimizations
      This is disabled by default as older versions of some compilers take a
      long time to build an optimized qmake. qmake is already built optimized
      on Windows.
    * [130979] Make incremental link option case-insensitive.
    * Ensure that paths for custom buildsteps in vcprojs have correct seperators.
    * Avoid duplicate dependency paths, reduce file stats.
    * [91313] Separate multiple commands in DSP generator with \n\t
    * [108681] Avoid UIC3 files having dependencies on themselves.
    * [130977] Support non-flat output for vcproj files with single configuration.
    * [134971] Support more compiler and linker options for vcproj files, and add catch-all cases which adds options to AdditionalOptions variables.
    * [140548] Fix escaping of custom buildstep for image collections.
    * [114833] Ensure that paths in vcproj always have local OS separators.
    * [144020] Only allow CONFIG+=staticlib for TEMPLATE==lib
    * [97300] Handle large number of include paths on Windows for moc by using temporary file. (See moc changes)
    * [150519] Compile qmake with correct mkspec on Windows.
    * [148724] Added manifest files to project cleanup
    * [123501] Add /LIBPATH to AdditionalLibraryPaths in vcprojs
    * [80526] Make sure that extra compiler commands are not corrupted due to path separator fixing.
    * [109322] Move hardcoded extra compilers, yacc and lex, into PRF system.
    * [101783] Add _DEBUG to Resource Tool for debug builds on Windows
    * [145074] Add custom build step on input files, for extra compiler files with built-in compilers for the output files.
    * [150961] Support QMAKE_PRE_LINK in DSP and VCPROJ generators.
    * Avoid double escaping of fil DESTDIR_TARGET in Windows Makefiles.
    * Escape filepaths for COPY_FILE and QMAKE_BUNDLE
    * [83765] Add input files instead of output files to extra compiler steps under certain conditions.
    * [101482] Fix relative path for RC_FILE.

****************************************************************************
*                          Plugins                                         *
****************************************************************************
- QTiffPlugin
    * [93364] Added support for TIFF imageformat.
