****************************************************************************
*                           General                                        *
****************************************************************************

General Improvements
--------------------

- Configuration/Compilation
    * Fixed OpenBSD and NetBSD build issues.
- Added support for CP949 Korean Codec

Third party components
----------------------

- Updated Qt's SQLite version to 3.3.16.

- Updated Qt's FreeType version to 2.3.4.

- Updated Qt's libpng version to 1.2.16.


****************************************************************************
*                          Library                                         *
****************************************************************************

- QAbstractItemView
    * [111503] Give the focus back to the view when the tab key is pressed
      while inside an editor.
    * [156290] When the ScrollMode is set to ScrollPerItem, scroll slower.
    * When displaying dates and numbers, the item view classes use their locale
      property, allowing easy customization.

- QAccessible
    * Added preliminary support for the upcomming IAccessible2 standard

- QCalendarWidget
    * Don't set maximum width for month/year buttons
    * Use QPalette::Text role for default text
    * date edit feature added, dateEditEnabled and dateEditAcceptDelay properties added
    * [137031] Grid lines are drawn properly when headers are not visible.
    * [151828] the language can be set with QCalendarWidget::setLocale()

- QChar
    * Updated the Unicode tables to Unicode 5.0

- QColumnView
    * A new widget that provide a column based implementation of QAbstractItemView

- QComboBox
    * Significantly reduced the construction time.
    * [155614] Speedup addItem() and addItems()

- QCompleter
    * Significantly reduced the construction time.
    * Added support for lazy populated models.

- QDateTime
    * [151789] Allow passing of date only format to QDateTime::fromString() (according to ISO 8601)
    * Remove legacy behavior which assumed that a year between 0 and 99 was meant 1900 + year in
      QDateTime
    * [40085, 153114, 145167] Fix bugs in parsing strings into dates.

- QIntValidator, QDoubleValidator
    * Validators recognise numbers formatted in various locales, depending on their "locale"
      property.

- QVariant
    * [127225] Unloading a GUI plugin will no longer cause crash in
      QVariant in QtCore application.

- QDesktopWidget
    * [135002] emit signal after resize takes place on Mac OS X.

- QDateTimeEdit
    * [111557 and 141266] Improvements with regards to two-digit years in a QDateTimeEdit. Make stepping work properly.
    * [110034] Don't change current section on wheelEvent.
    * [152622] Don't switch section on focusInEvent if the reason is Popup.
    * Fix a bug that would cause problems with formats like dd.MMMM.yyyy.
    * [148522] Make sure the dateRange is valid for QDateTimeEdits that only shows time.
    * [148725] Fix a bug with wrapping and months with fewer than 31 days.
    * [149097] Emit dateTimeChanged even if only date or time is shown.
    * [108572] Make typing 2 into a zzz field turn into 200 rather than 002.
    * Skip to the next field when separator is typed.
    * [141703] Allow empty input when only one section is displayed.
    * [134392] Add a sectionCount property.
    * [134392] Add sectionAt()/currentSectionIndex()/setCurrentSectionIndex() to QDateTimeEdit.
    * Add a NoButtons value for the buttonSymbols property.

- QDockWidget
    * [130773] QDockWidgets remember their undocked positions and sizes.
    * Added support for vertical title bars, which can save space in a QMainWindow.
    * Added support for setting an arbitrary widget as a custom dock widget title bar.
    * [141792] added the visibilityChanged() signal which is emitted when QDockWidgets
      change visibility due to show or hide events, or being selected/deselected in a
      tabbed dock area.
    * added the dockLocationChanged() signal, emitted when dock widgets are moved around
      in a QMainWindow.

- QSettings
    * [153758] Fixed various bugs when writing and reading from Windows registry.

- QSocketNotifier
    * [148472] Mac OS X now prevented from closing the file descriptor when
      the QSocketNotifier is deregistered.
    * [140018] Mac OS X will now invalidate the backing native socket
      notifier upon deregistration.

- QDoubleSpinBox
    * [99254] Allow higher settings for decimals

- QFileInfo
    * Do not follow symbolic link for Mac FS hidden flag detection.
    * [128604] Introduced isBundle() for Mac OS X bundle types.

- QFileDialog
    * Updated file dialog with native icons, faster performance and a sidebar to
      remember commonly used folders.
    * [134557] Add the ability to set a proxy model.
    * Added dirEntered() and filterSelected() signals which existed in
      Qt3's file dialog.
    * [130353] Fixed Qt/Mac native filedialog pattern splitting

- QHeaderView
    * Now uses Qt::NoFocus for its default focus policy
    * [99569] Speedups providing up to a 2X speed increase for some cases

- QItemSelectionModel
    * Optimizations for some common cases.

- QListView
    * [136614] Batched mode did not display the last item of the batch.

- QLocale
    * Locale database updated to CLDR 1.4: more locales supported, numerous
      fixes to existing locales.

- QResource
    * [129429] Allow a QByteArray for runtime resource registration.

- QMainWindow
    * [145493] Fix a crash with QMainWindow:setMainWindow(0); on X11
    * [137013, 158094] Fixed bugs respecting size hints, minimum/maximum sizes and
      size policies of QDockWidgets in QMainWindow.
    * [147964] Animated tool bar areas adjust dynamically when a QToolBar is dragged
      over them.
    * Added the dockOptions property QMainWindow. This makes it possible to:
        - specify that tabbed dock areas should have vertical tab bars,
        - disable tabbed docking alltogether,
        - force tabbed docking, disallowing placing dock widgets next to each other.
    * Fixed bugs in saving and restoring QMainWindow state.
    * [143026] Fixed support for hiding/showing toolbars on Mac.

- QMenu
    * the addAction() overloads that take a slot argument now honor the slot's bool
      argument correctly.
    * [129289] Support context menus from within a QMenu.
    * [144054] Fixed scrolling logic.
    * [132524] Allow setVisible() of separator items on Mac OS X native
      menu items.
    * [131408] tornoff QMenu has a fixed size now to prevent window system
      resizes.
    * [113989] Added some fuzziness to the snapto detection.
    * [155030] Do not disable command actions when merge is disabled.

- QMenuBar
    * [135320] Make QMenuBar::show() a no-op to on Mac OS X to prevent
      QMenuBar being visible at the same time as a native Mac menubar.
    * [115471] Fix tornoff menu behaviour to propgate mouse events correctly
      on 2nd level tearoffs.


- QMessageBox
    * [119777] Pressing Ctrl+C in message boxes on Windows copies text to clipboard

- QObject
    * Added a compile time check to ensure that the objects passed to qobject_cast contain
      a Q_OBJECT macro.

- QPrintDialog
    * [128964] Make "Print" button the default
    * [138924] The filename in the file dialog is set when printing to a file

- QPrinter
    * Added QPrinter::supportedPaperSources()
    * [153735] Significantly speed up generation of PDF documents with Asian characters.

- QTabBar
    * [126438] Added int tabAt(const QPoint &pos) const
    * [143760] Scroll buttons are now never shown when setUsesScrollButtons(false)

- QTabWidget
    * TabWidget now takes ownership of corner widgets and allows setting 0 on the corner widget.

- QTimer
    * Added property to determine if the timer is active.

- QToolBar
    * [128156, 138908] tool bars do animated expand to display all their actions when the
      extension button is pressed.

- QSlider
    * Prevent QSlider from getting in an infinite loops when extreme values were used.

- QSpinBox
    * [141569] Disallow typing -0 in a QSpinBox with a positive range
    * [158445] keyboardTracking property added, when set to false don't send valueChanged() with every key press

- QSyntaxHighligher
    * [151831] calling rehighlight() was causing highlighBlock() to be called
      twice for each block of text

- QSql
    * Added NumericalPrecisionPolicy to allow retrieving numbers as double or float.

- QSqlDriver
    * [128671] Added SimpleLocking to DriverFeature

- QSqlTableModel
    * [128671] Ensure that the model has no read locks on a table before updating it. Fixes
      parallel access for in-process databases like SQLite.

- QStandardItemModel
    * Reduced the construction time when rows and columns are given.
    * [133449] Improve the speed of setData()
    * [153238] Moving an item will no longer cause that item to loose its flags.

- QString
    * fromUtf8() now discards UTF-8 encoded byte order marks just like the UTF-8 QTextCodec

- QSystemTrayIcon
    * [131892] Mac OS X will issue messages to growl via AppleScript now.

- QStyle
    * Add StandardPixmap SP_DirHomeIcon which is native icon for the home directory.

- QTableView
    * No longer allow invalid spans to be created.

- QTextCursor
    * The definition of the block char format (QTextCursor::blockCharFormat/QTextBlock::charFormat)
      has been changed to be the format used only when inserting text into an empty block.
      If a QTextCursor is positioned at the beginning of a block and the text block is not empty
      then the char format to the right of the cursor (the first character in the block) is returned.
      If the block is empty the block character format is returned.
      List markers are now also drawn with the character format of the first character in a block
      instead of the invisible block character format.

- QToolTip
    * [135988] Allow tooltips to be shown immediately below the cursor

- QTextDocumentFragment
    * QTextDocumentFragment no more stores the root frame properties,
      the document title or the document default font when it's created
      from a document or from HTML. Use QTextDocument's toHtml/setHtml
      if you want to propagate these properties to and from HTML.

- QTextDocument
    * [152692] Use the document's default font size in QTextDocument::print().
    * Added QTextDocument::defaultTextOption.
    * Setting a maximum block count implicitly disables the undo/redo history.
    * Numerious fixes and speed-ups in the HTML import.

- QTextEdit
    * [152208] Preserve the undo/redo enabled state across setPlainText/setHtml calls.
    * [125177] Added print() convenience function that makes it possible to support
      QPrinter::Selection as selection range.

- QToolButton
    * [130358] Send Hover to the associated QAction upon enter.

- QTreeView
    * [158096] Prevent dropping an item on its own child.
    * [113800] When dragging an item over an item that has child items
      QTreeView will now automatically expand after a set time.
    * [107766] Added style option (enabled in the windows style) to
      select the first child when the right arrow key is pressed.
    * [157790] It was possible to get in a state where clicking on +/-
      to expand an item didn't do anything until elsewhere in thew view
      was clicked.

- QTextLayout
    * Fixed support for justified arabic text.

- QTreeWidget
    * [153361] Check that an item exists before emiting itemChanged().

- QUndoStack
    * [142276] Added undoLimit proprerty which controls the maximum number
      of commands on the stack.

- QWidget
    * [139359] "locale" property added, this makes it easy to customize
      how individual widgets display dates and numbers.

- QXmlSimpleReader
    * QXmlSimpleReader no longer reads entire file into memory, allowing
      it to handle large XML files.

- Q3DateEdit
    * [131577] Fix a bug with typing in out-of-range years in a Q3DateEdit

- QTextBrowser
    * [126914] Fix drawing of focus indicator when activating links.
    * [82277] Added openLinks property to prevent QTextBrowser from automatically
      opening any links.

- QProcess
    * [97517] Added suport for specifying the working directory of detached
      processes as well as retrieving the PID of such a process.

- QLabel
    * [133589] Fixed performance problems with plain text labels.
    * Fixed support for buddies with richtext labels.

- QTextLayout
    * [140165] Changed boundingRect() to not always report (0, 0) as top left corner but the actual position
      of the top left line.

- QSplashScreen
    * [38269] Added support for rich text.

****************************************************************************
*                          Database Drivers                                *
****************************************************************************

- Interbase driver

    * [127724] Support OUT values from stored procedures. (See SQL Database Drivers
      documentation for details).

- MySQL driver

- OCI driver

    * Added support for low-precision retrieval of floating point numbers.

- ODBC driver

    * Performance increase for iterating a query backwards.
    * [89844] Added support for fetching multiple error messages from an ODBC driver.

- SQLite driver

- PostgreSQL driver

    * [135403] Properly quote schemas in table names ("schema"."tablename")

****************************************************************************
*                             QTestLib                                     *
****************************************************************************

    * [138388] Floating point numbers are printed in printf's "%g" format.

****************************************************************************
*                               QDBus                                      *
****************************************************************************

- Library

    * Support QList<QDBusObjectPath> and QList<QDBusSignature> implicitely without
      having to register the types.

    * Added support for using QtDBus from multiple threads

    * Make it possible to marshal custom types into QDBusArgument.

    * qdbuscpp2xml:
        * [144663] Fix running qdbuscpp2xml on Windows.
        * Don't require moc being in the PATH environment variable.

- Viewer

    * Moved QDBusViewer from demos to QDBus tools.
    * Added ability to set and get properties.
    * Added support for demarshalling D-Bus variants.
    * Added property dialog for entering arguments.
    * Made QDBusObjectPath clickable in the output pane.

****************************************************************************
*                      Platform Specific Changes                           *
****************************************************************************

X11
---

- QTextLayout
    * Fixed various problems with text kerning.

Windows
-------
    * [141503] When clicked inside the tool windows, it wont be activated if there 
      is no child widget to take focus.
    * [153315] Better handling of Synaptic touchpad wheel messages.
    * [150639] Support for CF_DIBV5 format and better support for transparent images 
      on clipboard.
    * [146862] Improves readability of progress bar text when shown in Highlight color.
    * [146928] Fixes shortcut events being discarded when AutoRepeat is turned off.
    * [141079] wheelEvent now contains the button information.
    * [149367] QMimeData::formats() returns all the available formats in the object.
    * [135417] WM_SYSCOLORCHANGE will not trigger resetting of fonts.
    * [150579] Fix the wrong background color for QSlider in XP style.
    * [137023] Fix the crash while translating mouse events.
    * [138349] Fix wrong focus handling with multiple top levels.
    * [111211] Tool windows won't steal focus from their parents while opening.
    * [143812] Fix a bug which can break the widget's ability to maximize after 
      saving and restoring its state.
    * [111501] SPI_SETWORKAREA message now triggers a triggers a workAreaResized().
    * [141633] Fixed commandline parsing for GUI applications.
    * [134984] SockAct events wont be triggered from processEvents(ExcludeSocketNotifiers).
    * [134164] The toplevel widgets with MSWindowsFixedSizeDialogHint are centered properly.
    
- ActiveQt
    * [260763] When loading a typelib file to obtain information about a control it
      now processes the typelib correctly.
    * [158990] Ambient property change events are now emitted regardless of the 
      container state.
    * [150327] ActiveQt based controls will now return the correct Extents depending
      on the size restrictions set on the widget.
    * [141296] Unloading of ActiveQt dll should be done from the same thread which 
      loaded it. 

Mac OS X
--------

    * qtconfig is no longer available on Mac OS X. All settings are read from
      the system's configuration.
    * [259326] Always offers a 'TEXT' type flavor for non-Pasteboard aware
      Mac Application pastes.
    * [259041] Mouse Event propagation bugs.
    * Introduced Q_WS_MAC32/Q_WS_MAC64 for 64 vs 32 bit detection
      at compile time.
    * [258549] Introduced WA_MacAlwaysShowToolWindow to behave as a utility
      window as opposed to a floating window.
    * [257991] Qt will now follow the HIView focus chain to allow wrapped
      HIViewRef's to take focus as appropriate.
    * [257782] Qt will not deliver mouse release events to widgets that do
      not process mouse press events (including widgets with
      WA_MacNoClickThrough).
    * Introduce support for 64 bit Mac OS X builds.
    * [145166] CoreGraphics interpolation set to High quality when using
      SmoothPixmapTransform.
    * [134873] Will find a widget with a cursor by climbing the parent
      heirarchy rather than looking at the front most widget.
    * [132178] Double click detection requires the second click being near
      the previous click to prevent false double click detection.
    * [131327] Toplevel-window mouse propgation for with WA_MacNoClickThrough.
    * Now entirely QuickDraw clean.
    * [155540] Asymetic scales work with cosmetic pens.
    * [141300] Fixed QFontDatabase/QFontDialog not showing all fonts installed on the system.
    * Fixed writing system detection in QFontDatabase.

Qtopia Core
-----------

    * Better support for compiling a LSB (Linux Standard Base) compliant Qtopia Core library.
    * [253123] Allow blocking the key/mouse event that stops the screen saver
      at a particular level - QWSServer::setScreenSaverBlockLevel().

    * A new font subsystem has been implemented that by default allows sharing
      glyphs rendered at run-time to be shared between applications. A new
      pre-rendered font format (QPF2) has also been implemented together with
      a new "makeqpf" tool to generate them.

    * Support for custom font engine plugins has been added through
      QAbstractFontEngine and QFontEnginePlugin.

    * The default font has been changed to the DejaVu Sans family.

    * Fixed QFontDatabase::addApplicationFont for Qtopia Core.

****************************************************************************
*                   Significant Documentation Changes                      *
****************************************************************************

Examples
--------

****************************************************************************
*                          Tools                                           *
****************************************************************************

- Build System
  * Shadowbuilds are now supported by bmake/nmake/mingw-make of Qt
     buildsystem.
  * [151184] Separate -make options for demos and examples
  * [150610] fvisibility requires gcc on Unix builds.
  * [77152] At "make install" time all meta information files will be
    cleaned up to remove reference to source code path.
  * [139399] Use environment CC/CXX on Unix when running the build tests.
  * [145344] "make confclean" will remove all configure generated files as well.
  * [145659] Added ability to disable SSE.
  * Added dwarf2 detection and support into Qt build system for improved
    debug library size.
  * Added macx-g++-64 meta spec for Qt configure purposes.
  * [127840] Our pkgconfig files (.pc) are placed into lib/pkgconfig now.
  * [135547] Allow Windows line endings on UNIX and vice versa in
    .qt-license files.
  * [133068] GIF support is enabled by default now.

- Assistant

- Designer
    * [151376] Context menu added to the tab order editor
    * [39163] Tab Order Editor - Ctrl + LMB makes it possible to start ordering from selected widget
    * [159129] Fixed Tab Order Editor crash
    * Better snapping for multiselection, better snapping for negative positions
    * [126671] Moving widget possible now with arrows without modifiers, Shift modifier enables resizing, Control modifier snaps
    * [111093] File toolbar added
    * [156225] Fixed delete widget command in case when deleted widget is a child of QSplitter
    * [101420] Better WYSIWYG regarding background colors
    * [112034] Ctrl + drag copies actions now in menus and toolbars
    * [128334] Double clicking on widget invokes default action from task menu
    * [129473] Fixed bug with handling default tab order
    * [131994] Setting tab order for checkable QGroupBox enabled
    * New cursor shapes added
    * [91139] Additional Escape shortcut for "Edit Widgets" action
    * [137879] Better editor for key sequence properties
    * [150634] Improved refreshing of all properties after property change
    * [147655] Fixed shadow build of designer
    * [151567, 149966] Ensure object names are unique
    * [80270] Fixed saving icons taken from resources which are specified with alias
    * [152417] Fixed loading/saving header labels of Q3Table
    * QColumnView widget added to widget box
    * New margin (left, top, right and bottom) and spacing (horizontal and vertical) properties of layout supported
    * [146337] Dont's save margin and spacing if they have default value
    * Fixed layout handling in Q3GroupBox
    * [124680] Correct pages in QStackedWidget are displayed when selecting a page in the object inspector
    * [88264] Breaking a nested layout doesn't break the parent container's layout anymore
    * [129477] Support for dynamic properties added (context menu in property editor)
    * [101166] "Add separator" action added to menu's context menu
    * [132238] "Recent files" button added to new form dialog
    * [107934] Antialiasing of font property is no more bool property, now it has 3 values
    * [155464] Added a German translation.
    * [146953] Widgets can now be dragged onto the object inspector.
    * [152475] The widget box now saves and restores its state.
    * [111092] Added drag and drop of images from the resource editor to the action editor or icon properties.
    * [111091] Icon dialogs now default to resource browser.
    * [152475] Added button to load newly found custom widget plugin to plugin dialog.
    * [151122] Added warnings for custom widget plugin issues (load failures, class name mismatches).
    * [138645] Improved form preview on Mac, provided close button and menu entry.
    * [103801] Made buddy editing possible for custom widgets derived from QLabel.
    * [148677] Added font chooser for tool windows.
    * [107233] Made grid customizable, provided default and per-form grid setting.
    * [149325] Provided form editor context menu in object inspector.
    * [147174] Changed elide mode and improved column resizing behaviour
               of property editor and object inspector.
    * [147317] Better handling of switching user interface modes (prevent form window
               geometry from being changed).
               Made 'Bring to front' deiconify windows.
    * [146629] Fixed never ending loop on Linux triggered by scrolling fast through the pages
               of a QStackedWidget.
    * [133687] Added Qt Script support to aid in building forms.
    * [145806] Enabled KDialog to be used as a template.
    * [142723] Enabled pages of QStackedWidget, QTabWidget and QToolBox to be promoted.
    * [105916] Enabled QMenuBar to be promoted.
    * [147317] Improved the New Form dialog.
    * [95038]  Fixed handling of layout defaults.
    * [103326] Made connections to form signals possible.
    * [145954] Added new dialog for promoted widgets with ability to specify global include files.
               Added promotion candidates to context menu.
    * [127232] Handle global include files returned by QDesignerCustomWidgetInterface::includeFile() correctly.
    * [139985] Improved handling of layouts for custom widgets.
    * [99129]  Made custom implementations of QDesignerMemberSheetExtension work.
    * [87181]  Added support for setting properties to a multiselection.
               Added support for sub-properties (for example, changing the
               font size of a multiselection does not overwrite other font settings).
               Added undo-support for property comments.
    * [135360] Added tooltips to property editor, action editor and object inspector.
    * [103215] Added handling of escaped newline characters for text properties.
               Added validator and syntax highlighting for style sheets.
    * [135468] Added support for toolbar breaks.
    * [135620] Fixed several issues concerning handling of properties of promoted widgets.
    * [109077] Provided multiselection in the object inspector.
    * [133907] Made in-place editing of plain label texts possible.
    * [134657] Fixed table widget editor.
    * [90085] Make the resource editor consume a little less horizontal real estate.

- Linguist
    * Translations can be exported to XLIFF.
    * [136633] Fixed "Find" so that it searched in comments.
    * [129163] "Next Unifinished" did not work if we did not have a selected item.

- lupdate
    * Small improvements in lupdates pro parser.

- lrelease

- rcc
    * [260738] Default compression set to zlib default (normally level 6).
    * [256265] Allow absolute paths in .qrc files (accessible through
    original filesystem path).
    * [146958] No longer returns error when a .qrc is empty, simply
    generates a (mostly) empty file.

- moc

    * [149054] Fixed parsing of old-style C enums.
    * [145205] The moc now warns when subclassing a known interface (marked with Q_DECLARE_INTERFACE)
      that is not mentioned in Q_INTERFACES.

- uic
    * [144383] Prevent uic-generated code from calling ensurePolished() before constructor is finished.
    * [138949] Re-use font and size policy instances in uic-generated code.
    * [141350] Re-use color brushes in genetared code
    * [141217] Improved handling of include files of Qt 3 classes.
    * [144371] Don't set form's objectName in setupUi in case the name was already set
    * QLocale property supported
    * [141820] Fixed connection generation of the form
    * [137520] Uic doesn't generate tooltip, statustip and whatsthis when relevant QT_NO_xxx is defined
    * [128958] Get rid of static casts in generated code, ui format holds enum string instead of int in case of size policy and cursor
    * [116280] qulonglong and uint supported

-uic3
    * [137915] Extract images functionality added, -extract option
    * [129950] -wrap option added, it generates a wrapper class which is qt3 source compatible

- qmake
    * Support for /bigobj option in the vcproj generator.
    * [260738] Fixed crash with dependency analysis.
    * Do not add cleanup rules for extra compilers with no inputs.
    * LEX/YACC support has been moved into .prf files.
    * [258558] Introduced PRECOMPILED_DIR for PCH output (defaults to OBJECTS_DIR).
    * [257985] Fixed qmake location detection bug.
    * Strip out empty INCLUDEPATH.
    * Allow QMAKE_UUID to override qmake deteremined UUID in
      vcproj generator.
    * [151332] Terminate .pc files with an extra carriage return.
    * [148535] Introduced QMAKE_FRAMEWORKPATH and use it internally.
    * [127415] Fix object_with_source.
    * [127413] Introduce QMAKE_FILE_IN_PATH place holder for extra compilers.
    * [141749] Prevent cyclical dependencies.
    * [146368] Remove GNUmake .d files upon distclean.
    * Improved extensibility of the precompiled header support to allow icc
      precompiled headers.
    * [147142] Short-circuit previously seen library paths to avoid
      cyclical .prl processing.
    * [144492] Set INSTALL_PROGRAM for INSTALLS in macx-xcode projects.
    * [143720] Extra compilers will now depend upon the input file automatically.
    * Introduced QMAKE_DISTCLEAN for extra files to be removed upon "make distclean".
    * [133518] Reduced the noise created by qmake warnings.
    * [108012] Bring macx-xcode into line with macx-g++ with regards to
      custom bundle types
    * [128759] Support spaces in paths to linked libraries.
    * [83445] Make sure that "make distclean" in a library with a DESTDIR
      really does remove the destination symbolic links.
    * subdir generator will now use - to separate target words and _ to
      separate internally appended words.
