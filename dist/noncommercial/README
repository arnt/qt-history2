
Getting Started with Qt/Windows Non-Commercial Edition
======================================================

Welcome to the world of Qt programming!


MS Visual Studio
----------------

If you use MS Visual Studio 6 for development, you may want to install
the Qt add-in that we provide. This can be done as follows:

1. Start Visual Studio if it isn't already running.
2. Click Tools|Customize to launch the Customize dialog. 
3. Click the Add-ins and Macro Files tab.
4. Ensure the checkbox to the left of the "QMsDev Developer Studio-Add-In"
   add-in is checked.
5. Click Close. 

If you use MS Visual Studio .NET 2002 and later, the add-in is installed
automatically at the end of the Qt installation.

The add-in is now installed. A new floating toolbar will appear with the
following toolbar buttons:

- New Qt Project - create a Qt .pro project file and the corresponding
  Visual Studio .dsp file.
- Generate Qt Project - create a Visual Studio .dsp file based on a Qt
  project .pro file.
- New Qt Dialog - creates a Qt dialog that you can customize with Qt
  Designer. The dialog is automatically added to the Qt .pro project file.
- Qt Designer - launches Qt Designer.
- Add MOC - add a custom build step which calls moc.exe (meta object
  compiler)
- Add UIC - add an existing Qt Designer .ui file to an existing project. 

More information about the add-in is available in the chapter "Customizing
and Integrating Qt Designer" in the Qt Designer manual which is included
in the online reference manual. For the MS Visual Studio .NET integration
see also the file Usage.rtf that is located in the installation directory
for the integration (C:\Program Files\Trolltech\QMsNet).

MS Visual Studio project (.dsp and .vcproj) files are provided for all Qt
example and tutorial programs.


The Qt Reference Manual
-----------------------

The full Qt reference documentation in HTML format is included with this
non-commercial edition. You can read it using the Qt Assistant tool, which
is available from the Qt submenu on the Start menu. You can also read it by
opening the file %QTDIR%\doc\html\index.html with any web browser.

If you are new to Qt programming, we recommend that you check out the
tutorial section and the Qt Designer manual. We also suggest that you
obtain a copy of one of the many books about Qt programming that are
available. For further information, see:

http://www.trolltech.com/developer/documentation/literature.html


Building Qt programs
--------------------

Qt programs may be built either from MS Visual Studio or from the command
line (i.e. in a Command Prompt window). When working from the command
line, the qmake tool is invaluable. It builds Makefiles for your project
and compiler from a simple project description (.pro) file. The .pro file
is generated by Qt Designer when you save a project. It can also be
manually created with a text editor. See the qmake section in the Qt
reference documentation for further information.


Database Drivers
----------------

The non-commercial edition only contains the SQLite database driver that
allows you to use the SQLite in-process database.

The commercial edition allows you to also choose between more database
drivers, like ODBC, Oracle, MySQL, PostgreSQL and DB2.


Troubleshooting
---------------

If Qt Assistant shows up blank, or compilation of a Qt program fails
because e.g. the moc.exe or Qt header files cannot be found, check if the
PATH contains the %QTDIR%\bin directory and the environment variable QTDIR
has been set. After installing Qt, you may need to reboot your computer to
make sure these settings are in effect.

If the compilation on the command line fails because the "make", "nmake",
or the compiler itself cannot be found, you must ensure that the
environment (PATH etc.) is set up for command-line use of the
compiler. For Microsoft Visual C++ users, run the vcvars32.bat file to
set up the environment. This file can be found in the bin directory of
the Visual Studio installation.

If the compilation fails because the compiler does not find the system
header files (e.g. stdio.h or windows.h), you must set the INCLUDE and LIB
environment variables to contain the paths of the compiler's header files
and library files. For Microsoft Visual C++ users, the vcvars32.bat file
takes care of this.


Limitations
-----------

This Qt/Windows Non-Commercial edition has the following limitations
compared to the full Qt/Windows Professional and Enterprise Editions:

* The Qt source code is not included. Instead, the Qt library is provided
  pre-compiled.

* The library is pre-built as a dynamic, multi-threaded library without
  debugging information.

* Applications display an information window on startup

* GIF support is disabled


Reporting Bugs, Mailing List and Support
----------------------------------------

If you should find something you believe to be a bug in Qt, please send a
report to qt-bugs@trolltech.com. Include as much information as you can
about your environment and versions.

If you want to join the Qt users' mailing list, send a mail to
qt-interest-request@trolltech.com containing the single word "subscribe".


Third Party Copyrights
----------------------

The PostgreSQL client library (libpq.dll) is under the following copyright:

Copyright (c) 1994-7 Regents of the University of California

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose, without fee, and without a written agreement
is hereby granted, provided that the above copyright notice and this
paragraph and the following two paragraphs appear in all copies.

IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS
DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO
PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
