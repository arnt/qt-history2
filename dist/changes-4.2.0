Qt 4.2 introduces many new features as well as many improvements and
bugfixes over the 4.1.x series. For more details, see the online
documentation which is included in this distribution. The
documentation is also available at http://doc.trolltech.com/

The Qt version 4.2 series is binary compatible with the 4.1.x series.
Applications compiled for 4.1 will continue to run with 4.2.

****************************************************************************
*                           General                                        *
****************************************************************************

- dropped support for MySQL version 3.

- Auto-detect PostgreSQL and MySQL using pg_config and mysql_config on UNIX
  based systems in the configure script

- Added "-system-sqlite" option to configure to use the system's SQLite library
  instead of Qt's SQLite version.

- Updated Qt's SQLite version to 3.3.6.

- Added QT_ASCII_CAST_WARNINGS define that will output a warning on implicit
  ascii to unicode conversion when set. Only works if the compiler supports
  deprecated API warnings.

- Added Q_REQUIRED_RESULT to some functions. This macro triggers a warning
  if the result of a function is discarded. Currently only supported by gcc.

- Added QDataWidgetMapper class that can be used to make widgets data aware
  by mapping them to sections of an item model.

- Improved Accessibility for item-based views and QTextEdit.

- Added the QtUndo framework for implementing undo/redo functionality in applications.

- Numerous bugs fixed in Designer: action editor, property editor.

- QWidget added to Designer's toolbox.

- Backup file is being created by Designer while overwriting the existing file.

- Starting from Qt 4.2 a new commercial licensing scheme will be
  supported. Customers who chose the new "metered license" will pay
  according to their monthly actual Qt usage and not according to how
  many Qt developers they have. This license scheme is initially only
  available for Linux, Windows and MacOS X.

****************************************************************************
*                          Library                                         *
****************************************************************************

- QAbstractItemView
	Make sure that the doubleClicked() signal is only emitted
	when the left button has been doubleclicked.
	Change setSelection(...) to work when given a non-normalized
	rectangle.
	Fixed regression for shift-selections in ExtendedSelection for
	all views.

- QFlags
        Added testFlag() convenience function.

- QComboBox
	Fix the type of the modelColumn property from bool to int.
	Update documentation to clarify between activated(),
	highlighted() and currentIndexChanged() and what they
	actually mean.

- QItemDelegate
        Use a widget's USER property to set and get the editor data.

- QMetaObject
        Added userProperty().
        Added normalizedType().

- QMetaType
        Normalizes all type names before registering them.
        Handle Qt's integer typedefs (qint8, qint16, ...).

- QSqlQuery
        Added execBatch() for executing SQL commands in a batch. Currently
        only implemented for the Oracle driver.
        Fixed a case where executedQuery() would not return the executed query.

- QSqlRelationalTableModel
        Work when sorting a relational column when using the PostgreSQL driver.
        revertAll() now correctly reverts relational columns.

- QTabWidget
	Added missing Qt3Support signal selected().

- QToolTip
	Added convenience function hideText().

- QVariant
        Added support for all QMetaType types.

- QMainWindow
        Dockwidgets can be tabbed.
        When a dockwidget hovers over a mainwindow, the mainwindow animates
        to show how it will accept the dockwidget if dropped.

- QLocale
        Fixed bug in the string-to-number functions which sometimes caused them
        to fail on negiative numbers which contained thousand-separators.
        Implemented the numberOptions property, for specifying how
        string-to-number and number-to-string conversions should be performed.

- QSettings
        Fixed bug causing bytearrays to be incorrectly stored on Win95/98/Me.

- quintptr and qptrdiff
        New integral typedefs have been added.

- QMutexLocker, QReadLocker, and QWriteLocker
        These classes now track the state of the lock they are
        holding. They will not unlock on destruction if unlock() has
        been called.

- QFileSystemWatcher
        New class that watches file and directories for changes.

- Qt::GroupSwitchModifier
        Added to the Qt::KeyboardModifiers enum. It represents
        e.g. the "AltGr" key found on many keyboards.

- Qt::NoDockWidgetArea
        Added to the Qt::ToolBarArea enum

- Qt::NoToolBarArea
        Added to the Qt::DockWidgetArea enum

- QEvent::KeyboardLayoutChange
        New event type. This event is sent when the keyboard layout changes.

- QObject
        QObject::thread() will always return a valid thread, even if
        the object was created before QApplication or in a non-QThread
        thread.

        When QObject::thread() is zero, events are no longer sent to
        the object (Previous versions of Qt would send posted events
        to objects with no thread; this does not happen anymore in Qt
        4.2).

- QThread
        Related to the above, QThread::currentThread() always returns
        a valid pointer (Previous versions of Qt would return zero if
        called from non-QThread threads; this does not happen anymore
        in Qt 4.2).

Database drivers
-------------------------

- Interbase driver
        Fix data truncation for 64 bit integers on 64 bit operating systems.

- MySQL driver
        When using MySQL 5.0.7 or larger, let the server do the text encoding
        conversion.
        Added UNIX_SOCKET connection option.
        Improved handling of TEXT fields.

- OCI driver
        Improved speed for meta data retrieval.
        Fix potential crash on Windows with string OUT parameters.
        Improve handling of mixed-case table and field names.

- ODBC driver
        Improved error reporting if driver doesn't support static result sets.
        Improved support for the Sybase ODBC driver.

- SQLite driver
        Also return temporary tables when using QSqlDatabase::tables().
        Improved handling of mixed-case field names.



QTestLib
-------------------------

- Added "-silent" options that outputs only test failures and warnings.
- Reset failure count when re-executing a test object
- Added nicer output for QRectF, QSizeF and QPointF

Platform-Specific changes
-------------------------

UNIX:

- QApplication
        Use Glib's mainloop functions when available to implement event dispatching.

- QTextCodec
        Use iconv(3) when available to implement the codec returned by
        QTextCodec::codecForLocale(). The new codec's name is "System"
        (i.e. QTextCodec::codecForLocale()->name() returns "System"
        when iconv(3) support is enabled).

AIX:

- Use "-qmkshrobj" compiler option to generate shared libraries instead of
  the deprecated makeC++SharedLib tool.

X11:

- Motif Drop support
        Support for drops from Motif applications has been refactored
        and is now working properly. QMimeData reports non-textual
        data offered in Motif Drops using a mime-type with the form
        "x-motif-dnd/ATOM", where ATOM is the name of the Atom offered
        by the Motif application.

Demos / Examples

        Created a new directory containing desktop examples and moved the
        Screenshot example into it.

Documentation

        Updated information about the mailing list to be used for porting
        issues (qt-interest).
