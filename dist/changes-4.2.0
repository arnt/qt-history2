Qt 4.2 introduces many new features as well as many improvements and
bugfixes over the 4.1.x series. For more details, see the online
documentation which is included in this distribution. The
documentation is also available at http://doc.trolltech.com/

The Qt version 4.2 series is binary compatible with the 4.1.x series.
Applications compiled for 4.1 will continue to run with 4.2.

****************************************************************************
*                           General                                        *
****************************************************************************

- dropped support for MySQL version 3.

- Auto-detect PostgreSQL and MySQL using pg_config and mysql_config on UNIX
  based systems in the configure script

- Added "-system-sqlite" option to configure to use the system's SQLite library
  instead of Qt's SQLite version.

- Updated Qt's SQLite version to 3.3.6.

- Added QT_ASCII_CAST_WARNINGS define that will output a warning on implicit
  ascii to unicode conversion when set. Only works if the compiler supports
  deprecated API warnings.

- Added Q_REQUIRED_RESULT to some functions. This macro triggers a warning
  if the result of a function is discarded. Currently only supported by gcc.

- Added QDataWidgetMapper class that can be used to make widgets data aware
  by mapping them to sections of an item model.

- Added QDesktopServices class that can be used to open urls.

- Improved Accessibility for item-based views and QTextEdit.

- Added the QtUndo framework for implementing undo/redo functionality in applications.

- Numerous bugs fixed in Designer: action editor, property editor.

- QWidget added to Designer's toolbox.

- Backup file is being created by Designer while overwriting the existing file.

- Starting from Qt 4.2 a new commercial licensing scheme will be
  supported. Customers who chose the new "metered license" will pay
  according to their monthly actual Qt usage and not according to how
  many Qt developers they have. This license scheme is initially only
  available for Linux, Windows and MacOS X.

- Compiler warnings with mingw g++ 3.4.6 removed

****************************************************************************
*                          Library                                         *
****************************************************************************

- QAbstractItemView
        Added possibility to copy elements to clipboard on read-only views.

- QComboBox
        Fixed drawing issues related to certain FocusPolicies.
        Now respects the ItemFlags of an Item (ItemIsEnabled,...).
        Fixed cases where popup could be shown completly on screen, but weren't.
        Added InsertAlphabetically insert policy.
        Fixed not displaying QPixmap as Icon.

- QFileDialog
        Fixed case where view mode got disabled.

- QFlags
        Added testFlag() convenience function.

- QApplication
        Added saveStateRequest() and commitDataRequest() signals so
        QApplication does not need to be subclassed for session management.
        Added a property styleSheet to set/read the application style sheet

- QAbstractItemModel
        When dropping rows only inserts rows that were actually dropped, not
        the continuous row count from first to last.
        Added supportedDragActions property which is now used by
        QAbstractItemView when starting a drag.
        When updating changed persistant index's ignore those that haven't
        actually changed.

- QAbstractItemView
	Make sure that the doubleClicked() signal is only emitted
	when the left button has been doubleclicked.
	Change setSelection(...) to work when given a non-normalized
	rectangle.
	Fixed regression for shift-selections in ExtendedSelection for
	all views.
        Added dragDropMode property and implemented move support in all of
        the views and models.

- QListWidget/QTreeWidget/QTableWidget
        When setting flags on a item the dataChanged() signal is now emitted
        Removed Unnecessary Q_ASSERT's

- QTableWidget
        Added clearContents() function which will not reset the headers.

- QTreeWidget
        Added indexOfTopLevelItem() const function.
        Inserting of items is now faster.
        Fix crash when calling QTreeWidgetItem::setData with a negative number.

- QTreeView
        When setting the root index to be the already current root index no
        action be be taken anymore.
        When hidding items the view no longer performs a complete relayout.
        Fix possible segfault in isRowHidden()
        Significantly speed up isRowHidden() for the common case.
        Faster row painting.
        After expanding, fetchMore is called on the expanded index giving
        the model a way to dynamically populate the children.

- QItemSelectionModel
        Overall speed up particularly when isSelected() is used.

- QComboBox
	Fix the type of the modelColumn property from bool to int.
	Update documentation to clarify between activated(),
	highlighted() and currentIndexChanged() and what they
	actually mean.

- QItemDelegate
        Use a widget's USER property to set and get the editor data.
        Removed Unnecessary Q_ASSERT's
        Add property to enable clipping when painting.
        When the model specifies a font, resolve the font over the existing
        one rather then replacing.

- QTemporaryFile
        Add support for file extensions and other suffix's.

- QLineEdit
        Unicode context menu gets shown if language extensions are present.

- QMessageBox
        Added detailedText property to be able to show additional information.

- QMetaObject
        Added userProperty().
        Added normalizedType().

- QMetaType
        Normalizes all type names before registering them.
        Handle Qt's integer typedefs (qint8, qint16, ...).

- QSqlQuery
        Added execBatch() for executing SQL commands in a batch. Currently
        only implemented for the Oracle driver.
        Fixed a case where executedQuery() would not return the executed query.

- QSqlRelationalTableModel
        Work when sorting a relational column when using the PostgreSQL driver.
        revertAll() now correctly reverts relational columns.

- QTabWidget
	Added missing Qt3Support signal selected().

- QToolTip
	Added convenience function hideText().

- QTreeView
        Fixed item being able to be expanded when all children are hidden.

- QVariant
        Added support for all QMetaType types.

- QMainWindow
        Dockwidgets can be tabbed.
        When a dockwidget hovers over a mainwindow, the mainwindow animates
        to show how it will accept the dockwidget if dropped.

- QAbstractScrollArea
        Added ability to set a corner widget.

- QLocale
        Fixed bug in the string-to-number functions which sometimes caused them
        to fail on negative numbers which contained thousand-separators.
        Implemented the numberOptions property, for specifying how
        string-to-number and number-to-string conversions should be performed.

- QPainter
	Fixed a crash when drawing cosmetic lines outside the paint device 
	boundaries.
	Fixed a pixel artifact when drawing cosmetic diagonal lines.
	Optimized drawing of cosmetic lines of between 315 and 360 degrees.

- QSettings
        Fixed bug causing bytearrays to be incorrectly stored on Win95/98/Me.

- quintptr and qptrdiff
        New integral typedefs have been added.

- QMutexLocker, QReadLocker, and QWriteLocker
        These classes now track the state of the lock they are
        holding. They will not unlock on destruction if unlock() has
        been called.

- QFileSystemWatcher
        New class that watches file and directories for changes.

- Qt::GroupSwitchModifier
        Added to the Qt::KeyboardModifiers enum. It represents
        e.g. the "AltGr" key found on many keyboards.

- Q3ListView
        Fixed possible crash in Q3ListView after calling clear().
        Fixed inconsistent drag and drop behaviour to Qt3.

- Q3Table
        Improved behaviour for combobox table elements.

- Q3ButtonGroup
        Fixed inconsistencies to Qt3 for exlusivness of elements.
        Fixed ID managment to be consistent with Qt3.

- Q3ListBox
        Fixed inconsistencies to Qt3 for selectAll().
        Fixed possible crash after deleting items.

- Qt::NoDockWidgetArea
        Added to the Qt::ToolBarArea enum

- Qt::NoToolBarArea
        Added to the Qt::DockWidgetArea enum

- QEvent::KeyboardLayoutChange
        New event type. This event is sent when the keyboard layout changes.

- QObject
        QObject::thread() will always return a valid thread, even if
        the object was created before QApplication or in a non-QThread
        thread.

        When QObject::thread() is zero, events are no longer sent to
        the object (Previous versions of Qt would send posted events
        to objects with no thread; this does not happen anymore in Qt
        4.2).

- QThread
        Related to the above, QThread::currentThread() always returns
        a valid pointer (Previous versions of Qt would return zero if
        called from non-QThread threads; this does not happen anymore
        in Qt 4.2).

- QString
        Added support for Case insensitive comparisons in QString::compare()

- QWidget
        Added a property styleSheet to set/read the widget style sheet

- QSystemTrayIcon
        New class that adds an icon into the system tray

- QCompleter
        New class that provide auto completion support.

- QMessageBox
        API overhaul to support for more than 3 buttons
        Added support to display buttons in platform dependant order
        Added support to display informative text using informativeText property
        Added detailedText property to display detailed text

- QButtonGroup
        Added pressed() and released() signals

Database drivers
-------------------------

- Interbase driver
        Fix data truncation for 64 bit integers on 64 bit operating systems.

- MySQL driver
        When using MySQL 5.0.7 or larger, let the server do the text encoding
        conversion.
        Added UNIX_SOCKET connection option.
        Improved handling of TEXT fields.

- OCI driver
        Improved speed for meta data retrieval.
        Fix potential crash on Windows with string OUT parameters.
        Improve handling of mixed-case table and field names.

- ODBC driver
        Improved error reporting if driver doesn't support static result sets.
        Improved support for the Sybase ODBC driver.

- SQLite driver
        Also return temporary tables when using QSqlDatabase::tables().
        Improved handling of mixed-case field names.



QTestLib
-------------------------

- Added "-silent" options that outputs only test failures and warnings.
- Reset failure count when re-executing a test object
- Added nicer output for QRectF, QSizeF and QPointF

Platform-Specific changes
-------------------------

Qtopia Core:

- Fixed issue with the VNC driver that prevented client applications to connect
  in some cases.
- Fixed a leak of shared memory segments in the VNC driver.
- Reduced CPU consumption in the VNC driver.
- Improved memory usage when using screen with depth less than 16 bits.
- Optimized CPU usage when widgets are partially hidden.
- Improved error handling when clients connects to the server.
- Introduced the QWSWindowSurface as a technique to create accelerated 
  QPaintEngines.
- Fixed leakage of semaphore arrays during an application crash.
- Fixed a build issue preventing the use of mmx instructions when available.
- Implemented the Qt::WA_PaintOnScreen flag for top-level widgets.
- Removed internal limitation of 10 display servers.
- Implemented support for multiple screens.
- Fixed the -exceptions configure switch.
- Implemented dynamic selection of the underlying driver for the VNC and 
  Transformed screen drivers.
- Improved detection of 18 bit framebuffers.
- Improved performance when using a rotated screen with 18 or 24 bit depth.
- New improved algorithm for mouse calibration which works for all screen
  orientations.
- Fixed an issue of getting delayed mouse events when using the vr41xx driver.
- Improved event compression in the vr41xx mouse handler.
- Fixed sn issue causing mouse release events with wrong positions when using a
  calibrated and filtered mouse handler on a rotated screen.
- Fixed 16 bit screens on big-endian CPUs.
- Implemented QWSEmbedWidget which enables window embedding.
- Made the tty device configureable for the LinuxFb screen driver.
- Improved speed of drawing gradients.
- Fixed a deadlock issue when using drag and drop and a calibrated mouse 
  handler.

UNIX:

- QApplication
        Use Glib's mainloop functions when available to implement event dispatching.

- QTextCodec
        Use iconv(3) when available to implement the codec returned by
        QTextCodec::codecForLocale(). The new codec's name is "System"
        (i.e. QTextCodec::codecForLocale()->name() returns "System"
        when iconv(3) support is enabled).

AIX:

- Use "-qmkshrobj" compiler option to generate shared libraries instead of
  the deprecated makeC++SharedLib tool.

X11:

- Motif Drop support
        Support for drops from Motif applications has been refactored
        and is now working properly. QMimeData reports non-textual
        data offered in Motif Drops using a mime-type with the form
        "x-motif-dnd/ATOM", where ATOM is the name of the Atom offered
        by the Motif application.

-       Added support to internally detect the current desktop environment.

Demos / Examples

        Created a new directory containing desktop examples and moved the
        Screenshot example into it.

Documentation

        Updated information about the mailing list to be used for porting
        issues (qt-interest).
Tools

	Fixed an issue preventing QVFb from starting on some systems.

****************************************************************************
*                          Tools                                           *
****************************************************************************
Assistant
        Middle clicking on links will open up new tabs
        Added "Find as you type" feature to search documentation page