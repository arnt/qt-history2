Qt 4.1.3 is a bug-fix release. It maintains both forward and backward
compatibility (source and binary) with Qt 4.1.0.

The Qt version 4.1 series is binary compatible with the 4.0.x series.
Applications compiled for 4.0 will continue to run with 4.1.

#################################
# TODO: 2006/01/25 - 2006/04/11 #
# Last change: 216658
#################################p

****************************************************************************
*                           General                                        *
****************************************************************************

Meta Object Compiler (moc)

Configure / Compilation
	Compile with NAS sound support enabled and no Qt 3 support.
	Fixed some issues with resolving absolute paths when configuring 
	Qt using "-prefix".

Porting (qt3to4)
	qt3to4 now adds the needed include directive for 
	qPixmapFromMimeFactory().
	Added rule for QDeepCopy.
	Improved handling of files with non-unix line endings.
	
Qt Designer
	Improved usability by letting the Find Icon dialog remember the last
	path visited.
	Fixed preview of DataTime and Date types.
	Generate correct .ui code when saving forms containing Q3DateEdit, 
	Q3TimeEdit, Q3ProgressBar and Q3TextBrowser.
	Fixed cursor position when editing text in QListWidget and QComboBox.
	Fixed code generation for custom widgets containing a QComboBox.
	Fixed but that prevented the windowTitle property for QDockWidgets from
	being designable.
	Fixed problem where designer would fail reflect QTreeWidget column changes.
	Fixed potential assert when font size is specified in points.
	Fixed potential crash when breaking the layout of an empty splitter.
	Ensure that designer saves the used pixmap function.
	Fixed potential crash on 64-bit platforms.
	Ensure that windows show when restarting after a crash.
	Improved geometry saving with multiple monitors.
	Fixed a potential crash when using QVBoxLayout with certain widget combinations.
	Fixed a bug where breaking splitter layout would not work after reopening the form.
	
Qt Assistant 
	Assistant now sets the proper encoding attribute when saving files,
	solving problems when viewing the page in some browsers.
	Improved window placement on startup.
	Improved performance of first-time keyword loading.
	
Qt Linguist / Internationalization
	Improved window placement on startup.
	Fixed problem where .ts files for Qt3 .ui files would be grayed out.

uic
	Fix code generating bug for forms in namepsaces preventing connections
	from being made.
	Split large generated strings to avoid compiler errors.
	Fixed a bug causing QLabel's font not to be set when using uic3.
	Fixed a dependency issue when ui-files are in a subdirectory.
	Ensure that uic3 -convert will convert connections.
	Ensure that uic3 will convert QDataTable and QSqlCursor to Qt3 support classes.
	
Qt Translation

Demos / Examples
	Fixed a bug in the Tooltips example when moving the cursor from one 
	circle to the next.
	Fixed a bug in the FTP example which caused the Download button to be
	incorrectly enabled/disabled.
	Fixed a crash in the FTP example.
	Made it easier to change the Arthur Widget properties in Designer.
	Fixed indexing issues in the spreadsheet demo.

****************************************************************************
*                          Library                                         *
****************************************************************************

General improvements
--------------------

- Fixed rendering of some GIF images.
- Popup and Tool widgets are now correctly blocked by a sibling modal dialog.
- Group-leader widgets are no longer blocked by non-child modal widgets.
- A parent modal dialog of a child modal dialog can no longer be brought on top of the child.
- Make sure modal widgets are modal when opened on a closing parent.
- Fix expose painting error when closing a child popup.
- Ensure that index widget pointers are maintained when a view is sorted.
- Ensure that closingDown() returns true when the application 
  objects are being destroyed.
- Fixed a potential crash in the PNG image handler.
- Improved stability of PDF font generation when embedding invalid fonts.

- Q3ButtonGroup
	Fixed incorrect behaviour when using setExclusive(false).

- Q3DockWindow
	Fixed placement when showing after being hidden.
	Fixed issue where calling show() on a hidden Q3DockWindow would make the 
	dockwindow overlap the existing one.
		
- Q3GroupBox
	Removed empty row at the bottom.

- Q3TextEdit
	Fixed some input method issues.
	
- Q3TextBrowser
	Fix bug that prevented some Unicode HTML files from beeing displayed.

- Q3ToolBar
	Ensure that toolbar separators are painted in all styles.

- Q3IconView
	Fixed a crash when disabling the view while an item is being edited.

- Q3ListView
	Fixed incorrect background color.
	Fixed painting issues with disabled items.
	Added support for tooltips.

- Q3Table
	Fixed a painting bug in the headers that occurred when a cell was
	selected.
	Ensure that checkbox backgrounds are filled.
	Fixed issue where calling selectRow() would not deselect current row 
	in SingeRow selection mode.
	
- Q3Header
	Fixed incorrect vertical text alignment.
	Fixed issue where a header label would be lost after swapping two column headers.
	
- Q3UrlOperator
	Fixed listChildren() for the case when setProtocol() haven't been 
	called.

- Q3WhatsThis
	Proper handling of dynamic what's this texts.

- Q3WidgetStack
	Fixed a potential crash.
	Fixed a bug preventing arrows from showing up in some cases.
	
- QAbstractButton
	Ensure that the QAbstractButton::setPixmap also sets the size of the pixmap.
	
- QAbstractItemView
	Fixed QStatusTipEvents for itemviews.
	Fixed a crash occurring when removing a row in a slot connected to
	selectionChanged().
	Fixed issue where itemChanged() would be emitted twice.
	Fixed issue where input methods would not work on editable itemviews.
	Fixed potential crash.
	Make sure the editor does not open when expanding and collapsing branches
	in QTreeView. Note that this change introduces a system dependent delay to 
	differentiate between double and single clicks.
	Make sure setIndexWidget() does not delete old widget if one is already set.
	Fixed a bug causing fetchMore() to report incorrect with empty models.
	Fixed an issue sometimes causing tab order to be incorrect after editing items.
	
- QAbstractSocket
	Fix potential crash when connecting to local sockets on BSD systems.

- QCheckBox
	Only emit the stateChanged() signal when the state actually change.
	Improved performance.
	
- QColorDialog
	Improved usability.
	
- QComboBox
	Correct escape of '&' in items.
	Reset input context when showing the popup.
	Fixed a missing update after model is reset.
	Make sure TextElideMode is respected.
	
- QCommonStyle
	Fixed incorrect values returned from sizeHintFromContents() for the header
	sections.
	
- QCheckBox
	Fixed some painting issues when using CDE of Motif style.

- QDatabase
 	Fixed bool values in prepared values in the MYSQL driver.
	Fixed use of stored procedures that returns a result set in MySQL 5.x.
	Fixed queries on tables with a LONG field type in Orcle databases.
	Fixed reading of large blobs from an Interbase database.
	Fixed binding of OUT values.

- QDir
	Fix infinite loop in rename() if renaming a directory without write permission.

- QDirModel
	Fixed possible assert on broken links.
	Fix bug preventing links to "/" on Unix system from working correctly.

- QFile
	Correct error reporting on flush() and close().
	Fix caching issues causing wrong file sizes to be returned in some cases.
	Ensure that QFile::write will fail when trying to write to a full disk.
	
- QFileDialog
	Fixed a bug that allowed selection of multiple files in 
	getOpenFileName().
	Give proper error message when deleting a directory failed.
	Fix bug preventing update when changing the FileMode.
	Added support for using several new characters, such as @{},*~^ in dialog file filters.
	Hide files when browsing in DirectoryOnly mode.
	
- QFtp
	Fix crash if FTP session got deleted in slot.

- QGridLayout
	All addWidget() functions now invalidates the layout.
	Fix minimum size for layouts that contains widgets that have height-for-width.

- QGroupBox
	Fixed some painting issues appearing on all styles except WindowsXP.
	Fixed keyboard handling if checkable.

- QHeaderView
	Fixed a bug preventing tooltips to be shown.
	Fixed a painting error occurring when the sort indicator was enabled
	and the column width got less than the indicator.
	Fixed a usability issue when resizing a small headers in a fixed 
	width QTreeWidget.
	Ensure correct size when the font change.
	Fixed a painting error when the header was hidden.
	Fixed a painting error when the user activated the context menu while
	pressing the left mouse key.
	Fixed bug giving the last section a resize cursor event though it cannot be resized.
	Icons in header views now respect the layout direction.
	Added support for setting a pixmap.
	Prevented views from deleting a view it does not own.
	
- QHttp
	Fixed issue where QHttp::setProxy() would only work for the first get() call.
	
- QIcon
	Ensure that visible icons on QToolButtons and QMenus are updated when the icon
	of a QAction changes.
	Fixed issue where actualSize() would return a bigger size than requested size. 
	
- QImage
	Fixed writing to a PNG file when the alpha value is premultiplied.
	Fixed a bug where dotsPermMeter was not preserved after 
	convertToFormat().

- QIODevice
	Fixed return values for Qt3 support members getch(), putch() and 
	ungetch().

- QImage
	Handle out of memory conditions gracefully.

- QItemDelegate
	Proper painting in inactive windows.
	Improved hit detection for QTreeWidgetItem checkboxes.
	
- QItemSelectionModel
	Emit currentChanged() when the current item is deleted.
	Fixed a bug causing the selection to be lost when an item was removed.

- QLibrary
	Added support for suffixes before library extensions.

- QLineEdit
	Make sure QT_NO_CLIPBOARD is respected.
	Fixed incorrect background color when disabled.
	
- QListView
	Fixed setRowHidden().
	Made descision of showing scrollbars independent of previous scrollbar
	state.
	Ensure that setting the icon position programatically work as intended.

- QLocale
	Fix bug causing toString() to return the wrong day of week in some cases.

- QMainWindow
	Fixed a crash when deleting QMainWindow::statusBar().
	Fixed bug causing wrong behavior when removing a QToolBar with removeToolBar()
	Fixed layout error when showing the status bar after the mainwindow.
	Fixed incorrect assert in QMainWindowLayout::dockWidgetArea().
	Fixed a bug making it impossible to have a dockwidget under two others in the 
	same dockwidget area.
	Fixed a regression preventing QMainWindow::insertToolBar() from inserting a toolbars 
	before an existing toolbar.
	Ensure that QDockWidget's maximumWidth() is honored.
	Ensure that window menu shortcuts are available before the window is shown.
	
- QMenu
	Let setActiveAction open a submenu to be consistent with QMenuBar.
	Let the Alt key close a context menu.
	Improve navigation behavior when using Home/End.  
	Improve navigation behavior when using up/down arrow on a menu with no 
	selected items.
	Fix crash when clicking on cleared disabled submenus.
	Ensured that only the currently highlighted submenu is visible.

- QMenuBar
	Improved calculation of sizeHint().
	Fixed a bug causing menu items after a spacer item to allways appear
	in the extension menu.
	Changed QMenuBar::activateItemAt() to behave more like Qt 3.
	
- QMotifStyle
	Draw QSlider tick marks.
	Fixed a bug preventing the focus frame background from being cleared.
	
- QMovie
	Improve frame delay calculations.

- QObject
	Fixed a crash when calling disconnect() on the last connection. 

- QPainter
	Optimized drawing of dotted lines.
	Fixed potential assert after calling setClipping(true).
	
- QPainter
	Fix bug causing contains(QPoint) to return the wrong answer in some cases.
	Fixed some painting issues with drawArc().
	Improved performance of drawLine and drawEllipse.
	
- QPen
	Fixed bug that caused wrong dash patterns to be drawn when changing style.

- QPicture
	Fixed a DPI issue when drawing into a QLabel.
	Make sure that the bounding rect is updated for all drawing operations.
	Improved stability when handling complex scenes.
	Make sure SVG files saved by QPicture includes namespace bindings in the SVG tag.
	
- QPlastiqueStyle
	Improved usability in QSlider by making the hit rectangle for mouse
	clicks wider. 
	Fixed animation of indeterminate progress bars.
	Draw lines for the hierarchal relationships in QTreeWidgets.

- QPrinter
	Optimized the size of PDF documents containing the same picture on 
	several places.
	Correctly handle systems with high resolution.
	Fixed a bug preventing the QPrinter::setup() function to display the 
	print dialog.
	Improved positioning of tiled pixmaps.
	
- QPrintDialog
	Fixed a crash when opening a page setup dialog on a PDF printer.

- QPushButton
	Make sure a pushbutton with flat property paints button contents.
	
- QProcess
	exitStatus is now reset after a sub-process crash.
	Fix bug causing the system to lock on X11 after calling startDetached() 65536 times.
	Allow QProcess to be used outside the GUI thread.
	
- QScrollArea
	Fixed problem where focusing the next child in a scroll area would make the 
	top left part of the child scroll out of view.
	
- QSettings
	Make it possible to the the "Default" registry entry on windows.

- QSortFilterProxyModel
	Fixed a crash when deleting rows.
	Improve stability by checking the model index for validity.

- QStandardItemModel 
	Make sure the columnCount is updated after calling reomveColumn.	

- QSplashScreen
	Made sure the font set with setFont() is actually used.

- QSqlRelationalTableModel
	Inserting using the OnManualSubmit edit strategy failed in some cases.
	Fix removeColumn() for columns that contain relations.

- QSqlTableModel
	Make the OnFieldChange edit stragy behave like OnFieldChange when inserting
	rows. 

- QStackedLayout
	Fixed a bug causing a focus change when calling removeWidget().

- QSvgRenderer
	Fixed rendering into a QPicture.
	Fixed issue where id attributes containing certain characters would 
	not render correctly.

- QSplashScreen
	Fixed rendering of pixmaps with alpha channels.

- QSplitter
	Ensure that non-collapsible children are respected.
	
- QSqlRelationalTableModel
	Fix mixed-case field names for relations.

- QSqlTableModel
	Fixed a bug preventing setting the value 'false' on a field of bool
	type.

- QSyntaxHighlighter
	Fixed a regression.

- QTabBar
	Only emit currentChanged() when the current index actually changes.

- QTabWidget
	Ensure that QTabWidget has the same behaviour as QStackedWidget when inserting 
	a page at index <= currentIndex().
	
- QTableView
	Fixed selection after rows/columns have been moved.
	Made descision of showing scrollbars independent of previous scrollbar
	state.
 	Fixed a bug causing mouse clicks to be lost.
	Fixed potential assertion when hiding columns in QTableView.
	Fixed potential crash if indexes are invalid and sections have been moved.
	
- QTabWidget
	Fixed drawing of icons.

- QTextCodec
	Fixed detection of locales with the '@' modifier.

- QTextDocumentLayout
	Make sure the right margin of a QTextBlock is filled with the background color.
	
- QTextEdit
	Fixed a bug causing setPlainText() to emit textChanged() three times.
	Fixed an infinte loop triggered if calling setHtml() inside 
	resizeEvent().
	Support pasting text with '\r' line feeds.
	Fixed a bug causing tables loaded from HTML to be saved incorrectly.
	Made it possible to delete images using backspace.
	Fixed some issues with justified text in combination with forced line breaks.
	Improved stability when setting a null cursor.
	Increased accuracy when moving text by drag and drop.
	
- QTextBrowser
	Fixed incorrect mouse cursor after right-clicking a link.
	Fixed incorrect mouse cursor in read only mode.
	Fixed issue where arrow cursor would override custom cursors.
	Fixed potential crash when inserting HTML.
	Improved support for relative links.
	Improved parsing of internal document anchors.
	
- QTextHtmlParser
	Fixed a bug in the whitespace handling.
	
- QTreeWidget
 	Fix bug where itemChanged() to be emitted with a null pointer.
	
- QTreeWidgetItemIterator
	Fixed incorrect assert when created around an empty QTreeWidget.
	
- QToolBar
	Fixed potential crash when resizing a tool bar with certain types of 
	widgets.
	Fixed a bug causing hidden widgets to be shown when the toolbar is moved.
	
- QToolTip
	Enable word breaking in rich-text tool tips.

- QTextStream
	Fixed a bug causing aboutToClose() to be connected to a NULL slot
	after calling unsetDevice().
	Fixed a bug causing read() or readLine() to sometimes return an empty string.

- QTreeView
	Fixed some drag and drop issues.
	Fixed a bug where the checkState of an item was unchanged after an
	itemClicked() signal was emitted.
	Made descision of showing scrollbars independent of previous scrollbar
	state.
	Fixed a bug causing horizontal scrolling when it only should scroll
	vertically.
	Fix Parent-child relation decoration painting error.
	Fix scrollbar visibility bug.	
	Fix branch indicator painting error in right-to-left mode.
	Fixed painting issues when using reverse layout on hidden headers.
	Fixed a bug preventing the view from being scrolled when column 0 was hidden.
	Fixed a bug causing some custom index widgets to be incorrectly placed.

- QTreeWidget
	Fixed selection after sortItems().

- QUdpSocket
	Fixed issue where unbuffered sockets would continuously emit readyRead().
	
- QUrl
	Fixed setPort() with given -1 as port number.
	setEncodedUrl() now escapes '[' and ']' after the host in tolerantMode
	More consistent handling of IP encoding.
	
- QUtf16Codec
	Fix bug in covertFromUnicode() on big-endian machines.

- QVariant
	Proper handling of variants of type "QList<QVariant>".

- QWidget
	Make sure application does not close if a widget with a visible parent exists.
	Fixed issue where QWidget::scroll() would scroll child widgets in some cases.
	Fixed painting issues when resizing very large child widgets.
	Fixed a bug preventing QWidget::setCursor() from working with platform 
	dependent cursors.
	
- QWorkSpace
	Set the correct position when maximizing a child with the NoBorder 
	hint.
	Fix MDI titlebar text wrapping in Plastique style.
	Fixed some painting issues when resizing child windows.
	Improved accuracy when resizing child windows.

- QXml
	Improved parsing of entities.
	
Platform-Specific changes
-------------------------

Windows:

- Use correct default font on Windows 2000 and later versions. This
  also fixes issues with international characters on some systems.

- Improved painting of rubber bands in XP and windows style.
  
- Calling showMaximixed() on a QDialog without minimize nor maximize buttons
  now behaves properly.
  
- Improved calculation of bounding rect for text.

- Fixed a bug making it possible to open multiple context menus using the 
  context menu key.

- Fixed writing of large files which failed on some systems.

- Optimized painting of ellipses.

- Fix problem where realease version of IDC

- Fix window state bug when restoring minimized maximized windows.

- Fix painting error on XP style tabs in right-to-left mode.

- Fix incorrect toolbar button spacing in XP and Windows style

- Fix bug making QFontiIfo::family() return an empty string.

- Tool windows are now resizable by default.

- Improved precision for tablet coordinates.

- Improved probing and detection for OpenGL overlay mode.

- More native look for QComboBox.

- Improved appearence of QToolButtons with menu.

- Fixed issue where certain fonts would be incorrectly replaced when printing.

- Fixed issue with minimized fixed size dialogs not responding to user input.

- Fixed issue preventing bitmap fonts from being drawn using a scaled painter.

- Make sure QMAKE_PRE_LINK is respected by qmake on Windows.

- Fixed a bug causing tabwidget contents to move when resized in XP style.

- Q3FileDialog
	Fixed potential crash in Q3FileDialog when resolving shorcuts.

- QPainter
	Fixed an issue where drawText() on a QPrinter sometimes would 
	be clipped away.
	Fixed drawEllipse() and drawLine() with negative coordinates.
	Fixed painting in OpaqueMode.
	Fixed a bug preventing rectangles with negative coordinates from being painted
	correctly by the raster engine.
	
- QAxBase
	Fixed a bug preventing proper interaction with Excel.

- QAxWidget
	Fixed conversion of short* and char* output parameters.

- QFile
	Make sure QFile::copy() returns false when target exists.
	
- QFileinfo
	Fix crash when calling exists() on a invalid shortcut.
	Fix absolute and canonical paths for files on the root.
	
- QGLWidget
	Fixed bug causing QGLWidget::RenderPixmap() to fail on 16-bit depths.
	
- QLibrary
	Enable loading of filenames with non-standard suffix.

- QLocale
	Added support for 'z' in time format strings.
	
- QPrinter 
	setPageSize() now correctly updates pageRect and paperRect.

- QTextBrowser
	Make sure QTextBrowser does not override QApplication::setOverrideCursor().
	
- QWindowsStyle
	Use the platform specific icons provided by the system when
	appropriate.


X11:

- Fixed a bug in QFontDatabase which made isFixedPitch() return 'true' for 
  certain non-fixed-pitch fonts, like "Sans Serif".
- Correctly handle the .so file extension on HP/UX IA-64.
- Fixed a crash when clicking a mouse button while dragging.
- Improve QProcess resource usage by making sure it closes all unused pipes.
- Make QFontEngine honor the autohinter setting from FontConfig. 
- Fixed a potential crash when drawing a large number of polygons/trapezoids.
- QtConfig
	Fixed missing update of window decorations.
	Fix assert when editing font family substitutions.
- Fixed X Error when closing application using the Motif style.
- Ensure that -style command line arguments are respected when using customized visual.
- Fixed issues with multiple painters on the same device.
- Improved backward compatibility for XCursors.
- Fixed a bug causing text to be clipped incorrectly when printed.
- Fixed issue where Qt::KeyPadModifier was not being set for non-numeric keypad keys.
- Ensure that files written by QSettings will only get user readable permissions by default.
- Ensure that QContextMenuEvent is also delivered when popup menu is already open.
- Fixed missing clipping of bitmaps on non-XRender systems.
- Fixed platform inconsistency with cosmetic pens.
- Fixed a potential crash when starting a QProcess for a non-existant process.

- QPainter
	Improved stability of QPainter::setClipPath().
	Fixed painting issues with transformed points drawn with an aliased cosmetic pen.
- QFontMetrics
	Fixed a bug in QFontMetrics::boundingRect().
	Fixed a potential crash in constructor when passed a zero paint device.
	
Mac OS X:

- Fixed issues with pasting of Japanese characters.
- Fixed a bug that made the close button unavailable on modal windows.
- Fixed icon rendering on x86 CPUs.
- Fixed painting of QBitmap into a QPixmap.
- Added the -framework and -F configure options.
- Fixed a bug where the menubar would not show all items.
- Fixed several drag and drop issues.
- Fixed a bug causing the font size to change when clicking 
  checkable toolbar buttons.
- Fixed a crash when using a Qt-plugin in a non-Qt application.
- Fixed use of newlines in a QMessageBox.
- Fixed painting of QGroupBox without any text.
- Fixed rendering of Qt::FDiagPattern and Qt::BDiagPattern.
- Fixed building with -no-qt3support.
- Fixed painting of the sort indicator.
- Fixed text placements in QGroupBox.
- Fixed icon placements in QPushButton in RTL languages.
- Fixed painting of read-only lineedits.
- Fixed animation of the Composition Modes demo.
- Fixed painting of QSpinBoxes smaller than 25 pixels.
- Fixed bug preventing the page ranges in the print dialog form being set.
- Fixed bug causing QPrinter::pageSize() to return wrong sizes. 
- Fix setting printer resolution.
- Improve quality of PDF output. 
- Ensure that calling setDirtyRegion from within dragMoveEvent 
  updates the view.
- Fixed bug preventing designer from being hidden using "Command + H".
- Fixed bug resulting in painting and performance issues for embedded QGLWidgets
 when using MacMetalStyle.
- Fixed a bug sometimes preventing widgets from showing.
- Ensure that the correct number of tick marks are painted on sliders.
- Fixed issue where Qt::FramelessWindowHint widgets were not visible in expose.
- Fixed a painting error when unchecking checkboxes.
- Fixed a bug causing file dialogs and frameless windows to appear outside screen bounds.
- Prevented windows from loosing shadow after using QRubberBand.
- Fixed a potential crash in QPixmap::copy() when given an area outside image bounds.
- Improved QToolButton arrow appearence.
- Fixed an issue causing QDateTime::toString(Qt::LocalDate) to return 
  incorrect dates.
- Improved performance of drawImage.
- Fixed sometimes incorrect drawing with QPainterPath.
- Improved key translation for non-latin keyboard layouts.

- QGLWidget
	Fixed update issues when QGLWidgets are embedded in a QTabWidget.
- QLibrary
	isLibrary() now supports .dylib libraries with version numbers.
- QWidget
	Fixed a platform inconsistency with QWidget::isActiveWindow().
- Designer
	Fixed some painting issues with widgets that are not laid out.
	Allow dragging of widgets in Designer when the toolbox is hidden.

Qtopia Core:

- Added configure options to build decorations and mouse drivers as plugins.
- Lots of new documentation.
- Added support for 8 and 16 bit screens.
- Fixed a bug that could result in painting errors after setting a new 
  decoration with QApplication::qwsSetDocoration().
- New skins for QVfb provided in the X11 package.
- Fixed the transparent corners of the window decoration using the plastique
  style.
- Removed dependency of shared memory when using QT_NO_QWS_MULTIPROCESS.
- Fix input method focus change problems.
- Look for fonts using QLibrary::LibrariesPath instead of PrefixPath
- Ensure that the smooth font flag is respected when parsing the 'fontdir' file.
- Fixed crash when Helvetica font is not available.
- Reduced memory usage with large fonts.
- Added support for QIODevice::canReadLine().
- Ensure that the Qtopia Core data directory owner is checked against the effective user.
- Fixed appearence of title bar font when application font has not been set.
- Ensure that correct keycodes are generated for SysRq and PrtSc
- Added support for transformed screens to QDirectPainter.
- Fixed issues with -title and -geometry command line arguments.
- Improved sound support.

3rd-party libraries
-------------------
