Qt 4.2.2 is a bug-fix release. It maintains both forward and backward
compatibility (source and binary) with Qt 4.2.0.

The Qt version 4.2 series is binary compatible with the 4.1.x and 4.0.x
series.  Applications compiled for 4.0 or 4.1 will continue to run with 4.2.

****************************************************************************
*                           General                                        *
****************************************************************************

Configuration / Compilation

  * Fixed issues with unresolved zlib symbols on aix-g++ resulting from a
    missing "-lz" in gui/Makefile.

  * Fixed compilation when an unsupported version of MySQL is auto-detected
    by the configure script.

  * Fixed QtDBus linking errors when compiling with the Intel C++ Compiler
    for Linux.

  * Fixed compilation when using Q_ARG and Q_RETURN_ARG macros with template
    types.

  * Make Qt compile with QT_NO_TOOLTIP and QT_NO_STATUSBAR

Demos / Examples

  * Fixed crash in the Settings Editor example resulting from entering
    certain input to a QTreeWidget using QLineEdit as an inline editor.

  * Fixed crash in the Ported Canvas example that occurred when creating a
    new canvas from one that was shrunk to its minimum size.

Qt Designer


****************************************************************************
*                          Library                                         *
****************************************************************************

General improvements
--------------------

- moc

  * Split long string literals in the generated code to work around
    limitations in MSVC.

  * Fixed crash on *BSD that could occur on invalid input.

- Text handling

  * Fixed a bug in the Bidi algorithm.

- QCalendarWidget

  * Fixed setting the text format(Repainting & date reset issues are corrected).

- QComboBox

  * Fixed wrong scroll arrows for the popup menu.

- QCompleter

  * Fixed issue where the highlighted() signal was emitted twice if
    setModel() was called twice.

  * Made QCompleter usable inside dialogs.

- QDataStream

  * Fixed streaming of qreal on (embedded) platforms where qreal values are
    not equivalent to double values; i.e., sizeof(qreal) != sizeof(double).

- QDialogButtonBox

  * QDialogButtonBox now sets the default button to the first button with
    the Accept role if no other button has explicitly been set as the
    default when it is shown. This is to stop a regression where using the
    autoDefault property with the Mac and Cleanlooks styles would set the
    Cancel button as the default.

- QDir

  * Fixed an assert in QDir::entryList() when reading file entries with
    names containing invalid Unicode encodings.

- QFileSystemWatcher

  * Fixed compilation on Linux/HPPA.

- QFSFileEngine

  * Fixed broken UNC path support.

- QIODevice

  * Fixed a data corruption bug when reading large blocks from devices
    opened in Text mode.

  * Fixed seeking to positions larger than INT_MAX.

- QDateTimeEdit

  * Fixed a bug that allowed you to type in larger numbers than 12 in 12-hour
    fields.

  * Fix a bug that aronse when QDate::shortMonthName() was longer than 3
    characters

  * Improve the handling of left-to-right languages in QDateTimeEdits

- QLineEdit

  * Fix scrolling in line edits with custom paddings

  * Fixed crash on Linux when the text contains QChar::LineSeparator.

- QLocale

  * Fixed crash on Mac OS X caused when one of the separator strings is an
    empty string.

- QObject

  * Fixed memory leak when calling QObject::moveToThread(0).

- QPlastiqueStyle

  * Disabled checked radio buttons and checkboxes are now rendered correctly.

- QProgressBar

  * Document that drawing of text in vertical progress bars is style dependent.

- QSqlRelationalTableModel

  * Ensured that the internal cache is correctly cleared when reverting
    inserted rows.

- QSvg

  * Improved parser robustness and parsing speed.

- QTextCodec

  * Fixed race-condition in QTextCodec::codecForLocale().

- QTextDocument

  * Fixed support for pixel font sizes in the HTML import

- QTextOption

  * Respect the textDirection property

- QTextStream

  * readLine() no longer treats "\r\n" as being two lines if called after
    QTextStream::pos().

- QToolButton

  * Fixed an issue where toolbutton popup menus were positioned incorrectly
    on multi-screen setups.

- QVariant

  * Fixed conversion of invalid variant to integer that sets ok to true.

  * Fixed a crash in the compatibility function QVariant::asByteArray()
    when called on a null variant.

- QWidget

  * Make setWindowTitle() work on hidden widgets that are never shown.
    (Fixing a bug in QtSingleApplication on Windows.)

  * Make QWidget::restoreGeometry() restore to the correct screen on
    multi-screen systems.

  * Fixed a bug where the stacking order of widgets would get out of sync
    and cause parts of or entire widgets not to be updated properly.

  * Fixed QWidget::setParent() to not recreate the native window ID of
    all children widgets when reparenting the parent to top-level.

- QWorkspace

  * Memory corruption, which caused crash inside Visual Studio.

- Accessibility

 * Fix potential assert when navigating menus while assistive tools are
   running

 * Fix crash when getting accessibility info from an item view without
   a model.

 * Fix item view accessibility bug where QAccessibleInterface::text()
   would return an empty string for child indexes larger
   than one.

- Item views

  * Fixed possible assert in QTreeView when painting if there were
    layouts pending.

  * Fixed possible segfault in QTreeView when a model emits layoutChanged().

  * Fixed QHeaderView and QTableView overflow issues when the length
    of all the rows or columns went over max int.

  * When reset is emitted by a QAbstractItemModel, QHeaderView will now
    always update the header count().

  * Fixed regression where QAbstractItemView::setRootIndex() wasn't
    always updating the view causing possibly painting errors.

  * Fixed QTreeWidget::setSortingEnabled() which could could cause
    incorrect painting.

  * Fixed incorrect scrolling in QHeaderView when items are hidden.

  * QDataWidgetMapper::mappedWidgetAt() now always returns the right
    mapped index for a widget no matter in which order they were inserted

  * QAbstractItemView::commitData() is made more robust by ignoring cases
    in which no valid index is associated with the editor

  * Fixed crash due to incorrect update of persistent model indexes in
    QSortFilterProxyModel::layoutChanged().

  * Fixed bug that could cause QSortFilterProxyModel::removeRows() and
    QSortFilterProxyModel::removeColumns() to remove the wrong source model
    items.

  * Fixed bug in QSortFilterProxyModel that caused stale proxy mappings to
    remain when source model items were removed and later reinserted,
    resulting in an incorrect proxy model.

  * Fixed bug in QSortFilterProxyModel that caused items to not appear
    in a QTreeView when adding children to a formerly childless source item.

  * Fixed painting bug for spanning cells in QTableView when the item
    background is transparent.

  * Fixed regression that caused incorrect propagation of Enter key press
    from a QAbstractItemView in editing mode.

  * Fixed erroneous expanding/collapsing of items in a QTreeView when
    double-clicking in the checkbox area of an item.

  * Fixed regression in QListWidget and QTreeWidget that caused persistent
    indexes to not be updated when sorting items.

  * Fixed crash in Q3IconView when selecting several items without releasing
    the left mouse button, then clicking the right mouse button.

  * Enter key can now be used to start item editing when the edit trigger
    is AnyKeyPressed.

  * Fixed crash in QTreeView::setRowHidden() when hiding and then un-hiding
    items in a hierarchy.

  * QAbstractItemView now emits itemEntered() consistently in all
    platforms.

  * Date and time editors are now initialized correctly with the current
    date and time.

  * QTableView tab focus handling has been improved. Although tab key
    navigation is enabled by default, you can tab out of a view if the
    model is either missing or unable to handle the key (e.g., an empty
    model).

- Graphics View

  * The background cache in QGraphicsView is now properly initialized to
    the full viewport.

  * Fixed incorrect cursor updates when moving between items.

  * QGraphicsItem::setMatrix() now properly clears the original item before
    repainting.

  * QGraphicsEllipseItem is now drawn as a full ellipse at angles ..., -720, -360,
    360, 720, ... only.

  * Fixed a crash when selecting one selectable item, then moving another
    movable item.

  * Fixed a crash during item construction caused by a pure virtual function
    call in QGraphicsItem.

  * Fixed mouse grabber bookkeeping problems in QGraphicsScene which fell out
    of sync when opening modal dialogs or popups from within a mouse event
    handlers.

  * QGraphicsScene now forwards unhandled events to QObject, allowing the use
    of timers in QGraphicsScene subclasses.

- Painting

  * Fixed memory corruption in QBitmap when source buffer was smaller than
    the destination buffer (RasterEngine).
  * Avoid rounding errors when drawing parts of a pixmap in the Quartz 2D engine.

  * Added caching of QGradient's colortable for QRasterPaintEngine.
    This means that if a gradient with the same stops and colors is used
    again, it will be quickly fetched from the cache, avoiding the
    expensive calculations of the color lookup table.

  * Specifying Qt::CustomDashLine without an actual pattern would
    crash on Windows and with QImage.

  * Improved numerical stability in the path stroker, fixing a crash when
    stroking paths containing curve segments whose control points are
    approximately on the same line.

  * Fixed bug in QRasterPaintEngine which would occasionally cause pixel
    errors when drawing polygons.

  * Fixed memory corruption in the QOpenGLPaintEngine when drawing complex
    polygons with a cosmetic pen.

  * Fixed bug in QRasterPaintEngine where extra lines would be drawn when
    drawing a path partially outside of the viewport using a dashed pen.

  * Fixed an ASSERT in QImage that triggered when reading certain paletted PNG
    files.

  * Fixed an issue where stroking and drawing aliased QPainterPaths with a
    non-cosmetic pen would produce incorrect results.

  * Fixed an issue where text was cut off when drawn into a QImage.

  * Fixed an issue where text drawn into a QPicture would get the position.

  * Fixed an issue where turning clipping on/off when drawing into a QImage
    did not have any effect.
      
	  * Improved performance when rendering vertical gradients.
	
- Style Sheets

  * Fixed crash when widget with stylesheet is reparented into widget with
    no style sheet.

  * Style Sheet performance improvements.

  * Do not clobber widget's custom palette when not styled using a style
    sheet.

  * Add support to specify alpha colors using rgba().

- SQL plugins

  * Fixed incorrect translation of error strings in the Oracle plugin
  * Make sure PQfreemem is called to free allocated buffers in PostgreSQL
  * Prevent possible trailing garbage for TEXT fields in the MySQL plugin

- Qt3 support

  * Fixed QPainter::xForm() and QPainter::xFormDev().


****************************************************************************
*                      Platform Specific Changes                           *
****************************************************************************

X11
---

  * Fixed positioning of text with stacking diacritics
  * Fixes for Indic text rendering
  * Fixed rendering of Greek and other latin scripts with
    XLFD fonts
  * Fix encoding detection of XLFD fonts
  * Fixed crash in QX11EmbedContainer.
  * QPrinter: Don't generate PDF on raw CUPS printers
  * When CUPS is not installed or reports 0 printers, QPrintDialog falls
    back to the printers set up for lpr/lprng.
  * Fixed papersize selection for cups
  * Do not generate floating point exceptions in the X11 paint engine
  * Fixed an endianess issue when drawing QImages
  * Fixed x errors when scaling/copying null pixmaps
  * Fixed an issue where bitmap/XLFD fonts where drawn garbled

  * Fixed X error when resizing to its minimum size.

  * Fixed widgets painted all black if the system palette contains X11
    color names.

  * Fixed loading plugins build in debug mode and linked against the
    default (release) build.

  * Fixed input of non-ascii chars in Qt widgets when application was
    run with empty LANG environment variable.

  * Fixed QApplication::hasPendingEvents() returning true even if no
    events were pending when using the Glib event dispatcher.

  * Fixed rare event loop dead-lock when posting many custom events to
    a receiver in another thread.

Windows
-------

  * Fixed drawing of the 0xad character with symbol fonts
  * Fixed stacking order of dialogs when child is created before parent.
  * Fixed printing to pdf when no printers are installed.
  * Fixed "print to file" dialog only showing once after canceling the dialog.
  * Fixed name clashes in enum values when running dumpcpp (ActiveQt)
  * Fixed a lock-up in QNetworkInterface for machines with multiple network
    interfaces.
  * Fixed a lock-up in QAbstractSocket::waitForReadyRead() when 0 was passed
    as a timeout value.

  * Fixed "Invalid HANDLE" exception when non-Qt thread that owns Qt
    objects terminates.

  * Fixed potential crash when calling QCoreApplication::applicationFilePath().
  * Fixed left-to-right positioning for menu items in XP style.
  
Mac OS X
--------

  * Fix flickering/disappearing widgets when the Qt::WA_MacMetalStyle attribute is set
  * Updated documentation to clarify QActionWidget behavior with regard to adding a
    QActionWidget to a menu in the menu bar and using the same menu as a pop-up.
  * Fix regression that made it impossible to drag images
    from non-Qt application to Qt Applications.
  * Return the correct QList<QUrl> when dragging Finder items to Qt applications.
  * Document how one can debug with debug frameworks.
  * Fix text selection in PDF generator
  * Fixed bug where the cursor would not switch to the arrow cursor
    over child widgets witch had that cursor set.
  * FramelessWindow modal dialogs had a title bar and was movable,
    now they don't.
  * Fix crash when enabling "Accessibility for assistive devices" in
    System Preferences while a Qt application was running.
  * Fix painting error where a one-pixel border at the bottom, right
    side of widgets wasn't being (re)painted correctly.
  * Fix item view scrolling bug, cell widgets weren't scrolled
    properly.

- QMacStyle

  * Fixed a crash that occurred when an invalid rectangle was given for an
    inactive button.

- QSystemTrayIcon

  * Properly handle the enable state of actions and emit aboutToShow() on the mac.



- Qtopia Core

  * Fixed delivery of mouse events to overlapping popups.
  * QVFb: Fixed crash when switching between certain skins.
  * QVFb: Fixed crash when recording.
  * QVFb: Fixed saving of animations on other partitions than /tmp.
  * VNC: Fixed use of the VNC driver with the Multi driver.
  * Fixed cursor state when switching between different screens.
  * Fixed performance bug when using an accelerated mouse cursor.
  * QCustomRasterPaintDevice::metric(): Fixed default values of PdmWidth and
    PdmHeight.
  * Fixed bug in QWidget::setMask().
  * Fixed calibration of rotated screens in the mousecalibration example.
  * Fixed setMode() in the screen drivers LinuxFb, VNC and Transformed.
  * Fixed crash when using QWSCalibratedMouseHandler with filter size < 3.
  * Fixed QScreen::alloc() for non-default colormaps.
  * Fixed a bug preventing a QWSEmbedWidget to being displayed if the remote
    widget was hidden before it got embedded.
  * Fixed screen area reservation when using the QDirectPainter.
  * Fixed compilation of the MySQL driver when using the minimum configuration.
  * Fixed a bug in the LinuxFB driver which prevented it to switch back to
    text mode if the application termintated using exit().

****************************************************************************
*                             QTestLib                                     *
****************************************************************************

   * Added missing documentation for QVERIFY2 macro
